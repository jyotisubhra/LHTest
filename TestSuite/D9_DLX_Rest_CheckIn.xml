<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="57c89e73-2aaf-49f1-b2ee-3b9d50ecf1c8" activeEnvironment="Default" name="D9_DLX_Rest_CheckIn" resourceRoot="${projectDir}" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="ef107ed0-9c21-4a98-b8a1-24d81dced77d" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:11180" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:endpoint>http://localhost:11199</con:endpoint><con:endpoint>http://localhost:8080</con:endpoint></con:endpoints><con:resource name="seats-allocation" path="/api/v2/checkin/passengers/seats" id="cd4bedd0-1c90-41cd-994e-a9dbab739300"><con:settings/><con:parameters/><con:method name="Method 1" id="bc832688-50c2-4413-a231-91687a66d967" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 400 500 502 503</con:status><con:params/><con:element xmlns:seat="http://localhost/api/v2/checkin/passengers/seats">seat:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>seatHandlingRQ</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>404 400 503</con:status><con:params/><con:element>seatHandlingRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>seatHandlingRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:seat="http://localhost/api/v2/checkin/passengers/seats">seat:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500 405</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="4dfca63d-d5ae-4999-aafd-ed1027369b37" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.160.7.144:8080</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method><con:method name="Method 2" id="e7cc695d-1f33-4eee-8546-282377f1a201" method="DELETE"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>seatHandlingRQ</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500 400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element>seatHandlingRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>seatHandlingRS</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>502 400 503</con:status><con:params/><con:element xmlns:seat="http://10.160.6.119/api/v2/checkin/passengers/seats">seat:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:seat="http://10.160.6.119/api/v2/checkin/passengers/seats">seat:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="13a07c77-6a55-4004-a3cc-691e5b30e8d2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.160.7.144:8080</con:endpoint><con:request>/api/v2/checkin/passengers/seats?action=deallocation</con:request><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="documents-generation" path="/api/v2/checkin/passengers/documents" id="2e800534-976a-4b30-bccb-812208e72626"><con:settings/><con:parameters/><con:method name="Method 1" id="c2871c58-4d8f-4ade-a5f8-931eb1c0ee10" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:doc="http://localhost/api/v2/checkin/travelers/documents">doc:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>DLX_DocumentGenerationRS</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>documentGenerationRQ</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 404 502 503 400</con:status><con:params/><con:element xmlns:doc="http://localhost/api/v2/checkin/travelers/documents">doc:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>500 502 400</con:status><con:params/><con:element>DLX_DocumentGenerationRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.160.7.144:8080</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Method 2" id="7ea1eaac-2999-4703-96d9-b1a78dc21773" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="cd347e3c-c335-4836-b61b-16e5beba9646" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="seats-deallocaion" path="/api/v2/checkin/passengers/seats" id="26eda5fc-5f73-4949-b8a5-14ef39863f58"><con:settings/><con:parameters><con:parameter><con:name>action</con:name><con:value>deallocation</con:value><con:style>QUERY</con:style><con:default>deallocation</con:default></con:parameter></con:parameters><con:method name="Method 1" id="b3e04cb7-a554-48f0-a4bb-157d180d66cd" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>seatHandlingRQ</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element>seatHandlingRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>seatHandlingRS</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:seat="http://localhost/api/v2/checkin/passengers/seats">seat:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 400 502</con:status><con:params/><con:element xmlns:seat="http://localhost/api/v2/checkin/passengers/seats">seat:Fault</con:element></con:representation><con:request name="Request 1" id="14dd2d2c-ab1b-4798-894e-794c07986fe0" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.160.7.144:8080</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="baggage" path="/api/v2/checkin/passengers/baggage/status/search" id="53444de1-3a88-4b72-8434-6b3e8768ccfc"><con:settings/><con:parameters/><con:method name="Method 1" id="a6fa6ddf-f4e3-4334-bb6f-59ecbcd96ac3" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>405</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.160.7.144:8080</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Method 2" id="99809210-a73d-4792-8ed6-028ff5150340" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:bag="http://localhost/api/v2/checkin/passengers/baggage">bag:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 400</con:status><con:params/><con:element xmlns:bag="http://localhost/api/v2/checkin/passengers/baggage">bag:Fault</con:element></con:representation><con:request name="Request 1" id="50417794-2436-46fc-94c0-2da1da700ea9" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="baggage" path="/api/v2/checkin/passengers/baggage" id="93ad2910-7a67-43a1-b31d-aa2d2049fae8"><con:settings/><con:parameters/><con:method name="Method 1" id="20166ced-1b16-40c6-9bab-e9c8d9355154" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>405 500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:bag="http://localhost/api/v2/checkin/passengers/baggage">bag:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>502 400 500</con:status><con:params/><con:element xmlns:bag="http://localhost/api/v2/checkin/passengers/baggage">bag:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="8226f32c-b118-4c68-ad95-8344eaaed1b5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:11199</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="travellers" path="/api/v2/checkin/passengers" id="dbe77918-cb61-4816-9784-34e9887cc6a7"><con:settings/><con:parameters><con:parameter><con:name>booking-reference</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>passenger-first-name</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>departure-airport</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>passenger-last-name</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="84d3d2fa-53fc-4379-8090-37854ed52414" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>passengerSearchRS</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element>passengerSearchRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:pas="http://localhost/api/v2/checkin/passengers">pas:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 400</con:status><con:params/><con:element xmlns:pas="http://localhost/api/v2/checkin/passengers">pas:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.160.7.144:8080</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:request></con:method><con:method name="Method 2" id="a81395ae-4726-429e-bea0-846da48abe95" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:pas="http://localhost/api/v2/checkin/passengers">pas:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 400 502 503 500</con:status><con:params/><con:element xmlns:pas="http://localhost/api/v2/checkin/passengers">pas:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>415 500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>passengerSearchRQ</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>passengerSearchRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="7175b7bf-7505-4add-93f0-ad263028fafe" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
    "passengers":
    {
        "passenger":
        [{
            "securityNumber": "001",
 
            "flights":
            {
                "flight":
                [{
                   "airlineCode": "LH",
         "flightNumber": "4803",
         "departureDate": "2017-10-27",
         "departureAirport": "FRA",
         "arrivalAirport": "MUC"
                }]
            }
        }]
    },
                                "resynch":"true"
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:request></con:method><con:method name="Method 3" id="a81395ae-4726-429e-bea0-846da48abe95" method="GET"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:pas="http://localhost/api/v2/checkin/passengers">pas:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 400</con:status><con:params/><con:element xmlns:pas="http://localhost/api/v2/checkin/passengers">pas:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>415</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="7175b7bf-7505-4add-93f0-ad263028fafe" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="documents-options" path="/api/v2/checkin/passengers/documentOptions" id="aefc0534-26fd-4c29-a117-b54d96b59fec"><con:settings/><con:parameters><con:parameter><con:name>passenger-id</con:name><con:value>2301C988000075D2FRA</con:value><con:style>QUERY</con:style><con:default>2301C988000075D2FRA</con:default></con:parameter><con:parameter><con:name>airline-code</con:name><con:value>LH</con:value><con:style>QUERY</con:style><con:default>LH</con:default></con:parameter><con:parameter><con:name>flight-number</con:name><con:value>92</con:value><con:style>QUERY</con:style><con:default>92</con:default></con:parameter><con:parameter><con:name>departure-date</con:name><con:value>2017-06-16 02:00</con:value><con:style>QUERY</con:style><con:default>2017-06-16 02:00</con:default></con:parameter><con:parameter><con:name>departure-airport</con:name><con:value>FRA</con:value><con:style>QUERY</con:style><con:default>FRA</con:default></con:parameter><con:parameter><con:name>arrival-airport</con:name><con:value>MUC</con:value><con:style>QUERY</con:style><con:default>MUC</con:default></con:parameter><con:parameter><con:name>type</con:name><con:value/><con:style>QUERY</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="48a81c39-e43e-4647-9aae-baf3d4f33e8c" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400 500 502</con:status><con:params/><con:element>documentOptionsRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>documentOptionsRS</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 502 404 503</con:status><con:params/><con:element xmlns:doc="http://localhost/api/v2/checkin/documentOptions">doc:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:doc="http://localhost/api/v2/checkin/documentOptions">doc:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json"><con:settings/><con:endpoint>http://10.160.7.144:8080</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:request></con:method><con:method name="Method 2" id="ddd7f41f-1f85-4a60-a831-8c5992d9546e" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 503 404 502 500</con:status><con:params/><con:element xmlns:doc="http://localhost/api/v2/checkin/documentOptions">doc:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:doc="http://localhost/api/v2/checkin/documentOptions">doc:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="95358c0e-4d0a-4947-b1e7-8dfa26603f68" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "identification": [{"passengerId": "2301CAB300005D09ZRH"}],
   "bound": {"flight": [   {
      "departureAirport": "ZRH",
      "airlineCode": "LX",
      "departureDate": "2018-04-18",
      "type": "OPERATING",
      "arrivalAirport": "GVA",
      "flightNumber": "2804"
   }]}
}
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="flights" path="/api/v2/checkin/flights" id="eea1f94d-1b36-4924-b8a3-4589d9f782dc"><con:settings/><con:parameters><con:parameter><con:name>marketing-airline</con:name><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>flight-number</con:name><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departure-date</con:name><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>departure-airport</con:name><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>arrival-airport</con:name><con:style>QUERY</con:style></con:parameter></con:parameters><con:method name="Method 1" id="fe0416a6-f606-4033-8436-dd400675894c" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>flightStatusRQ</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500 400</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>502 500 404 400</con:status><con:params/><con:element>flightStatusRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>flightStatusRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:flig="http://10.160.6.119/api/v2/checkin/flights">flig:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 400 503 502</con:status><con:params/><con:element xmlns:flig="http://10.160.6.119/api/v2/checkin/flights">flig:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="516de7c6-4778-4671-93cb-9b9a381145c8" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:11199</con:endpoint><con:request>{"flights": {"flight": [
      {
      "airlineCode": "LH",
      "departureAirport": "ZRH",
      "departureDate": "2017-10-17",
      "arrivalAirport": "FRA",
      "flightNumber": "1183"
   },
      {
      "airlineCode": "LH",
      "departureAirport": "FRA",
      "departureDate": "2017-10-17",
      "arrivalAirport": "ADD",
      "flightNumber": "598"
   }
   ,
      {
      "airlineCode": "ET",
      "departureAirport": "ADD",
      "departureDate": "2017-10-18",
      "arrivalAirport": "DAR",
      "flightNumber": "827"
   }
]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/flights</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>marketing-airline</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry></con:parameterOrder></con:request></con:method><con:method name="" id="8a251d2e-9e99-42c1-a937-0034dc890c43" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:flig="http://10.160.6.119/api/v2/checkin/flights">flig:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>flightStatusRS</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element>flightStatusRS</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:flig="http://10.160.6.119/api/v2/checkin/flights">flig:Fault</con:element></con:representation><con:request name="Request 1" id="68992857-dfcf-4446-aae3-15866dab95c9" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://10.160.7.144:8080</con:endpoint><con:request/><con:originalUri>http://10.160.6.119/api/v2/checkin/flights</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="departure-date" value="2017-06-23+02:00"/>
  <con:entry key="flight-number" value="92"/>
  <con:entry key="departure-airport" value="FRA"/>
  <con:entry key="arrival-airport" value="MUC"/>
  <con:entry key="marketing-airline" value="LH"/>
</con:parameters><con:parameterOrder><con:entry>marketing-airline</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="passangerAcceptance" path="/api/v2/checkin/passengers/checkin-record" id="0ce0bf18-8c3f-46fc-acbb-505597cad43d"><con:settings/><con:parameters/><con:method name="Method 1" id="3ba3a2b9-a6d3-447d-a0b9-b7471879d0e7" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>checkinRecordRQ</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400 500 404 502</con:status><con:params/><con:element>checkinRecordRS</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 400 502 503 500</con:status><con:params/><con:element xmlns:chec="http://localhost/api/v2/checkin/passengers/checkin-record">chec:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200 202</con:status><con:params/><con:element xmlns:chec="http://localhost/api/v2/checkin/passengers/checkin-record">chec:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>checkinRecordRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.160.7.144:8080</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Method 2" id="c9dda946-f529-4f3a-bb5d-cdd01e85dd48" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:chec="http://localhost/api/v2/checkin/passengers/checkin-record">chec:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:chec="http://localhost/api/v2/checkin/passengers/checkin-record">chec:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/><con:element>checkinRecordRQ</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>checkinRecordRS</con:element></con:representation><con:request name="Request 1" id="67c185a1-d73e-4675-85cd-8a953081a670" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://10.160.7.144:8080</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="passangerAcceptance-passangerId" path="/api/v2/checkin/passengers/${passengerId}" id="edff2f61-7a6a-40dd-a940-da4c01ff8302"><con:settings/><con:parameters/><con:method name="Method 1" id="335c141c-8dc1-455d-b20a-f27555c478be" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>500 404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element>passengerSearchRS</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/xml</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element>passengerSearchRS</con:element></con:representation><con:request name="Request 1" id="24ae8fb1-7759-43a6-bf5b-556b10521a12" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Content-Type" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://10.160.7.144:8080</con:endpoint><con:request/><con:originalUri>http://localhost/api/v2/checkin/passengers/</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource><con:resource name="search" path="/tdprest-2/api/air/search" id="83630862-c2a3-43a4-b4b0-962f7bf3ee01"><con:settings/><con:parameters/><con:method name="Method 1" id="d1377c6b-0785-4c4f-a75f-c547fce6d9ff" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:lfs="http://localhost/tdprest-2/api/air/lfs">lfs:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 500 404</con:status><con:params/><con:element xmlns:lfs="http://localhost/tdprest-2/api/air/lfs">lfs:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="fc93d1fd-d818-4177-9a06-1cef0a4cbfdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:11180</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="price" path="/tdprest-2/api/air/price" id="28857d2a-46df-41fc-a7cf-b1043b70fad1"><con:settings/><con:parameters/><con:method name="Method 1" id="25deb23f-0210-46af-9d93-c965eb0f66be" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:lfs="http://localhost/tdprest-2/api/air/lfs">lfs:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 500 404</con:status><con:params/><con:element xmlns:lfs="http://localhost/tdprest-2/api/air/lfs">lfs:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="7a0c7fb8-77a2-4a7d-bc74-6fa38b48272e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:11180</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="merchandizing" path="/tdprest-2/api/merchandizing" id="d207e251-6315-452f-8ef8-3b39354158d3"><con:settings/><con:parameters/><con:method name="Method 1" id="238943e3-46fd-4521-8c58-86fcb9ef250d" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:mer="http://localhost/tdprest-2/api/merchandizing">mer:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="d033340f-436d-4ee8-bb13-30629bc33752" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:11180</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="merchprice" path="/tdprest-2/api/merchandizing/price" id="1871a86b-10fb-4800-a1df-844267d186c0"><con:settings/><con:parameters/><con:method name="Method 1" id="c152b9f5-cb54-4c83-a4d9-2ff27d6159f0" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:pric="http://localhost/tdprest-2/api/merchandizing/price">pric:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="eccb3c50-e0e7-49a4-8e52-e87e00ddaa90" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:11180</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="reservations" path="/tdprest-2/api/reservations" id="f6fbd229-7040-41c0-9ec6-de438a5faca7"><con:settings/><con:parameters/><con:method name="Create" id="3e1946cf-e31b-4f29-8a81-90fefbcbe9ee" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:res="http://10.160.6.148/tdprest-2/api/reservation">res:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:res="http://10.160.6.148/tdprest-2/api/reservation">res:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="b32de06b-7078-4e30-b75c-a10a97a887b7" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:11180</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Update" id="05cf7870-74a0-4f21-99b6-e36b2dadbd2a" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="deef09f7-570c-4b97-ba53-ddc660226e34" mediaType="application/json" postQueryString="false"><con:settings/><con:endpoint>http://localhost:11180</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="fulfillment" path="/tdprest-2/api/fulfillment" id="058a9789-5a7b-49d3-b133-18d078b16e1a"><con:settings/><con:parameters/><con:method name="Method 1" id="3ec3e2fd-12c9-4d72-a01a-8e347ba3514b" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>404 400</con:status><con:params/><con:element xmlns:met="http://localhost/fulfillment/methods">met:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:met="http://localhost/fulfillment/methods">met:Response</con:element></con:representation><con:request name="Request 1" id="215cfb8c-3d50-499b-9b0e-b7a612c57762" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:11180</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="methods" path="/tdprest-2/api/fulfillment/methods" id="f06759a1-5c06-4273-9cbb-f4bc111f9b6b"><con:settings/><con:parameters/><con:method name="Method 1" id="d4fc740a-de23-436b-9db5-c36fee876391" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:met="http://localhost/fulfillment/methods">met:Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>500 400</con:status><con:params/><con:element xmlns:met="http://localhost/fulfillment/methods">met:Fault</con:element></con:representation><con:request name="Request 1" id="28a24590-a35c-4078-8025-c04989871e4d" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:11180</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="orders" path="/tdprest-2/api/fulfillment/orders" id="887bab77-6aaa-45f0-9a6b-950dbd0336be"><con:settings/><con:parameters/><con:method name="Method 1" id="9951923f-083c-4f25-8dfa-686be8e2f281" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ord="http://localhost/tdprest-2/api/fulfillment/orders">ord:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 404</con:status><con:params/><con:element xmlns:ord="http://localhost/tdprest-2/api/fulfillment/orders">ord:Fault</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:urn="urn:fulfillment.schema.v2.rest.tdp.datalex.com">urn:fulfillmentRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:urn="urn:fulfillment.schema.v2.rest.tdp.datalex.com">urn:fulfillmentRS</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="d238cb87-bf23-4f08-a39c-81dfe51594cf" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:11180</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Baggage_Status" path="/api/v2/checkin/passengers/baggage/status/search" id="5c36b493-d3eb-4b2c-8922-101db3d06c58"><con:settings/><con:parameters/><con:method name="Method 1" id="90d7ac91-e4d1-4920-930f-86cda05dff1a" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="2829d84f-36a6-4e4e-9ae3-78e03b3b437a" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="regulatory-data" path="/api/v2/checkin/passengers/regulatory-data" id="56dc46bc-3391-4cc1-9c10-3b3acf520c8a"><con:settings/><con:parameters/><con:method name="Method 1" id="332e5458-9fd2-4b4d-8ca0-b2b6e4137789" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:reg="http://localhost/api/v2/checkin/passengers/regulatory-data">reg:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>502 503</con:status><con:params/><con:element xmlns:reg="http://localhost/api/v2/checkin/passengers/regulatory-data">reg:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="34e8970b-8b10-4221-b17f-ae3fc0826b36" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="Session ID" path="/core-internal/v1/session" id="83630862-c2a3-43a4-b4b0-962f7bf3ee01"><con:settings/><con:parameters/><con:method name="Method 1" id="d1377c6b-0785-4c4f-a75f-c547fce6d9ff" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/html;charset=UTF-8</con:mediaType><con:status>404</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:lfs="http://localhost/tdprest-2/api/air/lfs">lfs:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400 500 404</con:status><con:params/><con:element xmlns:lfs="http://localhost/tdprest-2/api/air/lfs">lfs:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="fc93d1fd-d818-4177-9a06-1cef0a4cbfdd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:11180</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:savedRecentRuns>1</con:savedRecentRuns><con:testSuite id="f2d223bd-dc38-44e6-9f76-dec0ae07917a" name="CheckIn_E2E"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="17b7b55a-bf79-40c0-9aaf-e07d0e98bf6d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T001_Fulfill_CheckIn_ LH" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="32200ed8-e33e-41b9-8759-e299006ac571" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="2a79a96e-093e-44d6-9fa9-a4b820da0565"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("date_1", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("date_2", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="a2c7e2d4-29a1-4d90-84ab-a6bff2a0392f"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH_A-FRA_MKI-K_DE</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2017-12-05</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>MAN</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value>2017-12-12</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value>948</con:value></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Infants</con:name><con:value>1</con:value></con:property><con:property><con:name>Cabin</con:name><con:value>Business</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>122088A85ADG0002</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>date_1</con:name><con:value>2018-06-12</con:value></con:property><con:property><con:name>date_2</con:name><con:value>2018-06-19</con:value></con:property><con:property><con:name>passengerFirstName</con:name><con:value>Kuno</con:value></con:property><con:property><con:name>passengerLastName</con:name><con:value>Keineahnung</con:value></con:property><con:property><con:name>bookingReference</con:name><con:value>VZYD6W</con:value></con:property><con:property><con:name>numberOfOnDemandTags</con:name><con:value>1</con:value></con:property><con:property><con:name>bagTagNumber</con:name><con:value>4220011037</con:value></con:property><con:property><con:name>AirlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>userSessionId_LH</con:name><con:value>5aeea7f62d888907b6f471f7</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="TransferProperties" id="299ee290-246b-41b5-8f28-df5ac963d0f5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>userSessionID</con:name><con:value>5b1e567f2d88891618a7725f</con:value></con:property><con:property><con:name>itineraryPriceRef_1</con:name><con:value>/air/search/5b1e568b2d88891618a77260/itinerary-prices/4_13</con:value></con:property><con:property><con:name>itineraryPriceRef_2</con:name><con:value/></con:property><con:property><con:name>offerRef</con:name><con:value>/offers/5b1e56ef2d88891618a77286</con:value></con:property><con:property><con:name>m_offerRef_ID</con:name><con:value>/merchandizing/58d12b05d6abab5f3c182a65/offers/ANCILLARYAIR_1</con:value></con:property><con:property><con:name>formOfPayment</con:name><con:value>/fulfillment/methods/5b1e56fe2d88891618a77288/payment-forms/CREDITCARD/2</con:value></con:property><con:property><con:name>cardType</con:name><con:value>/fulfillment/methods/5b1e56fe2d88891618a77288/payment-forms/CREDITCARD/2/payment-card-types/AP</con:value></con:property><con:property><con:name>allocationRef</con:name><con:value>/fulfillment/methods/5b1e56fe2d88891618a77288/payment-allocations/1</con:value></con:property><con:property><con:name>optionAllocationRef</con:name><con:value>/fulfillment/methods/5b1e56fe2d88891618a77288/payment-allocations/1/option-allocations/4</con:value></con:property><con:property><con:name>air_amount</con:name><con:value>115.88</con:value></con:property><con:property><con:name>m_offerRef</con:name><con:value>/offers/58d12b06d6abab5f3c182a67</con:value></con:property><con:property><con:name>m_travelerCompositionUri</con:name><con:value>/offers/58d12b06d6abab5f3c182a67/ancillaryair/traveler-compositions/0</con:value></con:property><con:property><con:name>travelerCompositionUri</con:name><con:value>/offers/5b1e56ef2d88891618a77286/air/traveler-compositions/0</con:value></con:property><con:property><con:name>reservationRef</con:name><con:value>/reservations/A000001116</con:value></con:property><con:property><con:name>paymentRef</con:name><con:value/></con:property><con:property><con:name>offerRef1</con:name><con:value>/offers/5b1e56ef2d88891618a77286</con:value></con:property><con:property><con:name>travelerCompositionUri1</con:name><con:value>/offers/5b1e56ef2d88891618a77286/air/traveler-compositions/1</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PassengerID</con:name></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Air_Search" id="dcbc475b-ba50-4bc1-a657-2d2350838739"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Search" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false" timeout="600000000000000000000000000000000000000"><con:description>Call POST /air/lfs to get tinerary price reference with LX, One way Domestic flight for one adult  and no cabin as input</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617300"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617300"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617300_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "languageCode": "${TCProperties#language}",
    "originDestination": [
        {
            "origin": {
                "date": "${TCProperties#date_1}",
                "windowBefore": "0",
                "windowAfter": "0",
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Origin}"
                }
            },
            "destination": {
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Destination}"
                }
            }
        }
    ],
    "travelerComposition": [
        {
            "count": "${TCProperties#Number_of_Adults}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/ADT"
            }
        },
        
        {
            "count": "${TCProperties#Number_of_Children}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/CHD"
            }
        }
    ],
    "pos": "${TCProperties#POS}",
    "preferences": {
        "cabin": {
            "cabinRef": {
                "uri": "/info/air/cabin-classes/${TCProperties#Cabin}"
            }
        }
    }
}
</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f56d4c53-af85-43bf-90a7-5bf1a91421f2" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c971de40-b89e-45fa-834a-3855f135ce0c" name="JsonPath Count - No Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="803cd1e9-3a86-4f64-bea8-02c34b958368" name="JsonPath Existence Match - ItineraryPriceRef"><con:configuration><path>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2758936c-e002-49fe-b1f0-359382509cf2" name="Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8d233546-71cc-478d-a6b2-92f29f5b7697" name="Script Assertion 3"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ItineraryPriceRef" id="ae495a93-4067-457a-914e-08affee79af3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>itineraryPriceRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>.search.recommendedOffer[0].itineraryPriceRef[0].uri</con:sourcePath><con:targetType>itineraryPriceRef_1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userSessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionID</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Air_Price" id="f5b41c07-c2e0-4ec6-a232-dbe4e47491f2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/price" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Price" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/price to get Offer URI</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617316"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617316"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617316_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{     "userSessionId": "${TransferProperties#userSessionID}",     
	"languageCode": "${TCProperties#language}",
	"itineraryPriceRQ": {         
		"price": "true",         
		"itineraryPriceRef": [            
		{                 
			"uri": "${TransferProperties#itineraryPriceRef_1}"             
			} 
			]     },     
			"pos": "${TCProperties#POS}" }
			</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66918970-0946-42b3-88f9-c78fda3f2310" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="a423a547-5b8d-4063-8b9a-d2444abccab4" name="JsonPath Count - NoErrors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b689c70d-bcdc-47b2-adea-5b0f534b3dd3" name="JsonPath Existence Match - OfferRef"><con:configuration><path>$.offer[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="20c6818a-5902-4150-8911-9f7f5ae8649a" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_OfferRef" id="76219f94-ba8c-4542-9887-f86e826814f6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerCompositionUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[0]</con:sourcePath><con:targetType>travelerCompositionUri</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerComposition1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[2]</con:sourcePath><con:targetType>travelerCompositionUri1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Reservation_Post" id="559fffde-7e18-4174-9bd3-4d173aed624a"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/reservations" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reservation_Post" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617331"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617331"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617331_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"traveler": [
		{
			"uri": "/travelers/0",
			"id": "0",
			"dateOfBirth": "1977-07-20-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "${TCProperties#passengerFirstName}",
				"last": "${TCProperties#passengerLastName}",
				"titleRef": {
					"uri": "/info/traveler-name-titles/MR",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/1",
					"id": "1",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/1.EAT",
						"id": "1.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"postalCode": "90210",
					"stateCode": "OK",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/ADT",
				"id": "ADT"
			}
		}, {
			"uri": "/travelers/1",
			"id": "0",
			"dateOfBirth": "2011-04-21-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "GC",
				"last": "Test",
				"titleRef": {
					"uri": "/info/traveler-name-titles/Master",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/2",
					"id": "2",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/2.EAT",
						"id": "2.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"stateCode": "OK",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/CHD",
				"id": "CHD"
			}
		}
	],
	"item": [
		{
			"book": true,
			"offerRef": {
				"uri": "${TransferProperties#offerRef}"
			}
		}
	],
	"travelerAssignment": [
		{
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri}"
			},
			"travelerRef": {
				"uri": "/travelers/0"
			}
		}, {
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri1}"
			},
			"travelerRef": {
				"uri": "/travelers/1"
			}
		}
	]
}</con:request><con:originalUri>http://10.160.6.148/tdprest-2/api/reservation</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c9d5b6d0-156a-40bc-aed3-f931f2096fab" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="57898c12-aaae-4bcb-86d6-deaad57c6349" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="955f0a2f-3f2a-45ce-880d-1256e35792a1" name="JsonPath Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="267c181b-0d35-4260-8521-74000c582e14" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ReservationRef" id="a785f452-8fc3-404b-9cc5-9a9a50c667bc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>reservationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Reservation_Post</con:sourceStep><con:sourcePath>$.reservation.uri</con:sourcePath><con:targetType>reservationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Methods" id="7c0b4c06-ea2f-4cf5-b020-ff1890cd0cba"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/tdprest-2/api/fulfillment/methods" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Methods" id="c71f685c-8bb6-417f-9e46-bbffbe66f544" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617347"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617347"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617347_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${#TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"reservationRef": {
		"uri": "${TransferProperties#reservationRef}"
	}
}</con:request><con:originalUri>http://localhost/fulfillment/methods</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f4911e4e-8cde-4acb-9cd5-32c46e76441b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="eef435b3-daaf-4ffe-9489-ee43b6150fec" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="46d611a1-663b-42ae-bb1b-f7ac275764c4" name="JsonPath Count  Warnings"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3c9f471a-5103-4d9d-84d2-e53d8845487d" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_FOP_Data" id="3444a181-b143-4d64-9a83-ef623950b04a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>formOfPayment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].uri[0]</con:sourcePath><con:targetType>formOfPayment</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cardType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentCard.type[?(@.id=='AP')].uri[0]</con:sourcePath><con:targetType>cardType</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>allocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation[0].paymentAllocationRef.uri</con:sourcePath><con:targetType>allocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>optionAllocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation.optionAllocationRef.uri[0]</con:sourcePath><con:targetType>optionAllocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>air_amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.amount</con:sourcePath><con:targetType>air_amount</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Currency</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.currency</con:sourcePath><con:targetType>Currency</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Orders" id="ca7e1db8-6b52-4d79-8e77-abfdff4f698f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/fulfillment/orders" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Orders" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617363"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617363"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617363_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"application": {
"wrapCallback": false,
"callback": [
{
"type": "COMPLETE",
"url": "http://57.20.104.193:29443/PaymentHub/post"
}, {
"type": "FAILURE",
"url": "http://errorurl.com"
}, {
"type": "CANCEL",
"url": "http://cancelurl.com"
}
],
"browserInfo": {
"acceptHeader": "application/xml",
"userAgent": "Java/1.8.0_101"
}
},

	"languageCode": "${TCProperties#language}",
	"pos": "${#TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"paymentDetails": {
		"id": 1,
		"uri": "/payment-details/1",
		"customerRef": {
			"uri": "${TransferProperties#reservationRef}/customers/1"
		},
		"paymentFormRef": {
			"uri": "${TransferProperties#formOfPayment}"
		},
		"paymentCard": {
			"number": "${TCProperties#Token number}",
			"expiryDate": "2018-12-31",
			"holderName": "Paul Ziert",
			"issuingCountry": "CA",
			"typeRef": {
				"uri": "${TransferProperties#cardType}"
			},
			"securityCode": 123,
			"billingAddressRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/addresses/1"
			},
			"phoneRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/phones/1"
			},
			"emailRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/emails/1"
			}
		}
	},
	"payment": {
		"allocationRef": {
			"uri": "${TransferProperties#allocationRef}"
		},
		"option": {
			"detailsRef": {
				"uri": "/payment-details/1"
			},
			"allocationRef": {
				"uri": "${TransferProperties#optionAllocationRef}"
			},
			"value": {
				"money": {
					"amount":"${TransferProperties#air_amount}",
					"currency": "${TransferProperties#Currency}"
				}
			}
		}
	}
}</con:request><con:originalUri>http://localhost/tdprest-2/api/fulfillment/orders</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="867da589-56f7-4d9e-9dd2-675187865f9a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fec7caae-1863-471e-bb22-396c480f9b54" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="b17fbd0a-19d1-4ed3-898a-9f44c5cd0a63" name="JsonPath Count  Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d5881854-0cad-42da-b102-0bc61b80f12b" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer PNR" id="6d8c32ab-b605-4541-bbc1-1da22efe3e2e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PNR</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation..bookingReference.value[0]</con:sourcePath><con:targetType>bookingReference</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>FirstName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.traveler.name..first[0]</con:sourcePath><con:targetType>passengerFirstName</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LastName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.traveler.name..last[0]</con:sourcePath><con:targetType>passengerLastName</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionId_LH</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AirlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.item.air.itinerary.originDestination.flightSegment.operatingAirlineRef.id[0]</con:sourcePath><con:targetType>AirlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="f40e05f0-e997-458a-88bd-a70b26b0903b"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617378"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617378"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH_A-FRA_MKI-K_DE"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617378_9051"/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#passengerLastName}",

          "passengerFirstName": "${TCProperties#passengerFirstName}",

          "bookingReference": "${TCProperties#bookingReference}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#AirlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="PassengerDataRetrieval_ReqResCapture" id="db47d4ce-88be-4e49-8ae9-bf1652297d93"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Retrieve_Flight Status" id="abbf6c86-85b7-4b8e-a6b5-1c18dfa60564"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers[0].passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Flight Status Retrieval" id="63d10f46-b7f8-44e8-80a2-cf3375e09e96"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/api/v2/checkin/flights" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Flight Status Retrieval" id="68cca128-58c4-49af-a7d6-14576cf80779" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623140"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623140"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH_A-FRA_MKI-K_DE"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623140_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"flights": {"flight": [{
   "departureAirport": "MUC",
   "airlineCode": "LH",
   "departureDate": "2018-04-25",
   "type": "OPERATING",
   "arrivalAirport": "HAM",
   "flightNumber": "2058"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/flights</con:originalUri><con:assertion type="JsonPath Match" id="548e96a4-7922-4dd8-bcec-5fbdd685324a" name="JsonPath Match"><con:configuration><path>.flightStatus.flightLeg.status[0]</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="b6454136-b51f-4097-bdb6-ba29626af6c5" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Flight Status Retrieval_ReqResCapture" id="e486e198-dda5-4952-924d-a58d49512dfe"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Seat_Allocation" id="4c35997a-9af9-40d0-8c32-a3dcc95ae1b0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers[0].passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Seat_Allocation_Without_Seat" id="cd60ce0d-18a6-4c4d-beb3-5266a7b66f7f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/seats" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Seat_Allocation_Without_Seat" id="4dfca63d-d5ae-4999-aafd-ed1027369b37" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617399"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617399"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH_A-FRA_MKI-K_DE"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617399_9051"/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"passengers": {"passenger": [{
   "flight": [   {
      "departureAirport": "MUC",
      "airlineCode": "LH",
      "departureDate": "2018-04-24",
      "type": "OPERATING",
      "arrivalAirport": "HAM",
      "flightNumber": "2058"
   }],
   "identification": {"passengerId": "2301DAC000008C04MUC"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/seats</con:originalUri><con:assertion type="JsonPath Match" id="ad6ba87b-7ecc-4080-a74e-d167b3c0a2b3" name="VerifyResponse" disabled="true"><con:configuration><path>.seatOperation[0].flightSeats[0].responseCode.nativeResponseId</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="fa8bf116-1ab0-44d0-97d7-fb8d979de012" name="Contains"><con:configuration><token>seat</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" id="c7c0c73b-5480-4555-a1a9-5b636a5d01f0" name="XPath Match"><con:configuration/></con:assertion><con:assertion type="JsonPath Count" id="cbd4f2d5-c291-4789-8cd4-16809b720049" name="JsonPath Count"><con:configuration><path>.seatHandling.passenger.flight.seat.seatNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Seat Allocation_ReqResCapture" id="2fba545c-3c90-41a6-a5ae-e6be7d8dcff6"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer Property_Seat DeAllocation" id="15d8cd4d-24bd-45fc-a30f-3268884950cb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers[0].passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>seat</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Seat_Allocation_Without_Seat</con:sourceStep><con:sourcePath>.seatHandling.passenger.flight.seat.seatNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.seat.seatNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Seat_Deallocation" id="8e33d4f1-e4af-40f2-9468-71aa631fbc36"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/seats" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Seat_Deallocation" id="13a07c77-6a55-4004-a3cc-691e5b30e8d2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617414"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617414"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH_A-FRA_MKI-K_DE"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617414_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"passengers": {"passenger": [{
   "flight": [   {
      "seat": {"seatNumber": "12A"},
      "departureAirport": "MUC",
      "airlineCode": "LH",
      "departureDate": "2018-04-24",
      "type": "OPERATING",
      "arrivalAirport": "HAM",
      "flightNumber": "2058"
   }],
   "identification": {"passengerId": "2301DAC000008C04MUC"}
}]}}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/passengers/seats</con:originalUri><con:assertion type="JsonPath Match" id="8ab6027e-f727-4ef5-b555-16b55f182412" name="VerifyResponse" disabled="true"><con:configuration><path>.seatOperation[0].flightSeats[0].flight.airlineCode</path><content>LH</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="9142765c-39d4-4c40-ab14-cb3b0d4db34a" name="JsonPath Count"><con:configuration><path>.seatHandling.passenger.flight.seat.seatNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Seat De-allocation_ReqResCapture" id="b97098de-fb4b-4d19-a181-7ef9a2c5d0d5"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Baggage Registration" id="698f5be8-1369-4d95-86c5-771a8f69e50b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="aaf4adb1-04d3-48ff-82a2-4167bca7b323"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617430"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617430"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH_A-FRA_MKI-K_DE"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617430_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DAC000008C04MUC"},
   "baggageRegistrationData":    {
      "OnDemandTags": {"quantity": "${TCProperties#numberOfOnDemandTags}"},
      "bound": [{"flight": [      {
         "departureAirport": "MUC",
         "airlineCode": "LH",
         "departureDate": "2018-04-24",
         "type": "OPERATING",
         "arrivalAirport": "HAM",
         "flightNumber": "2058"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration" disabled="true"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="343bb8e5-4344-47f4-ab4d-25f93f0ac609" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2b39eade-f396-49b6-bc4c-ee231e9d9cf5" name="Contains 1"><con:configuration><token>bagTagNumber</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Baggage Registration_ReqResCapture" id="3a9adcf6-7c8b-4c53-96cc-2968141cae18"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Baggage Status Retrieval" id="324a6e3e-7a95-4f30-9a6c-320572ddbec2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Status_Retrieval" id="9d0d4d68-5e0d-47e2-813c-ce602179bd91"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage/status/search" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Status_Retrieval" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617446"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617446"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH_A-FRA_MKI-K_DE"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617446_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "flight":    {
      "departureAirport": "MUC",
      "airlineCode": "LH",
      "departureDate": "2018-04-24",
      "type": "OPERATING",
      "arrivalAirport": "HAM",
      "flightNumber": "2058"
   },
   "identification": {"passengerId": "2301DAC000008C04MUC"}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Count" id="2c9bffb5-0fc8-49ab-9de4-24bf4f9b3ec5" name="JsonPath Count"><con:configuration><path>.baggageStatusSearch.baggageStatus.bagTagNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="5b993b82-652e-43b6-9567-f0897eafcec0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Baggage Status_ReqResCapture" id="cd405479-4adc-4e08-b2eb-ccdc167efe00"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="e5d60314-452f-49cd-b242-3018821a08aa"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>deperturedate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Depertureairport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="1ce6392c-903b-4aef-bf97-2beb055fb127"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false" timeout="600000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617461"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617461"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH_A-FRA_MKI-K_DE"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617461_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"passengers": {
   "passenger": [{"identification": {"passengerId": ""}}],
   "bound": [   {
      "flight": [      {
         "departureAirport": "",
         "airlineCode": "",
         "departureDate": "",
         "type": "OPERATING",
         "arrivalAirport": "",
         "flightNumber": ""
      }],
      "sequence": "0"
   }]
}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Passenger Acceptance_ReqResCapture" id="c9060542-9a3f-4a30-a6d3-b103a7202d8c"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Options" id="43a08ec1-df9a-495e-929d-478f899c7534" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber	</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Options 1" id="a6b37f84-c36b-43b1-aa66-f223c1a71bd8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="88c1b4ee-be89-42a5-bbc4-0723f018f8a2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617479"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617479"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617479_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": [{"passengerId": "2301CAB3000093A5MUC"}],
   "bound": {"flight": [   {
      "departureAirport": "MUC",
      "airlineCode": "LH",
      "departureDate": "2018-04-11",
      "type": "OPERATING",
      "arrivalAirport": "HAM",
      "flightNumber": "2058"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Options_ReqResCapture" id="b16dc298-acd8-4e2a-b020-5020976796ba"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_RAW DATA" id="62558a12-dfb2-4b4f-8439-eeb74383eb96"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode </con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_RAW DATA" id="f1d1787c-35e4-4b03-a5f9-d705d84a2584"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617495"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617495"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617495_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAC000008C04MUC"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "MUC",
            "airlineCode": "LH",
            "departureDate": "2018-04-24",
            "type": "OPERATING",
            "arrivalAirport": "HAM",
            "flightNumber": "2058"
         }],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="VerifyCheckinStatus"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Generation_RAW-DATA_ReqResCapture" id="5722f4d9-1041-48e4-a0f9-f67850c253d9"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_PDF" id="b6150c34-8b45-48e7-8add-036d409c24df"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_PDF" id="25e51ad9-3a2b-4610-bc1d-057f2ccff898"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617511"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617511"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617511_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAC000008C04MUC"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "MUC",
            "airlineCode": "LH",
            "departureDate": "2018-04-24",
            "type": "OPERATING",
            "arrivalAirport": "HAM",
            "flightNumber": "2058"
         }],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "HOME_PRINTED",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Generation_PDF_ReqResCapture" id="8208e47b-4b8b-40a3-ad92-9cf7dd1f4b1f"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Email" id="bf37ad2e-27b7-4eb3-a2ea-30e33884876f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_Email" id="16b356db-90ae-411e-8898-66d4cb751918"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9056"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617526"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617526"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617526_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DACD00002121MUC"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "MUC",
            "airlineCode": "LH",
            "departureDate": "2018-05-07",
            "type": "OPERATING",
            "arrivalAirport": "HAM",
            "flightNumber": "2058"
         }],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_EMAIL",
   "documentId": "docID12345",
   "contactMethod": {"email": "didhiti.kumar@in.ibm.com"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Generation_Email_ReqResCapture" id="2937ee49-dfc1-423a-a003-b939ccedd102"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Phone" id="4505046e-8ed8-465e-9265-31b596f2d1d1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_Phone" id="34390855-f2f0-4086-8f2d-2b9472a12a78"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617542"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617542"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617542_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAC000008C04MUC"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "MUC",
            "airlineCode": "LH",
            "departureDate": "2018-04-24",
            "arrivalAirport": "HAM",
            "flightNumber": "2058",
            "type": "OPERATING"
         }],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_PHONE_NUMBER",
   "documentId": "docID12345",
   "contactMethod": {"cellphone": {"phoneNumber": "009434139201"}}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Generation_Phone_ReqResCapture" id="1f5cab5d-67e5-4cdb-b934-845005c65f7b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_BAGTAG Generation_RAW DATA" id="8c2dbe30-981f-42c1-a9e4-99140d344461"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate	</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistration.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>bagTagNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="BAGTAG Generation_RAW DATA" id="15b3308e-6cdd-4744-b75a-fa53254b6242"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="BAGTAG Generation_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617557"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617557"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617557_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAC000008C04MUC"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "MUC",
            "airlineCode": "LH",
            "departureDate": "2018-04-24",
            "type": "OPERATING",
            "arrivalAirport": "HAM",
            "flightNumber": "2058"
         }],
         "documentType": [         {
            "bagTagNumber": ["${TCProperties#bagTagNumber}"],
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>baggageTag</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" id="6630bcc5-a535-494f-bd67-427fc962fa17" name="PDF" disabled="true"><con:configuration><token>documentData</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="BAGTAG Generation_RAW-DATA_ReqResCapture" id="0a819d99-75fe-484c-8cff-5072f0794310"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_BAGTAG Generation_PDF" id="f0e429e0-f585-4eee-8414-8c7375e1c34a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistration.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>bagTagNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="BAGTAG Generation_PDF" id="b14b9f62-b35f-48b8-8dd3-b5840c9511ab"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="BAGTAG Generation_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617573"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617573"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617573_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAC000008C04MUC"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "MUC",
            "airlineCode": "LH",
            "departureDate": "2018-04-24",
            "arrivalAirport": "HAM",
            "flightNumber": "2058",
            "type": "OPERATING"
         }],
         "documentType": [         {
            "bagTagNumber": ["${TCProperties#bagTagNumber}"],
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "HOME_PRINTED",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>baggageTag</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="BAGTAG Generation_PDF_ReqResCapture" id="7c37418e-af0f-4e3d-ba19-e9a08b42c74f"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture" id="d8459a51-7056-43d0-b856-667e1c53af36" disabled="true"><con:settings/><con:config><script>

import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
//def currentStepInd = context.currentStepIndex
//log.info(currentStepInd)
def index = context.currentStepIndex
//log.info("Index"+index)
def steps = context.testCase.getTestStepList();

//log.info("No of Test steps :"+steps.size());
def testCaseOutput = testRunner.testCase.getName()
//log.info("testCaseOutput"+testCaseOutput)

for (int i=1;i&lt;steps.size();i=i+1){
	def step= context.testCase.getTestStepAt(i)
if (step instanceof RestTestRequestStep){
	//log.info("true")
	//def request = context.testCase.getTestStepAt(i).testRequest
	def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(i).name + "#Response}"
    def response = context.expand( ResponsetestCaseNameHolder )
	def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(i).name + "#Request}"
	def request = context.expand( RequesttestCaseNameHolder )
//log.info(request)

def resultExtension = ".doc"
//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 
//log.info( projectDir +  "/"+ testCaseOutput)
//log.info(testRunner.testCase.getTestStepAt(i).name)
//log.info(resultExtension)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(i).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(i).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(i).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(i).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(i).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(i).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(i).name, resultExtension,  response)

//log.info(testCaseOutput)


}
}
public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_BAGTAG Generation_Email" id="349ae810-0f15-419f-8931-e4375b91a2a3" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>tagnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData.tagNumber[0]</con:sourcePath><con:targetType>bagTagNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="BAGTAG Generation_Email" id="f2823ff1-1972-405a-8ee4-d66a27566b88" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="BAGTAG Generation_Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617589"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617589"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617589_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DA30000060F0FRA"},
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber": ["${TCProperties#bagTagNumber}"],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight": [         {
            "departureAirport": "FRA",
            "airlineCode": "LH",
            "departureDate": "2017-12-01",
            "arrivalAirport": "MUC",
            "flightNumber": "4253"
         }]}
      }]
   }]},
   "mobileRecipient": {"email": "didhiti.kumar@in.ibm.com"},
   "documentMedia": "MOBILE_VIA_EMAIL",
   "id": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="BAGTAG Generation_Phone" id="7a194767-b876-43da-9686-d73206ed6838" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="BAGTAG Generation_Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617604"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617604"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617604_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DA30000060F0FRA"},
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber": ["${TCProperties#bagTagNumber}"],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight": [         {
            "departureAirport": "FRA",
            "airlineCode": "LH",
            "departureDate": "2017-12-01",
            "arrivalAirport": "MUC",
            "flightNumber": "4253"
         }]}
      }]
   }]},
   "mobileRecipient": {"phoneNumber": "0038761034544"},
   "documentMedia": "MOBILE_VIA_PHONE_NUMBER",
   "id": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_BAGTAG Generation_Phone" id="976ecaa5-2a10-4346-9501-4812cc83281b" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>tagnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData.tagNumber[0]</con:sourcePath><con:targetType>bagTagNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Baggage_Registration" id="f5295581-fe26-459a-847c-6e2d96254933" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522147617253_9051"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522147617620"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522147617620"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522147617253_9051"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522147617620_9051"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DA7D0000AF1AZRH"},
   "baggageRegistrationData":    {
      "OnDemandTags": {"quantity": "${TCProperties#numberOfOnDemandTags}"},
      "bound": [{"flight": [      {
         "departureAirport": "ZRH",
         "airlineCode": "LX",
         "departureDate": "2018-02-16",
         "arrivalAirport": "FRA",
         "flightNumber": "1068"
      },
      {
         "departureAirport": "FRA",
         "airlineCode": "LH",
         "departureDate": "2018-02-16",
         "arrivalAirport": "DUS",
         "flightNumber": "74"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration" disabled="true"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="343bb8e5-4344-47f4-ab4d-25f93f0ac609" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2b39eade-f396-49b6-bc4c-ee231e9d9cf5" name="Contains 1"><con:configuration><token>bagTagNumber</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>8542</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="331b04b3-9fa0-47d3-b5fb-89d74e2dfc58" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T002_Fulfill_CheckIn_ LX" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="e6c5ddda-1e3e-4e2b-86b6-68065c0cc3d9" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="a23903d6-970b-4722-90ec-8ab995d0bdf5"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 0
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("date_1", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("date_2", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="9fdf55e3-bc52-4b56-829a-c6dfa2ba1694"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LX_A-FRA_MKI-K_CH</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2017-12-05</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>GVA</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value>2017-12-12</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value>948</con:value></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Infants</con:name><con:value>1</con:value></con:property><con:property><con:name>Cabin</con:name><con:value>Business</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>520000A3LBI60007</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>date_1</con:name><con:value>2018-06-11</con:value></con:property><con:property><con:name>date_2</con:name><con:value>2018-06-18</con:value></con:property><con:property><con:name>passengerFirstName</con:name><con:value>Kuno</con:value></con:property><con:property><con:name>passengerLastName</con:name><con:value>Keineahnung</con:value></con:property><con:property><con:name>bookingReference</con:name><con:value>O2VEPB</con:value></con:property><con:property><con:name>numberOfOnDemandTags</con:name><con:value>1</con:value></con:property><con:property><con:name>bagTagNumber</con:name><con:value>0724007779</con:value></con:property><con:property><con:name>AirlineCode</con:name><con:value>CL</con:value></con:property><con:property><con:name>userSessionId_LX</con:name><con:value>5b1e57cf2d88891618a7728e</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Air_Search" id="3fda5625-c0da-4ed5-ab64-e0bf90ebe75c"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Search" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false" timeout="60000000000000000000000000000000000000000000000000"><con:description>Call POST /air/lfs to get tinerary price reference with LX, One way Domestic flight for one adult  and no cabin as input</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623031"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623031"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623031_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "languageCode": "${TCProperties#language}",
    "originDestination": [
        {
            "origin": {
                "date": "${TCProperties#date_1}",
                "windowBefore": "0",
                "windowAfter": "0",
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Origin}"
                }
            },
            "destination": {
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Destination}"
                }
            }
        }
    ],
    "travelerComposition": [
        {
            "count": "${TCProperties#Number_of_Adults}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/ADT"
            }
        },
        
        {
            "count": "${TCProperties#Number_of_Children}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/CHD"
            }
        }
    ],
    "pos": "${TCProperties#POS}",
    "preferences": {
        "cabin": {
            "cabinRef": {
                "uri": "/info/air/cabin-classes/${TCProperties#Cabin}"
            }
        }
    }
}
</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f56d4c53-af85-43bf-90a7-5bf1a91421f2" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c971de40-b89e-45fa-834a-3855f135ce0c" name="JsonPath Count - No Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="803cd1e9-3a86-4f64-bea8-02c34b958368" name="JsonPath Existence Match - ItineraryPriceRef"><con:configuration><path>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2758936c-e002-49fe-b1f0-359382509cf2" name="Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8d233546-71cc-478d-a6b2-92f29f5b7697" name="Script Assertion 3"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ItineraryPriceRef" id="34ddb3f0-1d77-4896-ba85-5ddc13bf70ef"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>itineraryPriceRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>.search.itineraryPrice[1].uri</con:sourcePath><con:targetType>itineraryPriceRef_1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userSessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionID</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Air_Price" id="af7264ae-e05b-41e9-93ea-63c797884ca2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/price" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Price" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/price to get Offer URI</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623062"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623062"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623061_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{     "userSessionId": "${TransferProperties#userSessionID}",     
	"languageCode": "${TCProperties#language}",
	"itineraryPriceRQ": {         
		"price": "true",         
		"itineraryPriceRef": [            
		{                 
			"uri": "${TransferProperties#itineraryPriceRef_1}"             
			} 
			]     },     
			"pos": "${TCProperties#POS}" }
			</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66918970-0946-42b3-88f9-c78fda3f2310" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="a423a547-5b8d-4063-8b9a-d2444abccab4" name="JsonPath Count - NoErrors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b689c70d-bcdc-47b2-adea-5b0f534b3dd3" name="JsonPath Existence Match - OfferRef"><con:configuration><path>$.offer[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="20c6818a-5902-4150-8911-9f7f5ae8649a" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_OfferRef" id="bb9ac20e-0bb5-4bb8-b7a9-48abbeeddb93"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerCompositionUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[0]</con:sourcePath><con:targetType>travelerCompositionUri</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerComposition1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[2]</con:sourcePath><con:targetType>travelerCompositionUri1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Reservation_Post" id="a98760c4-40f8-48a0-aa4d-f1f7bc00fcc5"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/reservations" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reservation_Post" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false" timeout="900000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623075"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623075"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623075_1108"/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"traveler": [
		{
			"uri": "/travelers/0",
			"id": "0",
			"dateOfBirth": "1977-07-20-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "Kuno",
				"last": "Keineahnung",
				"titleRef": {
					"uri": "/info/traveler-name-titles/MR",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/1",
					"id": "1",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/1.EAT",
						"id": "1.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"postalCode": "90210",
					"stateCode": "OK",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/ADT",
				"id": "ADT"
			}
		}, {
			"uri": "/travelers/1",
			"id": "0",
			"dateOfBirth": "2011-04-21-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "GC",
				"last": "Test",
				"titleRef": {
					"uri": "/info/traveler-name-titles/Master",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/2",
					"id": "2",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/2.EAT",
						"id": "2.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"stateCode": "OK",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/CHD",
				"id": "CHD"
			}
		}
	],
	"item": [
		{
			"book": true,
			"offerRef": {
				"uri": "${TransferProperties#offerRef}"
			}
		}
	],
	"travelerAssignment": [
		{
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri}"
			},
			"travelerRef": {
				"uri": "/travelers/0"
			}
		}, {
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri1}"
			},
			"travelerRef": {
				"uri": "/travelers/1"
			}
		}
	]
}</con:request><con:originalUri>http://10.160.6.148/tdprest-2/api/reservation</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c9d5b6d0-156a-40bc-aed3-f931f2096fab" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="57898c12-aaae-4bcb-86d6-deaad57c6349" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="955f0a2f-3f2a-45ce-880d-1256e35792a1" name="JsonPath Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="267c181b-0d35-4260-8521-74000c582e14" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ReservationRef" id="cff11915-6c8a-41df-9486-48a66385b950"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>reservationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Reservation_Post</con:sourceStep><con:sourcePath>$.reservation.uri</con:sourcePath><con:targetType>reservationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="properties" name="TransferProperties" id="678e361d-e073-48c9-8105-60c4a576bda7"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>userSessionID</con:name><con:value>5b1e59d02d88891618a7741d</con:value></con:property><con:property><con:name>itineraryPriceRef_1</con:name><con:value>/air/search/5b1e59d22d88891618a7741e/itinerary-prices/1_2</con:value></con:property><con:property><con:name>itineraryPriceRef_2</con:name><con:value/></con:property><con:property><con:name>offerRef</con:name><con:value>/offers/5b1e5a562d88891618a774a1</con:value></con:property><con:property><con:name>m_offerRef_ID</con:name><con:value>/merchandizing/58d12b05d6abab5f3c182a65/offers/ANCILLARYAIR_1</con:value></con:property><con:property><con:name>formOfPayment</con:name><con:value>/fulfillment/methods/5b1e5a6b2d88891618a774cc/payment-forms/CREDITCARD/2</con:value></con:property><con:property><con:name>cardType</con:name><con:value>/fulfillment/methods/5b1e5a6b2d88891618a774cc/payment-forms/CREDITCARD/2/payment-card-types/MC</con:value></con:property><con:property><con:name>allocationRef</con:name><con:value>/fulfillment/methods/5b1e5a6b2d88891618a774cc/payment-allocations/1</con:value></con:property><con:property><con:name>optionAllocationRef</con:name><con:value>/fulfillment/methods/5b1e5a6b2d88891618a774cc/payment-allocations/1/option-allocations/2</con:value></con:property><con:property><con:name>air_amount</con:name><con:value>837.3</con:value></con:property><con:property><con:name>m_offerRef</con:name><con:value>/offers/58d12b06d6abab5f3c182a67</con:value></con:property><con:property><con:name>m_travelerCompositionUri</con:name><con:value>/offers/58d12b06d6abab5f3c182a67/ancillaryair/traveler-compositions/0</con:value></con:property><con:property><con:name>travelerCompositionUri</con:name><con:value>/offers/5b1e5a562d88891618a774a1/air/traveler-compositions/0</con:value></con:property><con:property><con:name>reservationRef</con:name><con:value>/reservations/A000001126</con:value></con:property><con:property><con:name>paymentRef</con:name><con:value/></con:property><con:property><con:name>offerRef1</con:name><con:value>/offers/5b1e5a562d88891618a774a1</con:value></con:property><con:property><con:name>travelerCompositionUri1</con:name><con:value>/offers/5b1e5a562d88891618a774a1/air/traveler-compositions/1</con:value></con:property><con:property><con:name>Currency</con:name><con:value>CHF</con:value></con:property><con:property><con:name>PassengerID</con:name></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Methods" id="a93cceed-b4a0-4989-b677-984732a4d606"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/tdprest-2/api/fulfillment/methods" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Methods" id="c71f685c-8bb6-417f-9e46-bbffbe66f544" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623093"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623093"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623093_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${#TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"reservationRef": {
		"uri": "${TransferProperties#reservationRef}"
	}
}</con:request><con:originalUri>http://localhost/fulfillment/methods</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f4911e4e-8cde-4acb-9cd5-32c46e76441b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="eef435b3-daaf-4ffe-9489-ee43b6150fec" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="46d611a1-663b-42ae-bb1b-f7ac275764c4" name="JsonPath Count  Warnings"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3c9f471a-5103-4d9d-84d2-e53d8845487d" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_FOP_Data" id="ef618ea1-720a-45e4-9626-f8c2fba6bf97"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>formOfPayment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].uri[0]</con:sourcePath><con:targetType>formOfPayment</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cardType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentCard.type[?(@.id=='MC')].uri[0]</con:sourcePath><con:targetType>cardType</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>allocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation[0].paymentAllocationRef.uri</con:sourcePath><con:targetType>allocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>optionAllocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation.optionAllocationRef.uri[0]</con:sourcePath><con:targetType>optionAllocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>air_amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.amount</con:sourcePath><con:targetType>air_amount</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Currency</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.currency</con:sourcePath><con:targetType>Currency</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Orders" id="14bdf2f1-1838-4ccc-817c-15599ead8f45"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/fulfillment/orders" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Orders" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623109"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623109"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623109_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"application": {
"wrapCallback": false,
"callback": [
{
"type": "COMPLETE",
"url": "http://57.20.104.193:29443/PaymentHub/post"
}, {
"type": "FAILURE",
"url": "http://errorurl.com"
}, {
"type": "CANCEL",
"url": "http://cancelurl.com"
}
],
"browserInfo": {
"acceptHeader": "application/xml",
"userAgent": "Java/1.8.0_101"
}
},

	"languageCode": "${TCProperties#language}",
	"pos": "${#TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"paymentDetails": {
		"id": 1,
		"uri": "/payment-details/1",
		"customerRef": {
			"uri": "${TransferProperties#reservationRef}/customers/1"
		},
		"paymentFormRef": {
			"uri": "${TransferProperties#formOfPayment}"
		},
		"paymentCard": {
			"number": "${TCProperties#Token number}",
			"expiryDate": "2018-12-31",
			"holderName": "Paul Ziert",
			"issuingCountry": "CA",
			"typeRef": {
				"uri": "${TransferProperties#cardType}"
			},
			"securityCode": 123,
			"billingAddressRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/addresses/1"
			},
			"phoneRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/phones/1"
			},
			"emailRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/emails/1"
			}
		}
	},
	"payment": {
		"allocationRef": {
			"uri": "${TransferProperties#allocationRef}"
		},
		"option": {
			"detailsRef": {
				"uri": "/payment-details/1"
			},
			"allocationRef": {
				"uri": "${TransferProperties#optionAllocationRef}"
			},
			"value": {
				"money": {
					"amount":"${TransferProperties#air_amount}",
					"currency": "${TransferProperties#Currency}"
				}
			}
		}
	}
}</con:request><con:originalUri>http://localhost/tdprest-2/api/fulfillment/orders</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="867da589-56f7-4d9e-9dd2-675187865f9a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fec7caae-1863-471e-bb22-396c480f9b54" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="b17fbd0a-19d1-4ed3-898a-9f44c5cd0a63" name="JsonPath Count  Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d5881854-0cad-42da-b102-0bc61b80f12b" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer PNR" id="3633d0e9-1c40-4a52-bc2a-e8de67454c20"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PNR</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation..bookingReference.value[0]</con:sourcePath><con:targetType>bookingReference</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>FirstName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.traveler.name..first[0]</con:sourcePath><con:targetType>passengerFirstName</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LastName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.traveler.name..last[0]</con:sourcePath><con:targetType>passengerLastName</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionId_LX</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AirlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.item.air.itinerary.originDestination.flightSegment.operatingAirlineRef.id[0]</con:sourcePath><con:targetType>AirlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="a06960e2-91b4-4412-8db1-10673dcf2dd0"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623124"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623124"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623124_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#passengerLastName}",

          "passengerFirstName": "${TCProperties#passengerFirstName}",

          "bookingReference": "${TCProperties#bookingReference}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#AirlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="PassengerDataRetrieval_ReqResCapture" id="7f5bda83-8d13-4b48-9338-6d9b85c7e376"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Retrieve_Flight Status" id="b4c0270a-9454-40de-9a5a-6e1e5a71b8b0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers[0].passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Flight Status Retrieval" id="1bb9db4c-63b5-4156-8695-2d2c4b8f7366"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/api/v2/checkin/flights" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Flight Status Retrieval" id="68cca128-58c4-49af-a7d6-14576cf80779" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623140"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623140"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623140_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"flights": {"flight": [{
   "departureAirport": "ZRH",
   "airlineCode": "LX",
   "departureDate": "2018-05-28",
   "type": "OPERATING",
   "arrivalAirport": "GVA",
   "flightNumber": "2804"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/flights</con:originalUri><con:assertion type="JsonPath Match" id="548e96a4-7922-4dd8-bcec-5fbdd685324a" name="JsonPath Match"><con:configuration><path>.flightStatus.flightLeg.status[0]</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="b6454136-b51f-4097-bdb6-ba29626af6c5" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Flight Status Retrieval_ReqResCapture" id="0cfb2bb5-33d7-4f01-b3ae-a515cf58e3b0"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Seat_Allocation" id="c6644799-3043-4609-aa3e-268a5b20d174"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers[0].passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Seat_Allocation_Without_Seat" id="f17da14e-60d6-42c9-ae3a-aea3427c2f10"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/seats" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Seat_Allocation_Without_Seat" id="4dfca63d-d5ae-4999-aafd-ed1027369b37" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623155"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623155"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623155_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"passengers": {"passenger": [{
   "flight": [   {
      "departureAirport": "ZRH",
      "airlineCode": "LX",
      "departureDate": "2018-05-28",
      "type": "OPERATING",
      "arrivalAirport": "GVA",
      "flightNumber": "2804"
   }],
   "identification": {"passengerId": "2301DAE300005A45"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/seats</con:originalUri><con:assertion type="JsonPath Match" id="ad6ba87b-7ecc-4080-a74e-d167b3c0a2b3" name="VerifyResponse" disabled="true"><con:configuration><path>.seatOperation[0].flightSeats[0].responseCode.nativeResponseId</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="fa8bf116-1ab0-44d0-97d7-fb8d979de012" name="Contains"><con:configuration><token>seat</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" id="c7c0c73b-5480-4555-a1a9-5b636a5d01f0" name="XPath Match"><con:configuration/></con:assertion><con:assertion type="JsonPath Count" id="cbd4f2d5-c291-4789-8cd4-16809b720049" name="JsonPath Count"><con:configuration><path>.seatHandling.passenger.flight.seat.seatNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Seat Allocation_ReqResCapture" id="95f3514c-9e41-48db-a761-f8388f26df43"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer Property_Seat DeAllocation" id="a8ddda2d-457e-4a2c-85c5-5202c32e7a2c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers[0].passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>seat</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Seat_Allocation_Without_Seat</con:sourceStep><con:sourcePath>.seatHandling.passenger.flight.seat.seatNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.seat.seatNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Seat_Deallocation" id="16301377-4b24-4b32-87f5-5c2a8cde5883"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/seats" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Seat_Deallocation" id="13a07c77-6a55-4004-a3cc-691e5b30e8d2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623171"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623171"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623171_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"passengers": {"passenger": [{
   "flight": [   {
      "seat": {"seatNumber": "29F"},
      "departureAirport": "ZRH",
      "airlineCode": "LX",
      "departureDate": "2018-05-28",
      "type": "OPERATING",
      "arrivalAirport": "GVA",
      "flightNumber": "2804"
   }],
   "identification": {"passengerId": "2301DAE300005A45"}
}]}}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/passengers/seats</con:originalUri><con:assertion type="JsonPath Match" id="8ab6027e-f727-4ef5-b555-16b55f182412" name="VerifyResponse" disabled="true"><con:configuration><path>.seatOperation[0].flightSeats[0].flight.airlineCode</path><content>LH</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="9142765c-39d4-4c40-ab14-cb3b0d4db34a" name="JsonPath Count"><con:configuration><path>.seatHandling.passenger.flight.seat.seatNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Seat De-allocation_ReqResCapture" id="ae23f40e-214a-441c-8447-31dd784ecb17"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Baggage Registration" id="0de87f95-3781-4258-954f-bb7c052bb759"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport
	</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="d6a2f28d-7903-43aa-a93a-0b680a63c135"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108_1"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623187"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623187"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623187_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DAE300005A45"},
   "baggageRegistrationData":    {
      "OnDemandTags": {"quantity": "${TCProperties#numberOfOnDemandTags}"},
      "bound": [{"flight": [      {
         "departureAirport": "ZRH",
         "airlineCode": "LX",
         "departureDate": "2018-05-28",
         "type": "OPERATING",
         "arrivalAirport": "GVA",
         "flightNumber": "2804"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration" disabled="true"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="343bb8e5-4344-47f4-ab4d-25f93f0ac609" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2b39eade-f396-49b6-bc4c-ee231e9d9cf5" name="Contains 1"><con:configuration><token>bagTagNumber</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Baggage Registration_ReqResCapture" id="33d096e7-71bd-4d63-89cc-0e9d8d2d0263"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Baggage Status Retrieval" id="a2dca2b2-fbac-4b27-b940-eeaf5105990a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Status_Retrieval" id="e9152127-dd82-42f5-8b49-af5f98f20055"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage/status/search" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Status_Retrieval" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623202"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623202"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623202_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "flight":    {
      "departureAirport": "ZRH",
      "airlineCode": "LX",
      "departureDate": "2018-05-28",
      "type": "OPERATING",
      "arrivalAirport": "GVA",
      "flightNumber": "2804"
   },
   "identification": {"passengerId": "2301DAE300005A45"}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Count" id="2c9bffb5-0fc8-49ab-9de4-24bf4f9b3ec5" name="JsonPath Count"><con:configuration><path>.baggageStatusSearch.baggageStatus.bagTagNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="5b993b82-652e-43b6-9567-f0897eafcec0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Baggage Status_ReqResCapture" id="42b1946d-c285-4329-af7a-56f229475123"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="4a3dfce4-e2c1-42ac-a8ef-c1fc91b288a5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>deperturedate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Depertureairport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="9af7a6e7-e429-49ab-a149-f106a9fad8c7"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false" timeout="600000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108_3"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623218"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623218"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623218_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"passengers": {
   "passenger": [{"identification": {"passengerId": ""}}],
   "bound": [   {
      "flight": [      {
         "departureAirport": "",
         "airlineCode": "",
         "departureDate": "",
         "type": "OPERATING",
         "arrivalAirport": "",
         "flightNumber": ""
      }],
      "sequence": "0"
   }]
}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Passenger Acceptance_ReqResCapture" id="10fbe39e-de30-4bbe-afe1-2ade64843159"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Options" id="ea08d6f6-3240-4117-937a-7c144b22e5dd"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="a05add30-1280-4951-81d2-bc1746058a45"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1109"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623233"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623233"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623233_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": [{"passengerId": "2301DAE300005A45"}],
   "bound": {"flight": [   {
      "departureAirport": "ZRH",
      "airlineCode": "LX",
      "departureDate": "2018-05-28",
      "type": "OPERATING",
      "arrivalAirport": "GVA",
      "flightNumber": "2804"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Options_ReqResCapture" id="b915565c-8a2a-498e-b48e-ee698106a3e4"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_RAW DATA" id="d91e126a-5fa4-4d99-8d88-79739454b120"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_RAW DATA" id="7e5bd62f-1730-44cc-80f7-2948f0a0834f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1106"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623249"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623249"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623249_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CAE300008D5F"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "GVA",
            "airlineCode": "LX",
            "departureDate": "2018-05-28",
            "type": "OPERATING",
            "arrivalAirport": "ZRH",
            "flightNumber": "2811"
         }],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Generation_RAW-DATA_ReqResCapture" id="f32a330c-1249-4510-834e-5c1a9c696a69"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_PDF" id="893ea101-6186-4f15-8d91-e04d38c35a24"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_PDF" id="3069a7ae-6bab-4314-83e4-d65d78a54e8a"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623265"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623265"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623265_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAE300005A45"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "ZRH",
            "airlineCode": "LX",
            "departureDate": "2018-05-28",
            "type": "OPERATING",
            "arrivalAirport": "GVA",
            "flightNumber": "2804"
         }],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "HOME_PRINTED",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Generation_PDF_ReqResCapture" id="905ed346-8c91-4378-abf6-aa71b9f23c79"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Email" id="1db01f8a-20d5-4b2e-9f0b-8097a0222a53"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_Email" id="2c6de188-b50c-4b00-8cba-010806a6b304"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1107"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623280"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623280"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623280_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAE300005A45"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "ZRH",
            "airlineCode": "LX",
            "departureDate": "2018-05-28",
            "type": "OPERATING",
            "arrivalAirport": "GVA",
            "flightNumber": "2804"
         }],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_EMAIL",
   "documentId": "docID12345",
   "contactMethod": {"email": "didhiti.kumar44@gmail.com"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Generation_Email_ReqResCapture" id="e7a94243-5d76-4ae8-b7fd-af1665b6aeec"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Phone" id="9ad34b7f-bdbd-4b4e-9776-7041456554b4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="false" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_Phone" id="33b0c91e-ee92-4be8-a7a6-6c4f80b9a479"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1109"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623296"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623296"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623296_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAE300005A45"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "ZRH",
            "airlineCode": "LX",
            "departureDate": "2018-05-28",
            "type": "OPERATING",
            "arrivalAirport": "GVA",
            "flightNumber": "2804"
         }],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_PHONE_NUMBER",
   "documentId": "docID12345",
   "contactMethod": {"cellphone": {"phoneNumber": "009434139201"}}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Generation_Phone_ReqResCapture" id="57a4bc85-c52e-4c75-b1ee-a1fd23037d9b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_BAGTAG Generation_RAW DATA" id="9cbd2247-cb26-49c6-9f09-33dc66b7fd2f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagtagnumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistration.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>bagTagNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="BAGTAG Generation_RAW DATA" id="825b6ba9-c41a-475f-a917-d4558a19d0f6"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="BAGTAG Generation_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623311"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623311"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623311_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAE300005A45"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "ZRH",
            "airlineCode": "LX",
            "departureDate": "2018-05-28",
            "type": "OPERATING",
            "arrivalAirport": "GVA",
            "flightNumber": "2804"
         }],
         "documentType": [         {
            "bagTagNumber": ["${TCProperties#bagTagNumber}"],
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>baggageTag</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="BAGTAG Generation_RAW-DATA_ReqResCapture" id="ea0974c8-d082-486f-97b9-40a409a4d5f6"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_BAGTAG Generation_PDF" id="6b680f1c-a921-4f6d-be7b-b798c3873b49"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagtagnumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistration.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>bagTagNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="BAGTAG Generation_PDF" id="8378e3c7-99fb-4a3c-aff5-3dacb60c820f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="BAGTAG Generation_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623327"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623327"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623327_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAE300005A45"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "ZRH",
            "airlineCode": "LX",
            "departureDate": "2018-05-28",
            "type": "OPERATING",
            "arrivalAirport": "GVA",
            "flightNumber": "2804"
         }],
         "documentType": [         {
            "bagTagNumber": ["${TCProperties#bagTagNumber}"],
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "HOME_PRINTED",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>baggageTag</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="BAGTAG Generation_PDF_ReqResCapture" id="0e5eea34-27f1-4f30-b42d-1c0789f429a5"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_BAGTAG Generation_Email" id="931971b4-6249-418f-9fd9-a44183e676fb" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>tagnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData.tagNumber[0]</con:sourcePath><con:targetType>bagTagNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="BAGTAG Generation_Email" id="424f7234-0e1d-406b-8877-71d70dd94b7b" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="BAGTAG Generation_Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623343"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623343"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623343_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DA30000060F0FRA"},
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber": ["${TCProperties#bagTagNumber}"],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight": [         {
            "departureAirport": "FRA",
            "airlineCode": "LH",
            "departureDate": "2017-12-01",
            "arrivalAirport": "MUC",
            "flightNumber": "4253"
         }]}
      }]
   }]},
   "mobileRecipient": {"email": "didhiti.kumar@in.ibm.com"},
   "documentMedia": "MOBILE_VIA_EMAIL",
   "id": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_BAGTAG Generation_Phone" id="af1995eb-d88d-4e8a-8dc7-ba65d4eb8f57" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>tagnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData.tagNumber[0]</con:sourcePath><con:targetType>bagTagNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="BAGTAG Generation_Phone" id="ff7df6c6-6b0b-414a-9fda-d4df0c3fef64" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="BAGTAG Generation_Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623358"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623358"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623358_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DA30000060F0FRA"},
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber": ["${TCProperties#bagTagNumber}"],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight": [         {
            "departureAirport": "FRA",
            "airlineCode": "LH",
            "departureDate": "2017-12-01",
            "arrivalAirport": "MUC",
            "flightNumber": "4253"
         }]}
      }]
   }]},
   "mobileRecipient": {"phoneNumber": "0038761034544"},
   "documentMedia": "MOBILE_VIA_PHONE_NUMBER",
   "id": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture" id="c3dbd1fe-0016-46d4-b0e8-c5cb72dd048d" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Documnet Options" id="58c5c580-a132-4622-94f0-d9cd8575585d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623233"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623233"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623233_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": [{"passengerId": "2301CAB300005D09ZRH"}],
   "bound": {"flight": [   {
      "departureAirport": "ZRH",
      "airlineCode": "LX",
      "departureDate": "2018-04-11",
      "type": "OPERATING",
      "arrivalAirport": "GVA",
      "flightNumber": "2804"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="2804"/>
  <con:entry key="arrival-airport" value="GVA"/>
  <con:entry key="airline-code" value="LX"/>
  <con:entry key="passenger-id" value="2301CAB300005D09ZRH"/>
  <con:entry key="departure-date" value="2018-04-11"/>
  <con:entry key="type" value="OPERATING"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>8319</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="b57ec076-babd-47e5-bc1c-42176f3f69ff" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T003_Fulfill_CheckIn_ OS" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="74cf720b-99ba-491a-9e88-4de5b2275566" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "OS")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="656b59cd-47e6-4c19-acf4-4d7ecd78d390"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 0
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("date_1", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("date_2", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="b287a621-f429-48bd-8107-004bbb6e94a2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>OS_A-FRA_MKI-K_DE</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2017-12-05</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>VIE</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>INN</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value>2017-12-12</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value>948</con:value></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Infants</con:name><con:value>1</con:value></con:property><con:property><con:name>Cabin</con:name><con:value>Business</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>520000A3LBI60007</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>date_1</con:name><con:value>2018-05-29</con:value></con:property><con:property><con:name>date_2</con:name><con:value>2018-06-05</con:value></con:property><con:property><con:name>passengerFirstName</con:name><con:value>Kuno</con:value></con:property><con:property><con:name>passengerLastName</con:name><con:value>Keineahnung</con:value></con:property><con:property><con:name>bookingReference</con:name><con:value>LTLNUW</con:value></con:property><con:property><con:name>numberOfOnDemandTags</con:name><con:value>1</con:value></con:property><con:property><con:name>bagTagNumber</con:name><con:value>0257355005</con:value></con:property><con:property><con:name>userSessionId_OS</con:name><con:value>5b0cee1186c56b7fcf4fc60c</con:value></con:property><con:property><con:name>AirlineCode</con:name><con:value>OS</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="TransferProperties" id="27f60aa2-4930-462b-b454-7cb8dbd33e75"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>userSessionID</con:name><con:value>5b0ce3da86c56b7fcfe8b513</con:value></con:property><con:property><con:name>itineraryPriceRef_1</con:name><con:value>/air/search/5b0ce3e586c56b7fcfe8b514/itinerary-prices/1_2</con:value></con:property><con:property><con:name>itineraryPriceRef_2</con:name><con:value/></con:property><con:property><con:name>offerRef</con:name><con:value>/offers/5b0ce3ed86c56b7fcfe8b521</con:value></con:property><con:property><con:name>m_offerRef_ID</con:name><con:value>/merchandizing/58d12b05d6abab5f3c182a65/offers/ANCILLARYAIR_1</con:value></con:property><con:property><con:name>formOfPayment</con:name><con:value>/fulfillment/methods/5b0ce3f486c56b7fcfe8b523/payment-forms/CREDITCARD/1</con:value></con:property><con:property><con:name>cardType</con:name><con:value>/fulfillment/methods/5b0ce3f486c56b7fcfe8b523/payment-forms/CREDITCARD/1/payment-card-types/MC</con:value></con:property><con:property><con:name>allocationRef</con:name><con:value>/fulfillment/methods/5b0ce3f486c56b7fcfe8b523/payment-allocations/1</con:value></con:property><con:property><con:name>optionAllocationRef</con:name><con:value>/fulfillment/methods/5b0ce3f486c56b7fcfe8b523/payment-allocations/1/option-allocations/3</con:value></con:property><con:property><con:name>air_amount</con:name><con:value>208.18</con:value></con:property><con:property><con:name>m_offerRef</con:name><con:value>/offers/58d12b06d6abab5f3c182a67</con:value></con:property><con:property><con:name>m_travelerCompositionUri</con:name><con:value>/offers/58d12b06d6abab5f3c182a67/ancillaryair/traveler-compositions/0</con:value></con:property><con:property><con:name>travelerCompositionUri</con:name><con:value>/offers/5b0ce3ed86c56b7fcfe8b521/air/traveler-compositions/0</con:value></con:property><con:property><con:name>reservationRef</con:name><con:value>/reservations/A000001074</con:value></con:property><con:property><con:name>paymentRef</con:name><con:value/></con:property><con:property><con:name>offerRef1</con:name><con:value>/offers/5b0ce3ed86c56b7fcfe8b521</con:value></con:property><con:property><con:name>travelerCompositionUri1</con:name><con:value>/offers/5b0ce3ed86c56b7fcfe8b521/air/traveler-compositions/1</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PassengerID</con:name></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Air_Search" id="c99f3bb9-0fbc-4aab-a003-afc94b4135be"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Search" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false" timeout="6000000000000000000000000000"><con:description>Call POST /air/lfs to get tinerary price reference with LX, One way Domestic flight for one adult  and no cabin as input</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300441"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300441"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="OS"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300441_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "languageCode": "${TCProperties#language}",
    "originDestination": [
        {
            "origin": {
                "date": "${TCProperties#date_1}",
                "windowBefore": "0",
                "windowAfter": "0",
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Origin}"
                }
            },
            "destination": {
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Destination}"
                }
            }
        }
    ],
    "travelerComposition": [
        {
            "count": "${TCProperties#Number_of_Adults}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/ADT"
            }
        },
        
        {
            "count": "${TCProperties#Number_of_Children}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/CHD"
            }
        }
    ],
    "pos": "${TCProperties#POS}",
    "preferences": {
        "cabin": {
            "cabinRef": {
                "uri": "/info/air/cabin-classes/${TCProperties#Cabin}"
            }
        }
    }
}
</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f56d4c53-af85-43bf-90a7-5bf1a91421f2" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c971de40-b89e-45fa-834a-3855f135ce0c" name="JsonPath Count - No Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="803cd1e9-3a86-4f64-bea8-02c34b958368" name="JsonPath Existence Match - ItineraryPriceRef"><con:configuration><path>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2758936c-e002-49fe-b1f0-359382509cf2" name="Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8d233546-71cc-478d-a6b2-92f29f5b7697" name="Script Assertion 3"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ItineraryPriceRef" id="2053bf68-3024-4229-b878-28366b68807d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>itineraryPriceRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>.search.recommendedOffer[0].itineraryPriceRef[0].uri</con:sourcePath><con:targetType>itineraryPriceRef_1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userSessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionID</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Air_Price" id="cfb66abf-928f-4211-b646-cd92285cdcda"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/price" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Price" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/price to get Offer URI</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300474"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300474"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="OS"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300473_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{     "userSessionId": "${TransferProperties#userSessionID}",     
	"languageCode": "${TCProperties#language}",
	"itineraryPriceRQ": {         
		"price": "true",         
		"itineraryPriceRef": [            
		{                 
			"uri": "${TransferProperties#itineraryPriceRef_1}"             
			} 
			]     },     
			"pos": "${TCProperties#POS}" }
			</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66918970-0946-42b3-88f9-c78fda3f2310" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="a423a547-5b8d-4063-8b9a-d2444abccab4" name="JsonPath Count - NoErrors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b689c70d-bcdc-47b2-adea-5b0f534b3dd3" name="JsonPath Existence Match - OfferRef"><con:configuration><path>$.offer[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="20c6818a-5902-4150-8911-9f7f5ae8649a" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_OfferRef" id="3b5613df-74b8-43df-8ccb-96d90dbcb5da"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerCompositionUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[0]</con:sourcePath><con:targetType>travelerCompositionUri</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerComposition1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[2]</con:sourcePath><con:targetType>travelerCompositionUri1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Reservation_Post" id="51970518-6c69-4a84-b5d0-b591c837b17f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/reservations" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reservation_Post" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300488"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300488"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="OS"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300488_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"traveler": [
		{
			"uri": "/travelers/0",
			"id": "0",
			"dateOfBirth": "1977-07-20-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "${TCProperties#passengerFirstName}",
				"last": "${TCProperties#passengerLastName}",
				"titleRef": {
					"uri": "/info/traveler-name-titles/MR",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/1",
					"id": "1",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/1.EAT",
						"id": "1.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"postalCode": "90210",
					"stateCode": "OK",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/ADT",
				"id": "ADT"
			}
		}, {
			"uri": "/travelers/1",
			"id": "0",
			"dateOfBirth": "2011-04-21-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "GC",
				"last": "Test",
				"titleRef": {
					"uri": "/info/traveler-name-titles/Master",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/2",
					"id": "2",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/2.EAT",
						"id": "2.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"stateCode": "OK",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/CHD",
				"id": "CHD"
			}
		}
	],
	"item": [
		{
			"book": true,
			"offerRef": {
				"uri": "${TransferProperties#offerRef}"
			}
		}
	],
	"travelerAssignment": [
		{
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri}"
			},
			"travelerRef": {
				"uri": "/travelers/0"
			}
		}, {
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri1}"
			},
			"travelerRef": {
				"uri": "/travelers/1"
			}
		}
	]
}</con:request><con:originalUri>http://10.160.6.148/tdprest-2/api/reservation</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c9d5b6d0-156a-40bc-aed3-f931f2096fab" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="57898c12-aaae-4bcb-86d6-deaad57c6349" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="955f0a2f-3f2a-45ce-880d-1256e35792a1" name="JsonPath Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="267c181b-0d35-4260-8521-74000c582e14" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ReservationRef" id="ea85b873-6030-4aac-b371-acc8bb5f7983"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>reservationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Reservation_Post</con:sourceStep><con:sourcePath>$.reservation.uri</con:sourcePath><con:targetType>reservationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Methods" id="f076e212-9f58-46dc-b9ca-8616e21289d3"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/tdprest-2/api/fulfillment/methods" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Methods" id="c71f685c-8bb6-417f-9e46-bbffbe66f544" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300503"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300503"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="OS"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300503_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${#TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"reservationRef": {
		"uri": "${TransferProperties#reservationRef}"
	}
}</con:request><con:originalUri>http://localhost/fulfillment/methods</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f4911e4e-8cde-4acb-9cd5-32c46e76441b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="eef435b3-daaf-4ffe-9489-ee43b6150fec" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="46d611a1-663b-42ae-bb1b-f7ac275764c4" name="JsonPath Count  Warnings"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3c9f471a-5103-4d9d-84d2-e53d8845487d" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_FOP_Data" id="2d3961d9-7062-48d7-a19f-dbb01dc91251"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>formOfPayment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].uri[0]</con:sourcePath><con:targetType>formOfPayment</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cardType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentCard.type[?(@.id=='MC')].uri[0]</con:sourcePath><con:targetType>cardType</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>allocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation[0].paymentAllocationRef.uri</con:sourcePath><con:targetType>allocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>optionAllocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation.optionAllocationRef.uri[0]</con:sourcePath><con:targetType>optionAllocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>air_amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.amount</con:sourcePath><con:targetType>air_amount</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Currency</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.currency</con:sourcePath><con:targetType>Currency</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Orders" id="d85cd134-15ac-460e-a448-d443d91d6050"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/fulfillment/orders" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Orders" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300519"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300519"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="OS"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300519_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"application": {
"wrapCallback": false,
"callback": [
{
"type": "COMPLETE",
"url": "http://57.20.104.193:29443/PaymentHub/post"
}, {
"type": "FAILURE",
"url": "http://errorurl.com"
}, {
"type": "CANCEL",
"url": "http://cancelurl.com"
}
],
"browserInfo": {
"acceptHeader": "application/xml",
"userAgent": "Java/1.8.0_101"
}
},

	"languageCode": "${TCProperties#language}",
	"pos": "${#TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"paymentDetails": {
		"id": 1,
		"uri": "/payment-details/1",
		"customerRef": {
			"uri": "${TransferProperties#reservationRef}/customers/1"
		},
		"paymentFormRef": {
			"uri": "${TransferProperties#formOfPayment}"
		},
		"paymentCard": {
			"number": "${TCProperties#Token number}",
			"expiryDate": "2018-12-31",
			"holderName": "Paul Ziert",
			"issuingCountry": "CA",
			"typeRef": {
				"uri": "${TransferProperties#cardType}"
			},
			"securityCode": 123,
			"billingAddressRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/addresses/1"
			},
			"phoneRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/phones/1"
			},
			"emailRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/emails/1"
			}
		}
	},
	"payment": {
		"allocationRef": {
			"uri": "${TransferProperties#allocationRef}"
		},
		"option": {
			"detailsRef": {
				"uri": "/payment-details/1"
			},
			"allocationRef": {
				"uri": "${TransferProperties#optionAllocationRef}"
			},
			"value": {
				"money": {
					"amount":"${TransferProperties#air_amount}",
					"currency": "${TransferProperties#Currency}"
				}
			}
		}
	}
}</con:request><con:originalUri>http://localhost/tdprest-2/api/fulfillment/orders</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="867da589-56f7-4d9e-9dd2-675187865f9a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fec7caae-1863-471e-bb22-396c480f9b54" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="b17fbd0a-19d1-4ed3-898a-9f44c5cd0a63" name="JsonPath Count  Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d5881854-0cad-42da-b102-0bc61b80f12b" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer PNR" id="5f25dd51-0803-4f0f-9633-55ad9ce6f577"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PNR</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation..bookingReference.value[0]</con:sourcePath><con:targetType>bookingReference</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>FirstName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.traveler.name..first[0]</con:sourcePath><con:targetType>passengerFirstName</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LastName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.traveler.name..last[0]</con:sourcePath><con:targetType>passengerLastName</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionId_OS</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AirlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.item.air.itinerary.originDestination.flightSegment.operatingAirlineRef.id[0]</con:sourcePath><con:targetType>AirlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="1a5abdab-2736-43f2-abb6-ab8963c71a3f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300535"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300535"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300535_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#passengerLastName}",

          "passengerFirstName": "${TCProperties#passengerFirstName}",

          "bookingReference": "${TCProperties#bookingReference}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#AirlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="PassengerDataRetrieval_ReqResCapture" id="ebd35e45-b274-4b72-90a6-5dd9595dc78e"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Retrieve_Flight Status" id="7942e9b8-6a35-4f40-8cdd-028c67e5506a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers[0].passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Flight Status Retrieval</con:targetStep><con:targetPath>.flights.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Flight Status Retrieval" id="e845ee4b-acd9-43ed-b467-b3927ad2c299"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/api/v2/checkin/flights" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Flight Status Retrieval" id="68cca128-58c4-49af-a7d6-14576cf80779" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3355"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300550"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300550"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300550_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"flights": {"flight": [{
   "departureAirport": "FRA",
   "airlineCode": "OS",
   "departureDate": "2018-05-28",
   "type": "OPERATING",
   "arrivalAirport": "VIE",
   "flightNumber": "122"
}]}}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/flights</con:originalUri><con:assertion type="JsonPath Match" id="8bdd4750-d9ed-489a-9b53-bb3c8545a2af" name="JsonPath Match"><con:configuration><path>.flightStatus.flightLeg.status[0]</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="e9d49f77-99ad-4946-a3c8-894d128e4121" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Flight Status Retrieval_ReqResCapture" id="16522a2f-6f47-4d65-8b89-e94e658b67d2"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Seat_Allocation" id="13fb1b1c-842e-4088-890c-581a29340438"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers[0].passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Allocation_Without_Seat</con:targetStep><con:targetPath>.passengers.passenger.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Seat_Allocation_Without_Seat" id="78321f87-ff88-4b0c-aa68-d5d8e53576df"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/seats" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Seat_Allocation_Without_Seat" id="4dfca63d-d5ae-4999-aafd-ed1027369b37" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300566"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300566"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300566_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"passengers": {"passenger": [{
   "flight": [   {
      "departureAirport": "FRA",
      "airlineCode": "OS",
      "departureDate": "2018-05-28",
      "type": "OPERATING",
      "arrivalAirport": "VIE",
      "flightNumber": "122"
   }],
   "identification": {"passengerId": "2301DAE3000054C1"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/seats</con:originalUri><con:assertion type="JsonPath Match" id="ad6ba87b-7ecc-4080-a74e-d167b3c0a2b3" name="VerifyResponse" disabled="true"><con:configuration><path>.seatOperation[0].flightSeats[0].responseCode.nativeResponseId</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="fa8bf116-1ab0-44d0-97d7-fb8d979de012" name="Contains"><con:configuration><token>seat</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" id="c7c0c73b-5480-4555-a1a9-5b636a5d01f0" name="XPath Match"><con:configuration/></con:assertion><con:assertion type="JsonPath Count" id="cbd4f2d5-c291-4789-8cd4-16809b720049" name="JsonPath Count"><con:configuration><path>.seatHandling.passenger.flight.seat.seatNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Seat Allocation_ReqResCapture" id="3c86590a-1965-42c7-89fe-34b415be12b5"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer Property_Seat DeAllocation" id="e6c8918a-9892-42e1-9e89-5c6e84728e38"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers[0].passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>seat</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Seat_Allocation_Without_Seat</con:sourceStep><con:sourcePath>.seatHandling.passenger.flight.seat.seatNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Seat_Deallocation</con:targetStep><con:targetPath>.passengers.passenger.flight.seat.seatNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Seat_Deallocation" id="fc2646ca-f9e1-4c1b-be1d-383d34132a60"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/seats" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Seat_Deallocation" id="13a07c77-6a55-4004-a3cc-691e5b30e8d2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300581"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300581"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300581_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"passengers": {"passenger": [{
   "flight": [   {
      "seat": {"seatNumber": "8A"},
      "departureAirport": "FRA",
      "airlineCode": "OS",
      "departureDate": "2018-05-28",
      "type": "OPERATING",
      "arrivalAirport": "VIE",
      "flightNumber": "122"
   }],
   "identification": {"passengerId": "2301DAE3000054C1"}
}]}}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/passengers/seats</con:originalUri><con:assertion type="JsonPath Match" id="8ab6027e-f727-4ef5-b555-16b55f182412" name="VerifyResponse" disabled="true"><con:configuration><path>.seatOperation[0].flightSeats[0].flight.airlineCode</path><content>LH</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="9142765c-39d4-4c40-ab14-cb3b0d4db34a" name="JsonPath Count"><con:configuration><path>.seatHandling.passenger.flight.seat.seatNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Seat De-allocation_ReqResCapture" id="0c20e091-72f0-4461-ae4d-db61569c8c1d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Baggage Registration" id="933accd2-b86f-4ed1-875d-8928a3012700"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="0c1e7a31-90be-4726-a300-7cc4627836c6"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3336"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300597"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300597"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300597_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DAE40000411C"},
   "baggageRegistrationData":    {
      "OnDemandTags": {"quantity": "${TCProperties#numberOfOnDemandTags}"},
      "bound": [{"flight": [      {
         "departureAirport": "VIE",
         "airlineCode": "OS",
         "departureDate": "2018-05-29",
         "type": "OPERATING",
         "arrivalAirport": "INN",
         "flightNumber": "903"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration" disabled="true"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="343bb8e5-4344-47f4-ab4d-25f93f0ac609" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2b39eade-f396-49b6-bc4c-ee231e9d9cf5" name="Contains 1"><con:configuration><token>bagTagNumber</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Baggage Registration_ReqResCapture" id="51473182-ec86-4488-a7f5-32b64132e776"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Baggage Status Retrieval" id="448bea6e-7c10-49e6-8949-05a31f0715e2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Status_Retrieval</con:targetStep><con:targetPath>.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Status_Retrieval" id="d036269a-0d6a-47c8-b2bb-98c0b07190cc"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage/status/search" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Status_Retrieval" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300613"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300613"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300613_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "flight":    {
      "departureAirport": "VIE",
      "airlineCode": "OS",
      "departureDate": "2018-05-29",
      "type": "OPERATING",
      "arrivalAirport": "INN",
      "flightNumber": "903"
   },
   "identification": {"passengerId": "2301DAE40000411C"}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Count" id="2c9bffb5-0fc8-49ab-9de4-24bf4f9b3ec5" name="JsonPath Count"><con:configuration><path>.baggageStatusSearch.baggageStatus.bagTagNumber</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="5b993b82-652e-43b6-9567-f0897eafcec0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Baggage Status_ReqResCapture" id="48f65e80-3039-46ab-b7fd-f00383726215"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="94881d8d-f779-484e-8318-633127d252ac"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>deperturedate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Depertureairport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="55a83d7d-acb3-47ff-ab2a-ada0af112b07"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false" timeout="600000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300628"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300628"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300628_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"passengers": {
   "passenger": [{"identification": {"passengerId": ""}}],
   "bound": [   {
      "flight": [      {
         "departureAirport": "",
         "airlineCode": "",
         "departureDate": "",
         "type": "OPERATING",
         "arrivalAirport": "",
         "flightNumber": ""
      }],
      "sequence": "0"
   }]
}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Passenger Acceptance_ReqResCapture" id="35379182-e756-40d6-a3fc-019f1bd72391"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Options" id="e7545242-9499-4dac-a04c-2f9e7a2bbe76"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate
</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet Options</con:targetStep><con:targetPath>.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="316b6174-7bfb-4512-8bce-a8bc05724c8d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523344622979_1108"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523344623233"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523344623233"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523344622979_1108"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523344623233_1108"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": [{"passengerId": "2301DAE3000054C1"}],
   "bound": {"flight": [   {
      "departureAirport": "FRA",
      "airlineCode": "OS",
      "departureDate": "2018-05-28",
      "type": "OPERATING",
      "arrivalAirport": "VIE",
      "flightNumber": "122"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Options_ReqResCapture" id="8f14c645-c3c6-4de4-9095-7b9ef674a7a5"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_RAW DATA" id="de3e436e-aea9-418d-a248-cb62caeafdbf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_RAW DATA" id="cfc3413b-8880-472f-9a95-57e8ab3320a9"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300659"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300659"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300659_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAE3000054C1"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "FRA",
            "airlineCode": "OS",
            "departureDate": "2018-05-28",
            "type": "OPERATING",
            "arrivalAirport": "VIE",
            "flightNumber": "122"
         }],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Generation_RAW-DATA_ReqResCapture" id="94d91912-02bb-456e-be12-c8d86d947445"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_PDF" id="33bd80da-fa7f-4fdd-8945-82c251b6a494"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_PDF" id="0cb6cb5a-35c8-4456-9cac-27b66dc504b2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300677"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300677"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300677_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAE3000054C1"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "FRA",
            "airlineCode": "OS",
            "departureDate": "2018-05-28",
            "type": "OPERATING",
            "arrivalAirport": "VIE",
            "flightNumber": "122"
         }],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "HOME_PRINTED",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Generation_PDF_ReqResCapture" id="71dad80e-34ec-4468-9669-3317782931ee"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Email" id="94592c5a-22c4-4cb4-bb32-5cf1a8202709"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_Email" id="7559ee1c-8463-45d2-80ea-6e78de40fe08"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300693"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300693"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300693_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAE3000054C1"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "FRA",
            "airlineCode": "OS",
            "departureDate": "2018-05-28",
            "type": "OPERATING",
            "arrivalAirport": "VIE",
            "flightNumber": "122"
         }],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_EMAIL",
   "documentId": "docID12345",
   "contactMethod": {"email": "didhiti.kumar@in.ibm.com"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Generation_Email_ReqResCapture" id="1ae22e49-d751-49d5-b4cd-c26e26c9926a"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Phone" id="37c0c187-a795-421a-a72e-897c6de4ebf6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_Phone" id="df6af98e-8e19-402b-9d2f-57c0634adfd3"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300708"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300708"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300708_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAE3000054C1"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "FRA",
            "airlineCode": "OS",
            "departureDate": "2018-05-28",
            "type": "OPERATING",
            "arrivalAirport": "VIE",
            "flightNumber": "122"
         }],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_PHONE_NUMBER",
   "documentId": "docID12345",
   "contactMethod": {"cellphone": {"phoneNumber": "0039434139201"}}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Document Generation_Phone_ReqResCapture" id="9310285b-7513-47ff-bbfd-4e337c0533be"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_BAGTAG Generation_RAW DATA" id="0e1abb76-0423-4496-936d-be95f9ab9a19"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagtagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistration.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>bagTagNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="BAGTAG Generation_RAW DATA" id="3c402572-4b36-4a97-8933-f1a35ae16ca7"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="BAGTAG Generation_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300724"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300724"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300724_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAE40000411C"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "VIE",
            "airlineCode": "OS",
            "departureDate": "2018-05-29",
            "type": "OPERATING",
            "arrivalAirport": "INN",
            "flightNumber": "903"
         }],
         "documentType": [         {
            "bagTagNumber": ["${TCProperties#bagTagNumber}"],
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>baggageTag</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="BAGTAG Generation_RAW-DATA_ReqResCapture" id="30a1bebd-f979-46ed-9ce0-a62364934501"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_BAGTAG Generation_PDF" id="805e6908-93e2-4e7f-a87d-bd062e6b9a60"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_PDF</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagtagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistration.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>bagTagNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="BAGTAG Generation_PDF" id="eaf43fa9-2346-4f5c-ba8b-9fd9b4880d61"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="BAGTAG Generation_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300739"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300739"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300739_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAE40000411C"},
      "bound": [      {
         "flight": [         {
            "departureAirport": "VIE",
            "airlineCode": "OS",
            "departureDate": "2018-05-29",
            "type": "OPERATING",
            "arrivalAirport": "INN",
            "flightNumber": "903"
         }],
         "documentType": [         {
            "bagTagNumber": ["${TCProperties#bagTagNumber}"],
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "HOME_PRINTED",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>baggageTag</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="BAGTAG Generation_PDF_ReqResCapture" id="f01a87b0-4cdf-48e2-b50c-f848637e7296"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_BAGTAG Generation_Email" id="c94e9c53-0639-40a0-b149-cb5a7b4abb4e" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Email</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_RAW DATA</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>tagnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData.tagNumber[0]</con:sourcePath><con:targetType>bagTagNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="BAGTAG Generation_Email" id="c469b33a-699a-4618-84ed-d6f3be035ec6" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="BAGTAG Generation_Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300755"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300755"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="OS"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300755_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DA30000060F0FRA"},
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber": ["${TCProperties#bagTagNumber}"],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight": [         {
            "departureAirport": "FRA",
            "airlineCode": "LH",
            "departureDate": "2017-12-01",
            "arrivalAirport": "MUC",
            "flightNumber": "4253"
         }]}
      }]
   }]},
   "mobileRecipient": {"email": "didhiti.kumar@in.ibm.com"},
   "documentMedia": "MOBILE_VIA_EMAIL",
   "id": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_BAGTAG Generation_Phone" id="c0dded5a-3852-4efd-8555-a7cee21bd028" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>BAGTAG Generation_Phone</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>tagnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData.tagNumber[0]</con:sourcePath><con:targetType>bagTagNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="BAGTAG Generation_Phone" id="55a9230d-993f-4df8-a1d0-877194500468" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="BAGTAG Generation_Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1523348300409_3332"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1523348300771"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1523348300771"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="OS"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1523348300409_3332"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1523348300771_3332"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DA30000060F0FRA"},
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber": ["${TCProperties#bagTagNumber}"],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight": [         {
            "departureAirport": "FRA",
            "airlineCode": "LH",
            "departureDate": "2017-12-01",
            "arrivalAirport": "MUC",
            "flightNumber": "4253"
         }]}
      }]
   }]},
   "mobileRecipient": {"phoneNumber": "0038761034544"},
   "documentMedia": "MOBILE_VIA_PHONE_NUMBER",
   "id": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture" id="c4d71af8-ef75-4307-a589-493208df85e5" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>8320</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="3a7dbf97-166b-46ae-aec3-ce3b303b0e9e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T004_Fulfill_MultiPassenger_CheckIn_ LH" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="67e93ffd-417d-4591-a2be-d9e830251813" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="1a2d6ad3-324b-42ce-a767-fd647702267e"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="45191fae-7ea1-4f48-a63f-c333eec65a7a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH_A-FRA_MKI-K_DE</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2018-04-24</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value>2018-05-01</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Infants</con:name><con:value>1</con:value></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>TVAL7Y</con:value></con:property><con:property><con:name>passenger1FirstName</con:name><con:value>Kuno</con:value></con:property><con:property><con:name>passenger1LastName</con:name><con:value>Keineahnung</con:value></con:property><con:property><con:name>passenger2FirstName</con:name><con:value>GC</con:value></con:property><con:property><con:name>passenger2LastName</con:name><con:value>Test</con:value></con:property><con:property><con:name>FlightNumber</con:name><con:value>7237</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-10-04</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301DA4B0000F063FRA</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>departureAirport</con:name><con:value>FRA</con:value></con:property><con:property><con:name>FirstName</con:name><con:value/></con:property><con:property><con:name>LastName</con:name><con:value/></con:property><con:property><con:name>passengerId 1</con:name><con:value>2301DA4B0000F064FRA</con:value></con:property><con:property><con:name>UsersessionId_LH</con:name><con:value>5addc2ba2d88895789a1becc</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="TransferProperties" id="174b7646-c0e4-4d47-95b9-a468741ae2c2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>userSessionID</con:name><con:value>5addc2ba2d88895789a1becc</con:value></con:property><con:property><con:name>itineraryPriceRef_1</con:name><con:value>/air/search/5addc2d12d88895789a1bf1e/itinerary-prices/14_52</con:value></con:property><con:property><con:name>itineraryPriceRef_2</con:name><con:value/></con:property><con:property><con:name>offerRef</con:name><con:value>/offers/5addc2f02d88895789a1bf36</con:value></con:property><con:property><con:name>m_offerRef_ID</con:name><con:value>/merchandizing/58d12b05d6abab5f3c182a65/offers/ANCILLARYAIR_1</con:value></con:property><con:property><con:name>formOfPayment</con:name><con:value>/fulfillment/methods/5addc3092d88895789a1bf65/payment-forms/CREDITCARD/2</con:value></con:property><con:property><con:name>cardType</con:name><con:value>/fulfillment/methods/5addc3092d88895789a1bf65/payment-forms/CREDITCARD/2/payment-card-types/VI</con:value></con:property><con:property><con:name>allocationRef</con:name><con:value>/fulfillment/methods/5addc3092d88895789a1bf65/payment-allocations/1</con:value></con:property><con:property><con:name>optionAllocationRef</con:name><con:value>/fulfillment/methods/5addc3092d88895789a1bf65/payment-allocations/1/option-allocations/4</con:value></con:property><con:property><con:name>air_amount</con:name><con:value>400.04</con:value></con:property><con:property><con:name>m_offerRef</con:name><con:value>/offers/58d12b06d6abab5f3c182a67</con:value></con:property><con:property><con:name>m_travelerCompositionUri</con:name><con:value>/offers/58d12b06d6abab5f3c182a67/ancillaryair/traveler-compositions/0</con:value></con:property><con:property><con:name>travelerCompositionUri</con:name><con:value>/offers/5addc2f02d88895789a1bf36/air/traveler-compositions/0</con:value></con:property><con:property><con:name>reservationRef</con:name><con:value>/reservations/A000001035</con:value></con:property><con:property><con:name>paymentRef</con:name><con:value/></con:property><con:property><con:name>offerRef1</con:name><con:value>/offers/5addc2f02d88895789a1bf36</con:value></con:property><con:property><con:name>travelerCompositionUri1</con:name><con:value>/offers/5addc2f02d88895789a1bf36/air/traveler-compositions/1</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Air_Search" id="f13aced4-fd48-4072-af08-21e0782009ca"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Search" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/lfs to get tinerary price reference with LX, One way Domestic flight for one adult  and no cabin as input</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524482747791_2793"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524482747806"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524482747806"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524482747791_2793"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524482747806_2793"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "languageCode": "${TCProperties#language}",
    "originDestination": [
        {
            "origin": {
                "date": "${TCProperties#Outbound_Date}",
                "windowBefore": "0",
                "windowAfter": "0",
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Origin}"
                }
            },
            "destination": {
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Destination}"
                }
            }
        }
    ],
    "travelerComposition": [
        {
            "count": "${TCProperties#Number_of_Adults}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/ADT"
            }
        },
        
        {
            "count": "${TCProperties#Number_of_Children}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/CHD"
            }
        }
    ],
    "pos": "${TCProperties#POS}",
    "preferences": {
        "cabin": {
            "cabinRef": {
                "uri": "/info/air/cabin-classes/${TCProperties#Cabin}"
            }
        }
    }
}
</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f56d4c53-af85-43bf-90a7-5bf1a91421f2" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c971de40-b89e-45fa-834a-3855f135ce0c" name="JsonPath Count - No Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="803cd1e9-3a86-4f64-bea8-02c34b958368" name="JsonPath Existence Match - ItineraryPriceRef"><con:configuration><path>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2758936c-e002-49fe-b1f0-359382509cf2" name="Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8d233546-71cc-478d-a6b2-92f29f5b7697" name="Script Assertion 3"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ItineraryPriceRef" id="300a5c53-0d5f-4311-b1f8-152ba4eb32bc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>itineraryPriceRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</con:sourcePath><con:targetType>itineraryPriceRef_1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userSessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionID</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Air_Price" id="f9e81a2d-6e23-415f-83c5-d94007459870"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/price" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Price" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/price to get Offer URI</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524482747791_2793"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524482747822"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524482747822"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524482747791_2793"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524482747822_2793"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{     "userSessionId": "${TransferProperties#userSessionID}",     
	"languageCode": "${TCProperties#language}",
	"itineraryPriceRQ": {         
		"price": "true",         
		"itineraryPriceRef": [            
		{                 
			"uri": "${TransferProperties#itineraryPriceRef_1}"             
			} 
			]     },     
			"pos": "${TCProperties#POS}" }
			</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66918970-0946-42b3-88f9-c78fda3f2310" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="a423a547-5b8d-4063-8b9a-d2444abccab4" name="JsonPath Count - NoErrors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b689c70d-bcdc-47b2-adea-5b0f534b3dd3" name="JsonPath Existence Match - OfferRef"><con:configuration><path>$.offer[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="20c6818a-5902-4150-8911-9f7f5ae8649a" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_OfferRef" id="10dc2ec0-ff0c-41ce-beda-0cf5bd480bfb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerCompositionUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[0]</con:sourcePath><con:targetType>travelerCompositionUri</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerComposition1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[2]</con:sourcePath><con:targetType>travelerCompositionUri1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Reservation_Post" id="724c3b23-058b-4cc5-9f31-d3218401e768"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/reservations" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reservation_Post" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524482747791_2793"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524482747838"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524482747838"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524482747791_2793"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524482747838_2793"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"traveler": [
		{
			"uri": "/travelers/0",
			"id": "0",
			"dateOfBirth": "1977-07-20-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "${TCProperties#passenger1FirstName}",
				"last": "${TCProperties#passenger1LastName}",
				"titleRef": {
					"uri": "/info/traveler-name-titles/MR",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/1",
					"id": "1",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/1.EAT",
						"id": "1.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"postalCode": "90210",
					"stateCode": "ON",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/ADT",
				"id": "ADT"
			}
		}, {
			"uri": "/travelers/1",
			"id": "0",
			"dateOfBirth": "2011-04-21-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "${TCProperties#passenger2FirstName}",
				"last": "${TCProperties#passenger2LastName}",
				"titleRef": {
					"uri": "/info/traveler-name-titles/Master",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/2",
					"id": "2",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/2.EAT",
						"id": "2.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"stateCode": "ON",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/CHD",
				"id": "CHD"
			}
		}
	],
	"item": [
		{
			"book": true,
			"offerRef": {
				"uri": "${TransferProperties#offerRef}"
			}
		}
	],
	"travelerAssignment": [
		{
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri}"
			},
			"travelerRef": {
				"uri": "/travelers/0"
			}
		}, {
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri1}"
			},
			"travelerRef": {
				"uri": "/travelers/1"
			}
		}
	]
}</con:request><con:originalUri>http://10.160.6.148/tdprest-2/api/reservation</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c9d5b6d0-156a-40bc-aed3-f931f2096fab" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="57898c12-aaae-4bcb-86d6-deaad57c6349" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="955f0a2f-3f2a-45ce-880d-1256e35792a1" name="JsonPath Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="267c181b-0d35-4260-8521-74000c582e14" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ReservationRef" id="a6965e0f-0e1a-466b-b9ee-7b88054d1a47"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>reservationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Reservation_Post</con:sourceStep><con:sourcePath>$.reservation.uri</con:sourcePath><con:targetType>reservationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Methods" id="4a311c35-2bfb-4be4-ae71-8df15b6b7a03"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/tdprest-2/api/fulfillment/methods" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Methods" id="c71f685c-8bb6-417f-9e46-bbffbe66f544" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524482747791_2793"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524482747853"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524482747853"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524482747791_2793"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524482747853_2793"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"reservationRef": {
		"uri": "${TransferProperties#reservationRef}"
	}
}</con:request><con:originalUri>http://localhost/fulfillment/methods</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f4911e4e-8cde-4acb-9cd5-32c46e76441b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="eef435b3-daaf-4ffe-9489-ee43b6150fec" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="46d611a1-663b-42ae-bb1b-f7ac275764c4" name="JsonPath Count  Warnings"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3c9f471a-5103-4d9d-84d2-e53d8845487d" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_FOP_Data" id="659626db-9603-428d-b0ae-65d0f6f62f3f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>formOfPayment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].uri[0]</con:sourcePath><con:targetType>formOfPayment</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cardType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentCard.type[?(@.id=='VI')].uri[0]</con:sourcePath><con:targetType>cardType</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>allocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation[0].paymentAllocationRef.uri</con:sourcePath><con:targetType>allocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>optionAllocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation.optionAllocationRef.uri[0]</con:sourcePath><con:targetType>optionAllocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>air_amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.amount</con:sourcePath><con:targetType>air_amount</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Currency</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.currency</con:sourcePath><con:targetType>Currency</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Orders" id="d086e39f-8fb9-49c0-8673-fc4a238069d9"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/fulfillment/orders" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Orders" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524482747791_2793"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524482747869"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524482747869"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524482747791_2793"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524482747869_2793"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"application": {
"wrapCallback": false,
"callback": [
{
"type": "COMPLETE",
"url": "http://57.20.104.193:29443/PaymentHub/post"
}, {
"type": "FAILURE",
"url": "http://errorurl.com"
}, {
"type": "CANCEL",
"url": "http://cancelurl.com"
}
],
"browserInfo": {
"acceptHeader": "application/xml",
"userAgent": "Java/1.8.0_101"
}
},

	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"paymentDetails": {
		"id": 1,
		"uri": "/payment-details/1",
		"customerRef": {
			"uri": "${TransferProperties#reservationRef}/customers/1"
		},
		"paymentFormRef": {
			"uri": "${TransferProperties#formOfPayment}"
		},
		"paymentCard": {
			"number": "${TCProperties#Token number}",
			"expiryDate": "2018-12-31",
			"holderName": "Paul Ziert",
			"issuingCountry": "CA",
			"typeRef": {
				"uri": "${TransferProperties#cardType}"
			},
			"securityCode": 123,
			"billingAddressRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/addresses/1"
			},
			"phoneRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/phones/1"
			},
			"emailRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/emails/1"
			}
		}
	},
	"payment": {
		"allocationRef": {
			"uri": "${TransferProperties#allocationRef}"
		},
		"option": {
			"detailsRef": {
				"uri": "/payment-details/1"
			},
			"allocationRef": {
				"uri": "${TransferProperties#optionAllocationRef}"
			},
			"value": {
				"money": {
					"amount":"${TransferProperties#air_amount}",
					"currency": "${TransferProperties#Currency}"
				}
			}
		}
	}
}</con:request><con:originalUri>http://localhost/tdprest-2/api/fulfillment/orders</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="867da589-56f7-4d9e-9dd2-675187865f9a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fec7caae-1863-471e-bb22-396c480f9b54" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="b17fbd0a-19d1-4ed3-898a-9f44c5cd0a63" name="JsonPath Count  Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d5881854-0cad-42da-b102-0bc61b80f12b" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_PNR" id="02c6eac2-1ad1-47ea-ac74-6ad7fd695eb8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>pnr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation..bookingReference.value[1]</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Usersession Id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId_LH</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.item.air.itinerary.originDestination.flightSegment.operatingAirlineRef.id[0]</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="2333cd54-2012-4062-b897-cbe5e1835f63"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524482747791_2793"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524482747884"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524482747884"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524482747791_2793"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524482747884_2793"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"passengers": {
		"passenger": [
			{
				"identification": {
					"passengerLastName": "${TCProperties#passenger1LastName}",
					"passengerFirstName": "${TCProperties#passenger1FirstName}",
					"bookingReference": "${TCProperties#PNR}",
					"flight": {
						"departureAirport": "${TCProperties#Outbound_Origin}",
						"airlineCode": "${TCProperties#AirlineCode}",
            "type": "OPERATING"
					}
				}
			}, {
				"identification": {
					"passengerLastName": "${TCProperties#passenger2LastName}",
					"passengerFirstName": "${TCProperties#passenger2FirstName}",
					"bookingReference": "${TCProperties#PNR}",
					"flight": {
						"departureAirport": "${TCProperties#Outbound_Origin}",
						"airlineCode": "${TCProperties#AirlineCode}",
            "type": "OPERATING"
					}
				}
			}
		]
	},
	"dcsOnly": "true"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus 1st Passenger"><con:configuration><path>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus 1st Passenger"><con:configuration><path>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus 1st Passenger"><con:configuration><path>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="94b7e7cc-5a64-4662-81db-0c33c0437645" name="VerifyFlightStatus 2nd Passenger"><con:configuration><path>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8a248b36-f0db-4e1f-ada4-7a3801e3de38" name="VerifyCheckinStatus 2nd Passenger"><con:configuration><path>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="af6d66fc-bb7f-4e9e-92c9-7c745573f46c" name="JsonPath Match"><con:configuration><path>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retreival" id="8d6a83af-0107-4752-8ac8-0eda374687b6"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Update_Acceptance" id="b04f8fbc-be36-4d48-b351-92e7a977f0f6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[2].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.bookingReference[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-SecondPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-ThirdPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger Id_Firstpassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger id_SecondPassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="dd4c9118-f109-43c7-80d8-32f9e7959bb3"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false" timeout="600000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524482747791_2793"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524482747900"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524482747900"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="123456"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524482747791_2793"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524482747900_2793"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger":    [
            {
         "identification": {"passengerId": "2301DA88000084BCFRA"},
         "bound": {"flight": [         {
            "departureAirport": "FRA",
            "airlineCode": "LH",
            "departureDate": "2018-02-27",
            "arrivalAirport": "DUS",
            "flightNumber": "76"
         }]}
      },
            {
         "identification": {"passengerId": "2301DA88000084BDFRA"},
         "bound": {"flight": [         {
            "departureAirport": "FRA",
            "airlineCode": "LH",
            "departureDate": "2018-02-27",
            "arrivalAirport": "DUS",
            "flightNumber": "76"
         }]}
      }
   ]},
   "action": "ACCEPTANCE"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus 1st Passenger"><con:configuration><path>.checkinRecord.passenger[0].checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="781434ec-9fd2-4882-a0b8-48f50a3f733a" name="VerifyCheckinStatus 2nd Passenger"><con:configuration><path>.checkinRecord.passenger[1].checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="2fb6dffe-e3d3-41c2-a759-83c644ac03fc"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Doc Option_First Passenger" id="c66f932a-8eeb-4def-beab-a031019d02c9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>departure-airport</con:targetType><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.departureDate[0]</con:sourcePath><con:targetType>departure-date</con:targetType><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>arrival-airport</con:targetType><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>airline-code</con:targetType><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[2].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.bookingReference[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureAirport[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureDate[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-SecondPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-ThirdPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>flight-number</con:targetType><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>Passenger Id_Firstpassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>passenger-id</con:targetType><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>Passenger id_SecondPassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].passengerId</con:sourcePath><con:targetType>passenger-id</con:targetType><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options_First passenger" id="9c6246bb-538f-40f4-8fb2-8b02472bcbda"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options_First passenger" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524482747791_2793"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524482747916"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524482747916"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="123456"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524482747791_2793"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524482747916_2793"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#Outbound_Date}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#FlightNumber}"
   }]},
   "identification": [{"passengerId": "${TCProperties#passengerID}"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="VerifyDocumentOptions"><con:configuration><path>.documentOptions.bound.flight.documentOptions</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="76"/>
  <con:entry key="arrival-airport" value="DUS"/>
  <con:entry key="passenger-id" value="2301DA88000084BCFRA"/>
  <con:entry key="departure-date" value="2018-02-27"/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Document Option_First Passenger" id="8580549b-c01a-4d1d-970c-13dbf3d1eac7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Doc Option_Second Passenger" id="2e10d4b9-aa8c-427c-affc-4efa5e83fb40"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>departure-airport</con:targetType><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.departureDate[0]</con:sourcePath><con:targetType>departure-date</con:targetType><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>arrival-airport</con:targetType><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>airline-code</con:targetType><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[2].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.bookingReference[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>airline-code</con:targetType><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>departure-airport</con:targetType><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureDate[0]</con:sourcePath><con:targetType>departure-date</con:targetType><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>arrival-airport</con:targetType><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-SecondPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-ThirdPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>flight-number</con:targetType><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>flight-number</con:targetType><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>Passenger Id_Firstpassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>passenger-id</con:targetType><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger id_SecondPassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].passengerId</con:sourcePath><con:targetType>passenger-id</con:targetType><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options_Second passenger" id="e9f678fa-6eba-4cc9-ac26-af7b7af9dcc3"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options_Second passenger" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524482747791_2793"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524482747931"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524482747931"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="123456"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524482747791_2793"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524482747931_2793"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#Outbound_Date}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#FlightNumber}"
   }]},
   "identification": [{"passengerId": "${TCProperties#passengerId 1}"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="VerifyDocumentOptions"><con:configuration><path>.documentOptions.bound.flight.documentOptions</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="76"/>
  <con:entry key="arrival-airport" value="DUS"/>
  <con:entry key="passenger-id" value="2301DA88000084BDFRA"/>
  <con:entry key="departure-date" value="2018-02-27"/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Document Option_Second Passenger" id="86a4b717-b2bb-4b40-90de-41126d560f3b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation" id="250e926a-0938-499b-9593-d9891f5285d0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[2].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.bookingReference[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-SecondPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-ThirdPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger Id_Firstpassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger id_SecondPassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="47611426-5bec-4bc7-baae-7dfa1b52884e"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524482747791_2793"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524482747947"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524482747947"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="123456"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524482747791_2793"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524482747947_2793"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger":    [
            {
         "identification": {"passengerId": "2301DA88000084BCFRA"},
         "bound": [         {
            "flight": [            {
               "departureAirport": "FRA",
               "airlineCode": "LH",
               "departureDate": "2018-02-27",
               "arrivalAirport": "DUS",
               "flightNumber": "76"
            }],
            "documentType": [{"type": "BOARDINGPASS"}]
         }]
      },
            {
         "identification": {"passengerId": "2301DA88000084BDFRA"},
         "bound": [         {
            "flight": [            {
               "departureAirport": "FRA",
               "airlineCode": "LH",
               "departureDate": "2018-02-27",
               "arrivalAirport": "DUS",
               "flightNumber": "76"
            }],
            "documentType": [{"type": "BOARDINGPASS"}]
         }]
      }
   ]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="VerifyCheckinStatus 1st Passenger"><con:configuration><path>.documentGeneration.document.passengerDocument[0].boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="VerifyCheckinStatus 2nd Passenger"><con:configuration><path>.documentGeneration.document.passengerDocument[1].boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Document Generation" id="0592a949-4a3e-4f8f-9473-0a85faa5a25f"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>8377</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="cb48e3d1-9643-4f24-b98b-9943861450a1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T005_Fulfill_MultiPassenger_CheckIn_ LX" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="3b72349e-1a17-417a-98fb-52a328f9e8c6" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="bacebcbd-a1f7-40b4-a798-3c916eb730df"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 0
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="041ff05c-d0d6-44ec-82b8-1377bafeb38b"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LX_A-FRA_MKI-K_CH</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2018-05-28</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>GVA</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value>2018-06-04</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Infants</con:name><con:value>1</con:value></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>520000A3LBI60007</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>LO7GGD</con:value></con:property><con:property><con:name>passenger1FirstName</con:name><con:value>Kuno</con:value></con:property><con:property><con:name>passenger1LastName</con:name><con:value>Keineahnung</con:value></con:property><con:property><con:name>passenger2FirstName</con:name><con:value>GC</con:value></con:property><con:property><con:name>passenger2LastName</con:name><con:value>Test</con:value></con:property><con:property><con:name>passenger3FirstName</con:name><con:value>PAXYC</con:value></con:property><con:property><con:name>passenger3LastName</con:name><con:value>Test</con:value></con:property><con:property><con:name>FlightNumber</con:name><con:value>2804</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-10-04</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301CAE300005AE5</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LX</con:value></con:property><con:property><con:name>bookingReference</con:name><con:value>RUB9E9</con:value></con:property><con:property><con:name>departureAirport</con:name><con:value>GVA</con:value></con:property><con:property><con:name>FirstName</con:name><con:value/></con:property><con:property><con:name>LastName</con:name><con:value/></con:property><con:property><con:name>passengerID1</con:name><con:value>2301CAE300005AE6</con:value></con:property><con:property><con:name>UsersessionId_LX</con:name><con:value>5b0ba26886c56b62f8811356</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="TransferProperties" id="ebd2f745-7f5b-4122-9b40-d1a1c776749d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>userSessionID</con:name><con:value>5b0ba26886c56b62f8811356</con:value></con:property><con:property><con:name>itineraryPriceRef_1</con:name><con:value>/air/search/5b0ba26886c56b62f8811357/itinerary-prices/1_2</con:value></con:property><con:property><con:name>itineraryPriceRef_2</con:name><con:value/></con:property><con:property><con:name>offerRef</con:name><con:value>/offers/5b0ba26d86c56b62f881135f</con:value></con:property><con:property><con:name>m_offerRef_ID</con:name><con:value>/merchandizing/58d12b05d6abab5f3c182a65/offers/ANCILLARYAIR_1</con:value></con:property><con:property><con:name>formOfPayment</con:name><con:value>/fulfillment/methods/5b0ba27686c56b62f8811361/payment-forms/CREDITCARD/1</con:value></con:property><con:property><con:name>cardType</con:name><con:value>/fulfillment/methods/5b0ba27686c56b62f8811361/payment-forms/CREDITCARD/1/payment-card-types/MC</con:value></con:property><con:property><con:name>allocationRef</con:name><con:value>/fulfillment/methods/5b0ba27686c56b62f8811361/payment-allocations/1</con:value></con:property><con:property><con:name>optionAllocationRef</con:name><con:value>/fulfillment/methods/5b0ba27686c56b62f8811361/payment-allocations/1/option-allocations/2</con:value></con:property><con:property><con:name>air_amount</con:name><con:value>251.0</con:value></con:property><con:property><con:name>m_offerRef</con:name><con:value>/offers/58d12b06d6abab5f3c182a67</con:value></con:property><con:property><con:name>m_travelerCompositionUri</con:name><con:value>/offers/58d12b06d6abab5f3c182a67/ancillaryair/traveler-compositions/0</con:value></con:property><con:property><con:name>travelerCompositionUri</con:name><con:value>/offers/5b0ba26d86c56b62f881135f/air/traveler-compositions/0</con:value></con:property><con:property><con:name>reservationRef</con:name><con:value>/reservations/A000001024</con:value></con:property><con:property><con:name>paymentRef</con:name><con:value/></con:property><con:property><con:name>offerRef1</con:name><con:value>/offers/5b0ba26d86c56b62f881135f</con:value></con:property><con:property><con:name>travelerCompositionUri1</con:name><con:value>/offers/5b0ba26d86c56b62f881135f/air/traveler-compositions/1</con:value></con:property><con:property><con:name>Currency</con:name><con:value>CHF</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Air_Search" id="4b042779-f452-4fa8-814b-e16e447d8686"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Search" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/lfs to get tinerary price reference with LX, One way Domestic flight for one adult  and no cabin as input</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524483435810_3882"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524483435841"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524483435841"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524483435810_3882"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524483435841_3882"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "languageCode": "${TCProperties#language}",
    "originDestination": [
        {
            "origin": {
                "date": "${TCProperties#Outbound_Date}",
                "windowBefore": "0",
                "windowAfter": "0",
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Origin}"
                }
            },
            "destination": {
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Destination}"
                }
            }
        }
    ],
    "travelerComposition": [
        {
            "count": "${TCProperties#Number_of_Adults}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/ADT"
            }
        },
        
        {
            "count": "${TCProperties#Number_of_Children}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/CHD"
            }
        }
    ],
    "pos": "${TCProperties#POS}",
    "preferences": {
        "cabin": {
            "cabinRef": {
                "uri": "/info/air/cabin-classes/${TCProperties#Cabin}"
            }
        }
    }
}
</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f56d4c53-af85-43bf-90a7-5bf1a91421f2" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c971de40-b89e-45fa-834a-3855f135ce0c" name="JsonPath Count - No Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="803cd1e9-3a86-4f64-bea8-02c34b958368" name="JsonPath Existence Match - ItineraryPriceRef"><con:configuration><path>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2758936c-e002-49fe-b1f0-359382509cf2" name="Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8d233546-71cc-478d-a6b2-92f29f5b7697" name="Script Assertion 3"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ItineraryPriceRef" id="2997edc1-4963-476b-8713-afbd26195276"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>itineraryPriceRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>.search.itineraryPrice[1].uri</con:sourcePath><con:targetType>itineraryPriceRef_1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userSessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionID</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Air_Price" id="fed487f8-3eb5-4302-bf07-d1a3e608c000"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/price" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Price" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false" timeout="900000000000000000000000000000000000000000000000000000"><con:description>Call POST /air/price to get Offer URI</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524483435810_3882"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524483435857"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524483435857"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524483435810_3882"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524483435857_3882"/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@bind_address"/></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{     "userSessionId": "${TransferProperties#userSessionID}",     
	"languageCode": "${TCProperties#language}",
	"itineraryPriceRQ": {         
		"price": "true",         
		"itineraryPriceRef": [            
		{                 
			"uri": "${TransferProperties#itineraryPriceRef_1}"             
			} 
			]     },     
			"pos": "${TCProperties#POS}" }
			</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66918970-0946-42b3-88f9-c78fda3f2310" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="a423a547-5b8d-4063-8b9a-d2444abccab4" name="JsonPath Count - NoErrors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b689c70d-bcdc-47b2-adea-5b0f534b3dd3" name="JsonPath Existence Match - OfferRef"><con:configuration><path>$.offer[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="20c6818a-5902-4150-8911-9f7f5ae8649a" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_OfferRef" id="02c1a49f-f534-449d-b147-2fe4bba731e8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerCompositionUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[0]</con:sourcePath><con:targetType>travelerCompositionUri</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerComposition1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[2]</con:sourcePath><con:targetType>travelerCompositionUri1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Reservation_Post" id="0acf3d64-ff9f-47d2-afd5-eb7ba0f943b9"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/reservations" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reservation_Post" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524483435810_3882"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524483435872"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524483435872"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524483435810_3882"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524483435872_3882"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"traveler": [
		{
			"uri": "/travelers/0",
			"id": "0",
			"dateOfBirth": "1977-07-20-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "Kuno",
				"last": "Keineahnung",
				"titleRef": {
					"uri": "/info/traveler-name-titles/MR",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/1",
					"id": "1",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/1.EAT",
						"id": "1.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"postalCode": "90210",
					"stateCode": "ON",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/ADT",
				"id": "ADT"
			}
		}, {
			"uri": "/travelers/1",
			"id": "0",
			"dateOfBirth": "2011-04-21-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "GC",
				"last": "Test",
				"titleRef": {
					"uri": "/info/traveler-name-titles/Master",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/2",
					"id": "2",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/2.EAT",
						"id": "2.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"stateCode": "ON",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/CHD",
				"id": "CHD"
			}
		}
	],
	"item": [
		{
			"book": true,
			"offerRef": {
				"uri": "${TransferProperties#offerRef}"
			}
		}
	],
	"travelerAssignment": [
		{
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri}"
			},
			"travelerRef": {
				"uri": "/travelers/0"
			}
		}, {
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri1}"
			},
			"travelerRef": {
				"uri": "/travelers/1"
			}
		}
	]
}</con:request><con:originalUri>http://10.160.6.148/tdprest-2/api/reservation</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c9d5b6d0-156a-40bc-aed3-f931f2096fab" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="57898c12-aaae-4bcb-86d6-deaad57c6349" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="955f0a2f-3f2a-45ce-880d-1256e35792a1" name="JsonPath Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="267c181b-0d35-4260-8521-74000c582e14" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ReservationRef" id="b683c258-32c3-4b58-9e36-0568110bb3a2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>reservationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Reservation_Post</con:sourceStep><con:sourcePath>$.reservation.uri</con:sourcePath><con:targetType>reservationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Methods" id="ab152a27-9a54-4413-86fc-f2d6d8a1b14b"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/tdprest-2/api/fulfillment/methods" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Methods" id="c71f685c-8bb6-417f-9e46-bbffbe66f544" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524483435810_3882"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524483435888"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524483435888"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524483435810_3882"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524483435888_3882"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"reservationRef": {
		"uri": "${TransferProperties#reservationRef}"
	}
}</con:request><con:originalUri>http://localhost/fulfillment/methods</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f4911e4e-8cde-4acb-9cd5-32c46e76441b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="eef435b3-daaf-4ffe-9489-ee43b6150fec" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="46d611a1-663b-42ae-bb1b-f7ac275764c4" name="JsonPath Count  Warnings"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3c9f471a-5103-4d9d-84d2-e53d8845487d" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_FOP_Data" id="464caa11-e04b-4089-b39d-56ce4f2fe4e2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>formOfPayment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].uri[0]</con:sourcePath><con:targetType>formOfPayment</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cardType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentCard.type[?(@.id=='MC')].uri[0]</con:sourcePath><con:targetType>cardType</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>allocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation[0].paymentAllocationRef.uri</con:sourcePath><con:targetType>allocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>optionAllocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation.optionAllocationRef.uri[0]</con:sourcePath><con:targetType>optionAllocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>air_amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.amount</con:sourcePath><con:targetType>air_amount</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Currency</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.currency</con:sourcePath><con:targetType>Currency</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Orders" id="b99065a6-c84f-46c7-9069-9d8e6f2926a9"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/fulfillment/orders" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Orders" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524483435810_3882"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524483435903"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524483435903"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524483435810_3882"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524483435903_3882"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"application": {
"wrapCallback": false,
"callback": [
{
"type": "COMPLETE",
"url": "http://57.20.104.193:29443/PaymentHub/post"
}, {
"type": "FAILURE",
"url": "http://errorurl.com"
}, {
"type": "CANCEL",
"url": "http://cancelurl.com"
}
],
"browserInfo": {
"acceptHeader": "application/xml",
"userAgent": "Java/1.8.0_101"
}
},

	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"paymentDetails": {
		"id": 1,
		"uri": "/payment-details/1",
		"customerRef": {
			"uri": "${TransferProperties#reservationRef}/customers/1"
		},
		"paymentFormRef": {
			"uri": "${TransferProperties#formOfPayment}"
		},
		"paymentCard": {
			"number": "${TCProperties#Token number}",
			"expiryDate": "2018-12-31",
			"holderName": "Paul Ziert",
			"issuingCountry": "CA",
			"typeRef": {
				"uri": "${TransferProperties#cardType}"
			},
			"securityCode": 123,
			"billingAddressRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/addresses/1"
			},
			"phoneRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/phones/1"
			},
			"emailRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/emails/1"
			}
		}
	},
	"payment": {
		"allocationRef": {
			"uri": "${TransferProperties#allocationRef}"
		},
		"option": {
			"detailsRef": {
				"uri": "/payment-details/1"
			},
			"allocationRef": {
				"uri": "${TransferProperties#optionAllocationRef}"
			},
			"value": {
				"money": {
					"amount":"${TransferProperties#air_amount}",
					"currency": "${TransferProperties#Currency}"
				}
			}
		}
	}
}</con:request><con:originalUri>http://localhost/tdprest-2/api/fulfillment/orders</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="867da589-56f7-4d9e-9dd2-675187865f9a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fec7caae-1863-471e-bb22-396c480f9b54" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="b17fbd0a-19d1-4ed3-898a-9f44c5cd0a63" name="JsonPath Count  Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d5881854-0cad-42da-b102-0bc61b80f12b" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_PNR" id="e3098c66-3335-4c4b-b358-56a02af1c8f4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>pnr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation..bookingReference.value[1]</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Usersession Id</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId_LX</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.item.air.itinerary.originDestination.flightSegment.operatingAirlineRef.id[0]</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="8878d47d-e7c4-4687-9a68-263291629cec"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524483435810_3882"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524483435919"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524483435919"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId_LX}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524483435810_3882"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524483435919_3882"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"passengers": {
		"passenger": [
			{
				"identification": {
					"passengerLastName": "${TCProperties#passenger1LastName}",
					"passengerFirstName": "${TCProperties#passenger1FirstName}",
					"bookingReference": "${TCProperties#PNR}",
					"flight": {
						"departureAirport": "${TCProperties#Outbound_Origin}",
						"airlineCode": "${TCProperties#AirlineCode}",
            "type": "OPERATING"
					}
				}
			}, {
				"identification": {
					"passengerLastName": "${TCProperties#passenger2LastName}",
					"passengerFirstName": "${TCProperties#passenger2FirstName}",
					"bookingReference": "${TCProperties#PNR}",
					"flight": {
						"departureAirport": "${TCProperties#Outbound_Origin}",
						"airlineCode": "${TCProperties#AirlineCode}",
            "type": "OPERATING"
					}
				}
			}
		]
	},
	"dcsOnly": "true"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus 1st Passenger"><con:configuration><path>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus 1st Passenger"><con:configuration><path>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus 1st Passenger"><con:configuration><path>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="94b7e7cc-5a64-4662-81db-0c33c0437645" name="VerifyFlightStatus 2nd Passenger"><con:configuration><path>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8a248b36-f0db-4e1f-ada4-7a3801e3de38" name="VerifyCheckinStatus 2nd Passenger"><con:configuration><path>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="af6d66fc-bb7f-4e9e-92c9-7c745573f46c" name="JsonPath Match"><con:configuration><path>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retreival" id="209905e2-5fb0-4d51-81b5-f9f33381c5b0"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Acceptance" id="f27a2b32-c890-4277-b662-8fe1843c8958"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[2].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.bookingReference[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-SecondPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-ThirdPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger Id_Firstpassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger id_SecondPassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="1c242adb-503b-4d2b-bd6b-92c66f39497a"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false" timeout="600000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524483435810_3882"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524483435935"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524483435935"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId_LX}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524483435810_3882"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524483435935_3882"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger":    [
            {
         "identification": {"passengerId": "2301CAE300005AE5"},
         "bound": {"flight": [         {
            "departureAirport": "ZRH",
            "airlineCode": "LX",
            "departureDate": "2018-05-28",
            "type": "OPERATING",
            "arrivalAirport": "GVA",
            "flightNumber": "2804"
         }]}
      },
            {
         "identification": {"passengerId": "2301CAE300005AE6"},
         "bound": {"flight": [         {
            "departureAirport": "ZRH",
            "airlineCode": "LX",
            "departureDate": "2018-05-28",
            "type": "OPERATING",
            "arrivalAirport": "GVA",
            "flightNumber": "2804"
         }]}
      }
   ]},
   "action": "ACCEPTANCE"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus 1st Passenger"><con:configuration><path>.checkinRecord.passenger[0].checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="781434ec-9fd2-4882-a0b8-48f50a3f733a" name="VerifyCheckinStatus 2nd Passenger"><con:configuration><path>.checkinRecord.passenger[1].checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="169c3629-7d5f-4c1d-af60-aa5c8d1c7294"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Doc Option_First Passenger" id="d1b88a46-a57b-4755-95de-37c6e0b47491"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Outbound_Date</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[2].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.bookingReference[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureAirport[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureDate[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-SecondPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-ThirdPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>FlightNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>Passenger Id_Firstpassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>Passenger id_SecondPassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].passengerId</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options_First passenger" id="eeb202de-3aa1-474d-bfd8-a8777227927b"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options_First passenger" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524483435810_3882"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524483435950"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524483435950"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId_LX}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524483435810_3882"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524483435950_3882"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": [{"passengerId": "${TCProperties#passengerID}"}],
   "bound": {"flight": [   {
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "airlineCode": "${TCProperties#airlineCode}",
      "departureDate": "${TCProperties#Outbound_Date}",
      "type": "OPERATING",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#FlightNumber}"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="VerifyDocumentOptions"><con:configuration><path>.documentOptions.bound.flight.documentOptions</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Document Option_First Passenger" id="00b14b94-861e-47c1-a2c5-505d46db5723"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Doc Option_Second Passenger" id="6dc01914-4ba6-4338-a4a3-c5ce1ee088c9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Outbound_Date</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[2].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.bookingReference[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureAirport[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureDate[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-SecondPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-ThirdPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>FlightNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>Passenger Id_Firstpassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>Passenger id_SecondPassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].passengerId</con:sourcePath><con:targetType>passengerID1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options_Second passenger" id="417afb38-88da-4ab6-aeec-fca0c5cb6921"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options_Second passenger" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524483435810_3882"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524483435966"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524483435966"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId_LX}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524483435810_3882"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524483435966_3882"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": [{"passengerId": "${TCProperties#passengerID1}"}],
   "bound": {"flight": [   {
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "airlineCode": "${TCProperties#airlineCode}",
      "departureDate": "${TCProperties#Outbound_Date}",
      "type": "OPERATING",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#FlightNumber}"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="VerifyDocumentOptions"><con:configuration><path>.documentOptions.bound.flight.documentOptions</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Document Option_Second Passenger" id="800f5ece-3fe7-4113-a21f-6267796dd8ab"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation" id="2fa5cff4-33b1-407c-8e99-054137058c28"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[2].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.bookingReference[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-SecondPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-ThirdPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger Id_Firstpassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger id_SecondPassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="c634d88c-37d3-44b7-bf7c-ad5ccc1900c2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524483435810_3882"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524483435981"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524483435981"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId_LX}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524483435810_3882"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524483435981_3882"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger":    [
            {
         "identification": {"passengerId": "2301CAE300005AE5"},
         "bound": [         {
            "flight": [            {
               "departureAirport": "ZRH",
               "airlineCode": "LX",
               "departureDate": "2018-05-28",
               "type": "OPERATING",
               "arrivalAirport": "GVA",
               "flightNumber": "2804"
            }],
            "documentType": [{"type": "BOARDINGPASS"}]
         }]
      },
            {
         "identification": {"passengerId": "2301CAE300005AE6"},
         "bound": [         {
            "flight": [            {
               "departureAirport": "ZRH",
               "airlineCode": "LX",
               "departureDate": "2018-05-28",
               "type": "OPERATING",
               "arrivalAirport": "GVA",
               "flightNumber": "2804"
            }],
            "documentType": [{"type": "BOARDINGPASS"}]
         }]
      }
   ]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="VerifyCheckinStatus 1st Passenger"><con:configuration><path>.documentGeneration.document.passengerDocument[0].boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="VerifyCheckinStatus 2nd Passenger"><con:configuration><path>.documentGeneration.document.passengerDocument[1].boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Document Generation" id="f4a64643-7c11-4f27-bb42-b76dbb0f7c66"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>9164</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="d3ea98a4-1b25-4e9f-b5ba-b77e9a2bb03b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T006_Fulfill_MultiPassenger_CheckIn_OS" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="f0ba81e0-2238-4d9f-8b47-260ad0d7b6ea" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "OS")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="5e8add98-39e6-460b-adcd-6f4be5ed2f6c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="e1f35a62-5a34-4bed-8401-a1f3c97c493d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>OS_A-FRA_MKI-K_DE</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2018-05-29</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>VIE</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>INN</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value>2018-06-05</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Infants</con:name><con:value>1</con:value></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>520000A3LBI60007</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>KUV2SJ</con:value></con:property><con:property><con:name>passenger1FirstName</con:name><con:value>Kuno</con:value></con:property><con:property><con:name>passenger1LastName</con:name><con:value>Keineahnung</con:value></con:property><con:property><con:name>passenger2FirstName</con:name><con:value>Didhiti</con:value></con:property><con:property><con:name>passenger2LastName</con:name><con:value>Test</con:value></con:property><con:property><con:name>passenger3FirstName</con:name><con:value>PAXYC</con:value></con:property><con:property><con:name>passenger3LastName</con:name><con:value>TESTYC</con:value></con:property><con:property><con:name>FlightNumber</con:name><con:value>2802</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-10-04</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301CA3B0000A680ZRH</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>OS</con:value></con:property><con:property><con:name>bookingReference</con:name><con:value>RUB9E9</con:value></con:property><con:property><con:name>departureAirport</con:name><con:value>GVA</con:value></con:property><con:property><con:name>FirstName</con:name><con:value/></con:property><con:property><con:name>LastName</con:name><con:value/></con:property><con:property><con:name>passengerID1</con:name><con:value>2301CA3B0000A681ZRH</con:value></con:property><con:property><con:name>UsersessionId_OS</con:name><con:value>5b0549272d88895550c4e742</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="TransferProperties" id="685fc598-bc48-4fa8-8704-7415095f6191"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>userSessionID</con:name><con:value>5b0ba36186c56b62f881138d</con:value></con:property><con:property><con:name>itineraryPriceRef_1</con:name><con:value>/air/search/5b0ba36a86c56b62f881138e/itinerary-prices/1_2</con:value></con:property><con:property><con:name>itineraryPriceRef_2</con:name><con:value/></con:property><con:property><con:name>offerRef</con:name><con:value>/offers/5b0ba37386c56b62f881139f</con:value></con:property><con:property><con:name>m_offerRef_ID</con:name><con:value>/merchandizing/58d12b05d6abab5f3c182a65/offers/ANCILLARYAIR_1</con:value></con:property><con:property><con:name>formOfPayment</con:name><con:value>/fulfillment/methods/5b0ba37a86c56b62f88113a1/payment-forms/CREDITCARD/1</con:value></con:property><con:property><con:name>cardType</con:name><con:value>/fulfillment/methods/5b0ba37a86c56b62f88113a1/payment-forms/CREDITCARD/1/payment-card-types/MC</con:value></con:property><con:property><con:name>allocationRef</con:name><con:value>/fulfillment/methods/5b0ba37a86c56b62f88113a1/payment-allocations/1</con:value></con:property><con:property><con:name>optionAllocationRef</con:name><con:value>/fulfillment/methods/5b0ba37a86c56b62f88113a1/payment-allocations/1/option-allocations/3</con:value></con:property><con:property><con:name>air_amount</con:name><con:value>208.18</con:value></con:property><con:property><con:name>m_offerRef</con:name><con:value>/offers/58d12b06d6abab5f3c182a67</con:value></con:property><con:property><con:name>m_travelerCompositionUri</con:name><con:value>/offers/58d12b06d6abab5f3c182a67/ancillaryair/traveler-compositions/0</con:value></con:property><con:property><con:name>travelerCompositionUri</con:name><con:value>/offers/5b0ba37386c56b62f881139f/air/traveler-compositions/0</con:value></con:property><con:property><con:name>reservationRef</con:name><con:value>/reservations/A000001026</con:value></con:property><con:property><con:name>paymentRef</con:name><con:value/></con:property><con:property><con:name>offerRef1</con:name><con:value>/offers/5b0ba37386c56b62f881139f</con:value></con:property><con:property><con:name>travelerCompositionUri1</con:name><con:value>/offers/5b0ba37386c56b62f881139f/air/traveler-compositions/1</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Air_Search" id="4aacf047-b97f-4d25-8b1a-873105550b3e"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Search" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/lfs to get tinerary price reference with LX, One way Domestic flight for one adult  and no cabin as input</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524484441009_9323"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524484441041"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524484441041"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="OS"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524484441009_9323"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524484441041_9323"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "languageCode": "${TCProperties#language}",
    "originDestination": [
        {
            "origin": {
                "date": "${TCProperties#Outbound_Date}",
                "windowBefore": "0",
                "windowAfter": "0",
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Origin}"
                }
            },
            "destination": {
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Destination}"
                }
            }
        }
    ],
    "travelerComposition": [
        {
            "count": "${TCProperties#Number_of_Adults}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/ADT"
            }
        },
        
        {
            "count": "${TCProperties#Number_of_Children}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/CHD"
            }
        }
    ],
    "pos": "${TCProperties#POS}",
    "preferences": {
        "cabin": {
            "cabinRef": {
                "uri": "/info/air/cabin-classes/${TCProperties#Cabin}"
            }
        }
    }
}
</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f56d4c53-af85-43bf-90a7-5bf1a91421f2" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c971de40-b89e-45fa-834a-3855f135ce0c" name="JsonPath Count - No Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="803cd1e9-3a86-4f64-bea8-02c34b958368" name="JsonPath Existence Match - ItineraryPriceRef"><con:configuration><path>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2758936c-e002-49fe-b1f0-359382509cf2" name="Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8d233546-71cc-478d-a6b2-92f29f5b7697" name="Script Assertion 3"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ItineraryPriceRef" id="4cb27789-0488-48ef-9fb5-1e3c4f99baa7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>itineraryPriceRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</con:sourcePath><con:targetType>itineraryPriceRef_1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userSessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionID</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Air_Price" id="696b09bb-2e92-475e-94ed-6b55df03aac7"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/price" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Price" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false" timeout="900000000000000000000000000000000000000000000000000000000"><con:description>Call POST /air/price to get Offer URI</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524484441009_9323"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524484441087"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524484441087"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="OS"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524484441009_9323"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524484441087_9323"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{     "userSessionId": "${TransferProperties#userSessionID}",     
	"languageCode": "${TCProperties#language}",
	"itineraryPriceRQ": {         
		"price": "true",         
		"itineraryPriceRef": [            
		{                 
			"uri": "${TransferProperties#itineraryPriceRef_1}"             
			} 
			]     },     
			"pos": "${TCProperties#POS}" }
			</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66918970-0946-42b3-88f9-c78fda3f2310" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="a423a547-5b8d-4063-8b9a-d2444abccab4" name="JsonPath Count - NoErrors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b689c70d-bcdc-47b2-adea-5b0f534b3dd3" name="JsonPath Existence Match - OfferRef"><con:configuration><path>$.offer[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="20c6818a-5902-4150-8911-9f7f5ae8649a" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_OfferRef" id="b21b5cfa-ccf8-438e-bbcc-3baf3de6d954"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerCompositionUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[0]</con:sourcePath><con:targetType>travelerCompositionUri</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerComposition1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[2]</con:sourcePath><con:targetType>travelerCompositionUri1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Reservation_Post" id="ae4a469b-3f9d-48c8-848c-72cb18d91e16"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/reservations" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reservation_Post" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524484441009_9323"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524484441103"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524484441103"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="OS"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524484441009_9323"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524484441103_9323"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"traveler": [
		{
			"uri": "/travelers/0",
			"id": "0",
			"dateOfBirth": "1977-07-20-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "Kuno",
				"last": "Keineahnung",
				"titleRef": {
					"uri": "/info/traveler-name-titles/MR",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/1",
					"id": "1",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/1.EAT",
						"id": "1.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"postalCode": "90210",
					"stateCode": "ON",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/ADT",
				"id": "ADT"
			}
		}, {
			"uri": "/travelers/1",
			"id": "0",
			"dateOfBirth": "2011-04-21-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "GC",
				"last": "Test",
				"titleRef": {
					"uri": "/info/traveler-name-titles/Master",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/2",
					"id": "2",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/2.EAT",
						"id": "2.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"stateCode": "ON",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/CHD",
				"id": "CHD"
			}
		}
	],
	"item": [
		{
			"book": true,
			"offerRef": {
				"uri": "${TransferProperties#offerRef}"
			}
		}
	],
	"travelerAssignment": [
		{
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri}"
			},
			"travelerRef": {
				"uri": "/travelers/0"
			}
		}, {
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri1}"
			},
			"travelerRef": {
				"uri": "/travelers/1"
			}
		}
	]
}</con:request><con:originalUri>http://10.160.6.148/tdprest-2/api/reservation</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c9d5b6d0-156a-40bc-aed3-f931f2096fab" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="57898c12-aaae-4bcb-86d6-deaad57c6349" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="955f0a2f-3f2a-45ce-880d-1256e35792a1" name="JsonPath Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="267c181b-0d35-4260-8521-74000c582e14" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ReservationRef" id="c423011f-36a7-49a5-84e1-94ff830a2e06"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>reservationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Reservation_Post</con:sourceStep><con:sourcePath>$.reservation.uri</con:sourcePath><con:targetType>reservationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Methods" id="d76d07ff-5c32-4879-a44f-17f737376e21"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/tdprest-2/api/fulfillment/methods" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Methods" id="c71f685c-8bb6-417f-9e46-bbffbe66f544" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524484441009_9323"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524484441119"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524484441119"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="OS"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524484441009_9323"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524484441119_9323"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"reservationRef": {
		"uri": "${TransferProperties#reservationRef}"
	}
}</con:request><con:originalUri>http://localhost/fulfillment/methods</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f4911e4e-8cde-4acb-9cd5-32c46e76441b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="eef435b3-daaf-4ffe-9489-ee43b6150fec" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="46d611a1-663b-42ae-bb1b-f7ac275764c4" name="JsonPath Count  Warnings"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3c9f471a-5103-4d9d-84d2-e53d8845487d" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_FOP_Data" id="b85cde51-f9fd-4f93-a6d7-aa0bd11ac36a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>formOfPayment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].uri[0]</con:sourcePath><con:targetType>formOfPayment</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cardType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentCard.type[?(@.id=='MC')].uri[0]</con:sourcePath><con:targetType>cardType</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>allocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation[0].paymentAllocationRef.uri</con:sourcePath><con:targetType>allocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>optionAllocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation.optionAllocationRef.uri[0]</con:sourcePath><con:targetType>optionAllocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>air_amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.amount</con:sourcePath><con:targetType>air_amount</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Currency</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.currency</con:sourcePath><con:targetType>Currency</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Orders" id="d3410851-607a-46ec-bd12-cddf1edf36f2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/fulfillment/orders" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Orders" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524484441009_9323"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524484441134"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524484441134"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="OS"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524484441009_9323"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524484441134_9323"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"application": {
"wrapCallback": false,
"callback": [
{
"type": "COMPLETE",
"url": "http://57.20.104.193:29443/PaymentHub/post"
}, {
"type": "FAILURE",
"url": "http://errorurl.com"
}, {
"type": "CANCEL",
"url": "http://cancelurl.com"
}
],
"browserInfo": {
"acceptHeader": "application/xml",
"userAgent": "Java/1.8.0_101"
}
},

	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"paymentDetails": {
		"id": 1,
		"uri": "/payment-details/1",
		"customerRef": {
			"uri": "${TransferProperties#reservationRef}/customers/1"
		},
		"paymentFormRef": {
			"uri": "${TransferProperties#formOfPayment}"
		},
		"paymentCard": {
			"number": "${TCProperties#Token number}",
			"expiryDate": "2018-12-31",
			"holderName": "Paul Ziert",
			"issuingCountry": "CA",
			"typeRef": {
				"uri": "${TransferProperties#cardType}"
			},
			"securityCode": 123,
			"billingAddressRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/addresses/1"
			},
			"phoneRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/phones/1"
			},
			"emailRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/emails/1"
			}
		}
	},
	"payment": {
		"allocationRef": {
			"uri": "${TransferProperties#allocationRef}"
		},
		"option": {
			"detailsRef": {
				"uri": "/payment-details/1"
			},
			"allocationRef": {
				"uri": "${TransferProperties#optionAllocationRef}"
			},
			"value": {
				"money": {
					"amount":"${TransferProperties#air_amount}",
					"currency": "${TransferProperties#Currency}"
				}
			}
		}
	}
}</con:request><con:originalUri>http://localhost/tdprest-2/api/fulfillment/orders</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="867da589-56f7-4d9e-9dd2-675187865f9a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fec7caae-1863-471e-bb22-396c480f9b54" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="b17fbd0a-19d1-4ed3-898a-9f44c5cd0a63" name="JsonPath Count  Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d5881854-0cad-42da-b102-0bc61b80f12b" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_PNR" id="d03b5ead-0d21-4431-bfd6-2eabd158f7c2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>pnr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation..bookingReference.value[1]</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UserSessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId_OS</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AirlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.item.air.itinerary.originDestination.flightSegment.operatingAirlineRef.id[0]</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="20955b14-9b8a-4714-a6fb-b03047aaaa9a"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524484441009_9323"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524484441150"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524484441150"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524484441009_9323"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524484441150_9323"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"passengers": {
		"passenger": [
			{
				"identification": {
					"passengerLastName": "${TCProperties#passenger1LastName}",
					"passengerFirstName": "${TCProperties#passenger1FirstName}",
					"bookingReference": "${TCProperties#PNR}",
					"flight": {
						"departureAirport": "${TCProperties#Outbound_Origin}",
						"airlineCode": "${TCProperties#AirlineCode}",
            "type": "OPERATING"
					}
				}
			}, {
				"identification": {
					"passengerLastName": "${TCProperties#passenger2LastName}",
					"passengerFirstName": "${TCProperties#passenger2FirstName}",
					"bookingReference": "${TCProperties#PNR}",
					"flight": {
						"departureAirport": "${TCProperties#Outbound_Origin}",
						"airlineCode": "${TCProperties#AirlineCode}",
            "type": "OPERATING"
					}
				}
			}
		]
	},
	"dcsOnly": "true"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus 1st Passenger"><con:configuration><path>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus 1st Passenger"><con:configuration><path>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus 1st Passenger"><con:configuration><path>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="94b7e7cc-5a64-4662-81db-0c33c0437645" name="VerifyFlightStatus 2nd Passenger"><con:configuration><path>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8a248b36-f0db-4e1f-ada4-7a3801e3de38" name="VerifyCheckinStatus 2nd Passenger"><con:configuration><path>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="af6d66fc-bb7f-4e9e-92c9-7c745573f46c" name="JsonPath Match"><con:configuration><path>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retreival" id="46cde0bb-ef21-4aec-aa2c-4c04ffce9757"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Update_Acceptance" id="8bdd1c7a-c835-4dc9-81ec-9760d2a1c308"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[2].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.bookingReference[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-SecondPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-ThirdPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger Id_Firstpassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger id_SecondPassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[1].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="191382c6-c33a-4b3f-906a-16f1b98ac1a2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false" timeout="600000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524484441009_9323"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524484441165"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524484441165"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524484441009_9323"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524484441165_9323"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger":    [
            {
         "identification": {"passengerId": "2301DA7B0000B925VIE"},
         "bound": {"flight": [         {
            "departureAirport": "VIE",
            "airlineCode": "OS",
            "departureDate": "2018-02-14",
            "arrivalAirport": "INN",
            "type": "OPERATING",
            "flightNumber": "915"
         }]}
      },
            {
         "identification": {"passengerId": "2301DA7B0000B926VIE"},
         "bound": {"flight": [         {
            "departureAirport": "VIE",
            "airlineCode": "OS",
            "departureDate": "2018-02-14",
            "arrivalAirport": "INN",
            "flightNumber": "915"
         }]}
      }
   ]},
   "action": "ACCEPTANCE"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus 1st Passenger"><con:configuration><path>.checkinRecord.passenger[0].checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="781434ec-9fd2-4882-a0b8-48f50a3f733a" name="VerifyCheckinStatus 2nd Passenger"><con:configuration><path>.checkinRecord.passenger[1].checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="e3d7847c-0b3d-4389-bd9b-b0669854226e"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Doc Option_First Passenger" id="71b03012-3485-4f90-b460-d3e6af018734"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Outbound_Date</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[2].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.bookingReference[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureAirport[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.departureDate[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-SecondPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-ThirdPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>Passenger Id_Firstpassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>Passenger id_SecondPassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].passengerId</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_Second passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options_First passenger" id="0cf2a798-18f9-40d5-bf35-da8ba0f827e1"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options_First passenger" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524484441009_9323"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524484441181"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524484441181"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524484441009_9323"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524484441181_9323"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#Outbound_Date}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "type": "OPERATING",
      "flightNumber": "${TCProperties#FlightNumber}"
   }]},
   "identification": [{"passengerId": "${TCProperties#passengerID}"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="VerifyDocumentOptions"><con:configuration><path>.documentOptions.bound.flight.documentOptions</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Document Option_First Passenger" id="4a830614-a514-4de1-b458-c5ac155480a7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Doc Option_Second Passenger" id="31352dfd-cff2-4e31-8c02-26337b09a1a2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.departureAirport[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.departureDate[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[2].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.bookingReference[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Outbound_Date</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-SecondPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-ThirdPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>FlightNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>Passenger Id_Firstpassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options_First passenger</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger id_SecondPassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].passengerId</con:sourcePath><con:targetType>passengerID1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options_Second passenger" id="b4b59ed3-69a0-475b-b9d1-f3885e6eb7e7"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options_Second passenger" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524484441009_9323"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524484441197"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524484441197"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId_OS}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524484441009_9323"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524484441197_9323"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": [{"passengerId": "${TCProperties#passengerID1}"}],
   "bound": {"flight": [   {
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "airlineCode": "${TCProperties#airlineCode}",
      "departureDate": "${TCProperties#Outbound_Date}",
      "type": "OPERATING",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#FlightNumber}"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="VerifyDocumentOptions"><con:configuration><path>.documentOptions.bound.flight.documentOptions</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value="INN"/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Document Option_Second Passenger" id="739360b2-46c2-4c31-bb42-4e3b95d25bee"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation" id="398e78cf-9cda-411d-a4f8-9bbb9042f649"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[2].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.originDestination.flightSegment.operatingAirline.bookingReference[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.passengers.passenger[0].bound.flight.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.operatingAirline.airlineCode[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.departureAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.departureDate[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.arrivalAirport[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-SecondPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-SecondPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-ThirdPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bookingRef-ThirdPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].checkInInfo.itinerary.bound.flightSegment.operatingAirline.flightNumber[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-SecondPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[1].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[1].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-ThirdPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[2].booking[0].segment[1].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passanger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[2].flights.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger Id_Firstpassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Passenger id_SecondPassenger</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[1].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger[1].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="5d3238ee-8a99-4adf-8907-51f089842d5f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524484441009_9323"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524484441212"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524484441212"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="123456"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524484441009_9323"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524484441212_9323"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger":    [
            {
         "identification": {"passengerId": "2301DA7B0000B925VIE"},
         "bound": [         {
            "flight": [            {
               "departureAirport": "VIE",
               "airlineCode": "OS",
               "departureDate": "2018-02-14",
               "arrivalAirport": "INN",
               "type": "OPERATING",
               "flightNumber": "915"
            }],
            "documentType": [{"type": "BOARDINGPASS"}]
         }]
      },
            {
         "identification": {"passengerId": "2301DA7B0000B926VIE"},
         "bound": [         {
            "flight": [            {
               "departureAirport": "VIE",
               "airlineCode": "OS",
               "departureDate": "2018-02-14",
               "arrivalAirport": "INN",
               "type": "OPERATING",
               "flightNumber": "915"
            }],
            "documentType": [{"type": "BOARDINGPASS"}]
         }]
      }
   ]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="VerifyCheckinStatus 1st Passenger"><con:configuration><path>.documentGeneration.document.passengerDocument[0].boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="VerifyCheckinStatus 2nd Passenger"><con:configuration><path>.documentGeneration.document.passengerDocument[1].boardingPass.barcodeData.segment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Document Generation" id="0b58308f-0772-458d-b065-cbfc96c58253"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>9165</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="27a483a8-bd36-4256-9023-0e34a27a5b62" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T007_Fulfill_MultiLeg_CheckIn_ LH" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="7d5fc544-9569-49d7-aea3-f7f7e54a0f9a" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="7206fe5c-9fef-403b-81a9-e871483dadd6"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="d084defe-b825-4b03-889d-feceb55fc7b6"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date1</con:name><con:value>2018-04-26</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>ADD</con:value></con:property><con:property><con:name>Outbound_Date2</con:name><con:value>2018-04-26</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value/></con:property><con:property><con:name>Number_of_Infants</con:name><con:value/></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>U3HV6B</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>FlightNumber1</con:name><con:value>598</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-10-04</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301CAC10000E5A5FRA</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LH</con:value></con:property><con:property><con:name>Outbound_Origin_MultiLeg</con:name><con:value>JED</con:value></con:property><con:property><con:name>Outbound_Destination_MultiLeg</con:name><con:value>ADD</con:value></con:property><con:property><con:name>FlightNumber_MultiLeg</con:name><con:value/></con:property><con:property><con:name>FlightNumber2</con:name><con:value>1218</con:value></con:property><con:property><con:name>airlineCode2</con:name><con:value>LH</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2018-04-26</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value>2018-05-03</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5ae012e52d888942853b34a2</con:value></con:property><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="2e8e6f9b-4b70-45e7-bcef-40d492070dfd"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524487649286_1224"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524487649286_1224"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524487649302_1224"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="58f0e3bd-2260-44d4-a60f-bdc3c616c185"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="3ce9c9c6-8237-42ce-8bca-c6f6dd2a1f3c"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false" timeout="90000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244561"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244561"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244559_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#airlineCode1}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b467039e-b232-49fe-a44a-a0ca0c72fc36" name="VerifyBookingStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="734635cd-192a-4dcb-9209-8a76dbc6bbd7" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="74f04757-e4a1-4d56-9e79-63aa0d5e0bd3" name="VerifyFlightStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retrieval" id="6ba1af89-c447-4d13-b1f1-21ae3f152638"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Acceptance" id="08e2078e-97a3-41a4-bcd6-091d1d2c97e8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="e129c98b-e085-4ac2-a475-67e2652721a6"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244603"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244602"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244601_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#passengerID}"},
      "bound": {"flight": [      {
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      }]}
   }]},
   "action": "ACCEPTANCE"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee4129d6-a982-455c-835f-a2be1713b19f" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="f7e1ab42-6ff1-4223-b517-6a0ee7c91b36" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="73cbd424-77a1-418a-a027-434b741d0ed4"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Options" id="56155bf3-4f58-4ef1-9dd5-9808d197b57c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="0c66e06d-c7ec-48bd-a49f-e64dbeeff23c"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244623"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244622"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244622_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"identification": [
		{
			"passengerId": "2301CAB300005D09ZRH"
		}
	],
	"bound": {
		"flight": [
			{
				"departureAirport": "ZRH",
				"airlineCode": "LX",
				"departureDate": "2018-04-18",
				"type": "OPERATING",
				"arrivalAirport": "GVA",
				"flightNumber": "2804"
			}, {
				"departureAirport": "ZRH",
				"airlineCode": "LX",
				"departureDate": "2018-04-18",
				"type": "OPERATING",
				"arrivalAirport": "GVA",
				"flightNumber": "2804"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Option" id="1987bb5c-5f23-4a0d-8d4f-81dabf2f4257"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_RAW DATA" id="520b5b25-040e-4a99-a556-c8fa970288e8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_RAW DATA" id="7cd6f3f2-1333-4455-ad4e-73604064caf2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244642"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244642"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244642_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "RAW_DATA",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass[0].barcodeData.segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="fa3b502c-f128-4726-8063-a1949b176f34" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_RAW DATA" id="af8fa4f0-7809-44a5-b31d-008928d17deb"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_PDF" id="2d988be8-fcdd-4534-8f11-74c0ee5bce83"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_PDF" id="3858afda-ff9e-4d9f-8d38-79ae79ad5142"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="900000000000000000000000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244652"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244652"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244652_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "HOME_PRINTED",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>.documentGeneration.document.documentData</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c01c4342-a498-4dde-8c2c-443e87d743fc" name="Verify PDF"><con:configuration><path>.documentGeneration.document.documentData</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="554d4ac5-4c88-4446-928f-6d80fc8d759a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_PDF" id="5095df5f-7c51-4680-8650-173691188225"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Email" id="aea5ebb6-8017-4a19-bc23-114d61895ef6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Email" id="db763527-b343-4a09-9c5b-8071eee25e24"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244672"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244672"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244672_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CAC000008912ZRH"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "ZRH",
               "airlineCode": "LX",
               "departureDate": "2018-04-25",
               "type": "OPERATING",
               "arrivalAirport": "FRA",
               "flightNumber": "1068",
               "type": "OPERATING"
            },
                        {
               "departureAirport": "FRA",
               "airlineCode": "LH",
               "departureDate": "2018-04-25",
               "type": "OPERATING",
               "arrivalAirport": "GVA",
               "flightNumber": "1218",
               "type": "OPERATING"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_EMAIL",
   "documentId": "docID12345",
   "contactMethod": {"email": "didhiti.kumar@in.ibm.com"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="da5f10f4-8fe3-402d-a757-e93ed3be3dbd" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="6976b4e1-9f80-46e8-afec-880f9694f82f" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Email" id="994bbba5-104a-4a08-9e2c-69fef5e14143"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Phone" id="38a7c20e-0c92-418d-bec0-7b15898f1468"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Phone" id="d543578e-f616-4e42-9875-b434d8406f7a"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="900000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244692"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244692"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244692_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CAC000008912ZRH"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "ZRH",
               "airlineCode": "LX",
               "departureDate": "2018-04-25",
               "type": "OPERATING",
               "arrivalAirport": "FRA",
               "flightNumber": "1068"
            },
                        {
               "departureAirport": "FRA",
               "airlineCode": "LH",
               "departureDate": "2018-04-25",
               "type": "OPERATING",
               "arrivalAirport": "GVA",
               "flightNumber": "1218"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_PHONE_NUMBER",
   "documentId": "docID12345",
   "contactMethod": {"cellphone": {"phoneNumber": "003434139201"}}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7779b468-f3f0-4c08-b661-67cf99cc5f21" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="cd982ee7-16b4-484e-a9e0-954ec2b89118" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="416ebad1-b908-4fa8-93e8-c55048078fa3" name="Not Contains"><con:configuration><token>warning
</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="e1b4b3f2-6430-41f6-bf10-e7040b118f1e" name="error"><con:configuration><token>error</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Phone" id="dfdca625-a08b-41b2-bab4-97c06f07fd47"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="202d8320-1cc7-4b2f-a633-ad80b9290cec" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="3a3803c1-b2a0-4e43-8a91-2997f6b7ce38" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244712"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244712"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244712_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-10-25",
         "arrivalAirport": "MUC",
         "flightNumber": "178"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-10-25",
         "arrivalAirport": "TXL",
         "flightNumber": "178"
      }
   ]},
   "bookingReference": "${TCProperties#PNR}"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="remove_Documnet Options" id="e85be549-8325-4fb8-a410-e9e356e87f4c" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="remove_Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244722"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244722"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244722_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request/><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>$.passengerDocumentOptions..documentOption.deliveryOption[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="2371"/>
  <con:entry key="passenger-id" value="2301DA4B0000B5F2ZRH"/>
  <con:entry key="departure-airport" value="ZRH"/>
  <con:entry key="departure-date" value="2017-12-29"/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="828b60bb-e113-4169-9138-041948bc3bed" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244732"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244732"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244732_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12897",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes": {"documentType": ["BOARDINGPASS"]},
         "flights": {"flight": [         {
            "airlineCode": "${TCProperties#airlineCode1}",
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "departureDate": "${TCProperties#DateTime}",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "${TCProperties#FlightNumber1}"
         }]}
      }],
      "identification": {"passengerId": "${TCProperties#passengerID}"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="f1cf0ad3-97ea-4fba-b719-a98cfa96d352" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T008_Fulfill_MultiLeg_CheckIn_ LX" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="1c730209-9d13-4e1b-9f7d-2fc5a1a6eb55" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="86103c25-5eac-4710-af0f-80d395c9c898"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="a77ccad0-c8d4-4dab-b9dc-b760cb266257"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date1</con:name><con:value>2018-04-25</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>DAR</con:value></con:property><con:property><con:name>Outbound_Date2</con:name><con:value>2018-04-25</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value/></con:property><con:property><con:name>Number_of_Infants</con:name><con:value/></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>TV7UXU</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>FlightNumber1</con:name><con:value>294</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-10-04</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301DAC000008F85ZRH</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LX</con:value></con:property><con:property><con:name>Outbound_Origin_MultiLeg</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination_MultiLeg</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>FlightNumber_MultiLeg</con:name><con:value/></con:property><con:property><con:name>FlightNumber2</con:name><con:value>1218</con:value></con:property><con:property><con:name>airlineCode2</con:name><con:value>LH</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2018-04-25</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value>2018-05-02</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5adefb602d888942853b349b</con:value></con:property><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="353449e4-43d0-4305-8dc2-83cc68da9bff"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524487649286_1224"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524487649286_1224"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524487649302_1224"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="d9108310-107d-461a-8dea-70e9e17938cf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="033b5a38-4518-4eb1-ab28-5523853080fc"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false" timeout="90000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244561"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244561"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244559_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#airlineCode1}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "false"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b467039e-b232-49fe-a44a-a0ca0c72fc36" name="VerifyBookingStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="734635cd-192a-4dcb-9209-8a76dbc6bbd7" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="74f04757-e4a1-4d56-9e79-63aa0d5e0bd3" name="VerifyFlightStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retrieval" id="731087a2-4424-4a79-8d9f-0823871f052c"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Acceptance" id="f397cbf2-35e6-484f-a974-23c0961a318b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="04db5c51-a280-4fe5-9151-40f81a1fcc96"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244603"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244602"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244601_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#passengerID}"},
      "bound": {"flight": [      {
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }]}
   }]},
   "action": "ACCEPTANCE"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee4129d6-a982-455c-835f-a2be1713b19f" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="f7e1ab42-6ff1-4223-b517-6a0ee7c91b36" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="39a4c32e-eae9-4295-8b6e-b5212bdc5055"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Options" id="8640c4cf-9c93-4582-b7f1-e3c9e28e7014"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="ba2f9db3-0f47-4929-bba0-a95460a7303d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244623"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244622"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244622_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"identification": [
		{
			"passengerId": "2301CAB300005D09ZRH"
		}
	],
	"bound": {
		"flight": [
			{
				"departureAirport": "ZRH",
				"airlineCode": "LX",
				"departureDate": "2018-04-18",
				"type": "OPERATING",
				"arrivalAirport": "GVA",
				"flightNumber": "2804"
			}, {
				"departureAirport": "ZRH",
				"airlineCode": "LX",
				"departureDate": "2018-04-18",
				"type": "OPERATING",
				"arrivalAirport": "GVA",
				"flightNumber": "2804"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Option" id="5f8d1047-ab2b-4fff-a8d5-3eb0a10a94f4"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_RAW DATA" id="96db4f00-8d19-4cb2-8777-a911601a2e1b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_RAW DATA" id="74024c20-0721-4059-b037-b5b8f3a16781"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244642"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244642"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244642_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "RAW_DATA",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass[0].barcodeData.segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="fa3b502c-f128-4726-8063-a1949b176f34" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_RAW DATA" id="0d151630-df30-4e81-9833-0a867a1d5967"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_PDF" id="2daf7f5b-bd96-4206-9f9b-0d2c25be8d34"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_PDF" id="6c415414-eb2d-48fc-916e-c04d034dccf2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="900000000000000000000000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244652"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244652"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244652_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "HOME_PRINTED",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>.documentGeneration.document.documentData</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c01c4342-a498-4dde-8c2c-443e87d743fc" name="Verify PDF"><con:configuration><path>.documentGeneration.document.documentData</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="554d4ac5-4c88-4446-928f-6d80fc8d759a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_PDF" id="8009f2e5-be44-4286-a4c3-10ce27180d40"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Email" id="767d806c-3c60-4637-b1cc-09159d880a45"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Email" id="5e1359b1-7bfc-44fa-bfba-31cfba93b538"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244672"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244672"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244672_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CAC000008912ZRH"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "ZRH",
               "airlineCode": "LX",
               "departureDate": "2018-04-25",
               "type": "OPERATING",
               "arrivalAirport": "FRA",
               "flightNumber": "1068",
               "type": "OPERATING"
            },
                        {
               "departureAirport": "FRA",
               "airlineCode": "LH",
               "departureDate": "2018-04-25",
               "type": "OPERATING",
               "arrivalAirport": "GVA",
               "flightNumber": "1218",
               "type": "OPERATING"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_EMAIL",
   "documentId": "docID12345",
   "contactMethod": {"email": "didhiti.kumar@in.ibm.com"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="da5f10f4-8fe3-402d-a757-e93ed3be3dbd" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="6976b4e1-9f80-46e8-afec-880f9694f82f" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Email" id="702fcf6d-d2fa-4a74-9ac5-58fd53b69809"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Phone" id="c1d83ee2-5306-4fad-bf07-e64335e9fe0b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Phone" id="6ae0cfa4-d358-4584-ba90-e3af37a733e7"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="900000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244692"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244692"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244692_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CAC000008912ZRH"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "ZRH",
               "airlineCode": "LX",
               "departureDate": "2018-04-25",
               "type": "OPERATING",
               "arrivalAirport": "FRA",
               "flightNumber": "1068"
            },
                        {
               "departureAirport": "FRA",
               "airlineCode": "LH",
               "departureDate": "2018-04-25",
               "type": "OPERATING",
               "arrivalAirport": "GVA",
               "flightNumber": "1218"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_PHONE_NUMBER",
   "documentId": "docID12345",
   "contactMethod": {"cellphone": {"phoneNumber": "003434139201"}}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7779b468-f3f0-4c08-b661-67cf99cc5f21" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="cd982ee7-16b4-484e-a9e0-954ec2b89118" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="416ebad1-b908-4fa8-93e8-c55048078fa3" name="Not Contains"><con:configuration><token>warning
</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="e1b4b3f2-6430-41f6-bf10-e7040b118f1e" name="error"><con:configuration><token>error</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Phone" id="421a3974-759f-4842-9a05-a2c87e14f203"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="c35dbca7-c4fb-4ee2-86a1-0efd1bbbc43c" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="cd23c9de-7a5a-4193-9155-3338ab1b3204" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244712"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244712"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244712_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-10-25",
         "arrivalAirport": "MUC",
         "flightNumber": "178"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-10-25",
         "arrivalAirport": "TXL",
         "flightNumber": "178"
      }
   ]},
   "bookingReference": "${TCProperties#PNR}"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="remove_Documnet Options" id="14a40028-4917-4eb6-a3fd-520298c7ae05" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="remove_Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244722"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244722"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244722_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request/><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>$.passengerDocumentOptions..documentOption.deliveryOption[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="2371"/>
  <con:entry key="passenger-id" value="2301DA4B0000B5F2ZRH"/>
  <con:entry key="departure-airport" value="ZRH"/>
  <con:entry key="departure-date" value="2017-12-29"/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="38cba1c2-e659-449b-8ae9-6e49c720e66d" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244732"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244732"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244732_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12897",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes": {"documentType": ["BOARDINGPASS"]},
         "flights": {"flight": [         {
            "airlineCode": "${TCProperties#airlineCode1}",
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "departureDate": "${TCProperties#DateTime}",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "${TCProperties#FlightNumber1}"
         }]}
      }],
      "identification": {"passengerId": "${TCProperties#passengerID}"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>8381</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="57f0ebc8-55f2-47d6-83f0-5c79b83fa19a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T009_Fulfill_MultiLeg_CheckIn_ OS" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="b499d494-d244-497a-b029-f66a7080a623"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="87693e06-e5eb-4d31-948c-fe31762f1e84"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="e0d14a67-8c47-4c8b-a0ac-3c8e5ae38c1a"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date1</con:name><con:value>2018-02-15</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>VIE</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Outbound_Date2</con:name><con:value>2018-02-15</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value/></con:property><con:property><con:name>Number_of_Infants</con:name><con:value/></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>VYX5LL</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>FlightNumber1</con:name><con:value>2367</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-10-04</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301CA7C0000830AZRH</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>OS</con:value></con:property><con:property><con:name>Outbound_Origin_MultiLeg</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Outbound_Destination_MultiLeg</con:name><con:value>VIE</con:value></con:property><con:property><con:name>FlightNumber_MultiLeg</con:name><con:value/></con:property><con:property><con:name>FlightNumber2</con:name><con:value>118</con:value></con:property><con:property><con:name>airlineCode2</con:name><con:value>OS</con:value></con:property><con:property><con:name>POS</con:name><con:value>OS</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b054bee2d88895550ca8409</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="690b2f63-fb58-4913-9ecd-7605dfe6a71d"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524487649286_1224"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524487649286_1224"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524487649302_1224"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="067645c6-d23e-4dee-b331-06a3b07a0a10"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="0f8c12be-322b-4b8a-8a8a-a75e0238785d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518605735916_3321"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518605735916"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518605735916"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518605735916_3321"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518605735916_3321"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#airlineCode1}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b467039e-b232-49fe-a44a-a0ca0c72fc36" name="VerifyBookingStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="734635cd-192a-4dcb-9209-8a76dbc6bbd7" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="74f04757-e4a1-4d56-9e79-63aa0d5e0bd3" name="VerifyFlightStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retrieval" id="66cf5dca-2849-48a9-8f59-09d7538b69e1"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Acceptance" id="d1f6087e-9d0a-4fc7-8871-735ff5edebb7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="c9e3919e-8fe6-400b-949e-bec168b63b50"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518605735916_3321"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518605735947"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518605735947"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518605735916_3321"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518605735947_3321"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#passengerID}"},
      "bound": {"flight": [      {
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "type": "OPERATING",
         "flightNumber": "${TCProperties#FlightNumber1}"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "type": "OPERATING",
         "flightNumber": "${TCProperties#FlightNumber2}"
      }]}
   }]},
   "action": "ACCEPTANCE"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee4129d6-a982-455c-835f-a2be1713b19f" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="f7e1ab42-6ff1-4223-b517-6a0ee7c91b36" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="ca28458c-0c1b-4682-a5d9-1eb14046bff0"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Options" id="ba8881df-a24b-441a-9de0-63aa884ac6ac"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>Documnet Options</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="f508344f-9989-4f37-8e98-ec93577ce8e8"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518605735916_3321"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518605735963"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518605735963"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518605735916_3321"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518605735963_3321"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>2301DA4B00009B25FRA</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Option" id="47f7c0db-5e47-46f7-bd20-d36b99d4e7d7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_RAW DATA" id="d928b1a3-dd21-4674-b358-ce40fad18c64"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_RAW DATA" id="35d803a1-d6b0-4d02-b442-ceec233e3fd6"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518605735916_3321"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518605735978"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518605735978"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518605735916_3321"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518605735978_3321"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "type": "OPERATING",
         "flightNumber": "${TCProperties#FlightNumber1}"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "type": "OPERATING",
         "flightNumber": "${TCProperties#FlightNumber2}"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "RAW_DATA",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass[0].barcodeData.segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="fa3b502c-f128-4726-8063-a1949b176f34" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_RAW DATA" id="6c4cc5f8-fa8f-47a5-ac45-bda1e5e4d641"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_PDF" id="cb7b67ee-d8e9-46cb-8f3d-8fe219248d20"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_PDF" id="2eb52698-4ae2-4049-8427-e932d02cac30"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518605735916_3321"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518605735994"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518605735994"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518605735916_3321"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518605735994_3321"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "type": "OPERATING",
         "flightNumber": "${TCProperties#FlightNumber1}"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "type": "OPERATING",
         "flightNumber": "${TCProperties#FlightNumber2}"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "HOME_PRINTED",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>.documentGeneration.document.documentData</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c01c4342-a498-4dde-8c2c-443e87d743fc" name="Verify PDF"><con:configuration><path>.documentGeneration.document.documentData</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="554d4ac5-4c88-4446-928f-6d80fc8d759a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_PDF" id="b41e3971-78b4-4faa-bf36-1035c50a0664"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Email" id="f82fbd07-4724-4559-9807-5cdada0123aa"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Email" id="d429f8e8-55c6-4b45-bf32-7bcbc56aadfa"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518605735916_3321"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518605736010"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518605736010"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518605735916_3321"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518605736010_3321"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CA7C0000830AZRH"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "ZRH",
               "airlineCode": "LH",
               "departureDate": "2018-02-15",
               "type": "OPERATING",
               "arrivalAirport": "MUC",
               "flightNumber": "2367"
            },
                        {
               "departureAirport": "MUC",
               "airlineCode": "OS",
               "departureDate": "2018-02-15",
               "type": "OPERATING",
               "arrivalAirport": "VIE",
               "flightNumber": "118"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_EMAIL",
   "documentId": "docID12345",
   "contactMethod": {"email": "didhiti.kumar@in.ibm.com"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Email" id="1f78c1f6-2d51-4567-994c-71c59cc71b06"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Phone" id="e67109d6-a978-445a-82de-d08d469f7f8a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Phone" id="2c4787f1-26ae-458b-8991-7a792fa2ae11"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518605735916_3321"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518605736025"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518605736025"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518605735916_3321"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518605736025_3321"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "2301DA7B0000463EFRA"
							},
							"bound": [
								{
									"flight": [
										{
											"departureAirport": "FRA",
											"airlineCode": "LH",
											"departureDate": "2018-02-14",
											"type": "OPERATING",
											"arrivalAirport": "HAM",
											"flightNumber": "7307"
										}, {
											"departureAirport": "FRA",
											"airlineCode": "LH",
											"departureDate": "2018-02-14",
											"type": "OPERATING",
											"arrivalAirport": "HAM",
											"flightNumber": "7307"
										}
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "MOBILE_VIA_PHONE_NUMBER",
				"documentId": "docID12345",
				"contactMethod": {
					"cellphone": {
						"phoneNumber": "0039434139201"
					}
				}
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Phone" id="fc6beeac-2723-4a96-b506-62859c63c4fa"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="7ff6e218-4450-48f4-ba9b-46ce11de89f4" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="7f887dc0-49f8-4c96-a26b-f3490f025316" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518605735916_3321"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518605736041"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518605736041"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518605735916_3321"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518605736041_3321"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-10-25",
         "arrivalAirport": "MUC",
         "flightNumber": "178"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-10-25",
         "arrivalAirport": "TXL",
         "flightNumber": "178"
      }
   ]},
   "bookingReference": "${TCProperties#PNR}"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="remove_Documnet Options" id="da686eed-b626-438d-91c9-072e358603ce" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="remove_Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518605735916_3321"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518605736056"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518605736056"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518605735916_3321"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518605736056_3321"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request/><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>$.passengerDocumentOptions..documentOption.deliveryOption[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="2371"/>
  <con:entry key="passenger-id" value="2301DA4B0000B5F2ZRH"/>
  <con:entry key="departure-airport" value="ZRH"/>
  <con:entry key="departure-date" value="2017-12-29"/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="8cca6300-20c6-4d6e-9b60-69c4c7ea5257" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518605735916_3321"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518605736072"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518605736072"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518605735916_3321"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518605736072_3321"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12897",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes": {"documentType": ["BOARDINGPASS"]},
         "flights": {"flight": [         {
            "airlineCode": "${TCProperties#airlineCode1}",
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "departureDate": "${TCProperties#DateTime}",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "${TCProperties#FlightNumber1}"
         }]}
      }],
      "identification": {"passengerId": "${TCProperties#passengerID}"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="83f4e258-7b35-49d2-8293-b23ef050daa8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T011_Fulfill_MultiSegment_CheckIn_ LX" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="e0b185ce-7996-4a9a-9d45-51f63a8161a8" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="6be1bd95-58b0-4deb-9b26-062926d0239b" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="419f08d8-ccc6-4bda-9bb3-121b22dd0c2d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date1</con:name><con:value>2018-06-12</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>GVA</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>Outbound_Date2</con:name><con:value>2018-06-12</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value/></con:property><con:property><con:name>Number_of_Infants</con:name><con:value/></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>NJQFWD</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>FlightNumber1</con:name><con:value>2805</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-25-04</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301DAEE0000599A</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LX</con:value></con:property><con:property><con:name>Outbound_Origin_MultiLeg</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>Outbound_Destination_MultiLeg</con:name><con:value>FRA</con:value></con:property><con:property><con:name>FlightNumber_MultiLeg</con:name><con:value/></con:property><con:property><con:name>FlightNumber2</con:name><con:value>1074</con:value></con:property><con:property><con:name>airlineCode2</con:name><con:value>LX</con:value></con:property><con:property><con:name>POS</con:name><con:value>LX</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b1e62792d88891618e8f460</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="dc79d747-1af8-4e96-90dc-dc4e05461fef"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524487649286_1224"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524487649286_1224"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524487649302_1224"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="0c42a15b-f865-4805-8e00-f551bb19db3d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="5eecba47-f598-4b8c-9de7-3f16e13d1a0d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954767"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954767"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954767_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#airlineCode1}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b467039e-b232-49fe-a44a-a0ca0c72fc36" name="VerifyBookingStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="734635cd-192a-4dcb-9209-8a76dbc6bbd7" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="74f04757-e4a1-4d56-9e79-63aa0d5e0bd3" name="VerifyFlightStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retrieval" id="b994827b-837c-4533-8a60-35080b500b83"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Acceptance" id="0e3aa7b8-e7a7-4ea0-bc71-9a9979df0492"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="d588abfb-b076-4d54-807c-10d9faf5d808"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954799"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954799"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954799_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request> {
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#passengerID}"}}],
	  
      "bound": [{
	  "flight": [      {
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }],
	  "sequence": "0" 
 }]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee4129d6-a982-455c-835f-a2be1713b19f" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="f7e1ab42-6ff1-4223-b517-6a0ee7c91b36" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="f4cec04c-ea0d-4448-a9eb-f4737ca981fb"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Option" id="82b45b14-f66d-40ef-ab16-de4e6b979778"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="0c432628-50a9-4f5c-88b1-3da03ee0ccd1"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954814"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954814"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954814_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"identification": [
		{
			"passengerId": "${TCProperties#passengerID}"
		}
	],
	"bound": {
		"flight": [
			{
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"airlineCode": "${TCProperties#airlineCode1}",
				"departureDate": "${TCProperties#Outbound_Date1}",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#FlightNumber1}",
				"type": "OPERATING"
			}, {
				"departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
				"airlineCode": "${TCProperties#airlineCode2}",
				"departureDate": "${TCProperties#Outbound_Date2}",
				"arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
				"flightNumber": "${TCProperties#FlightNumber2}",
				"type": "OPERATING"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Option" id="155c8ece-338a-4e71-96a9-cd0ff0f63a2f"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_RAW DATA" id="40ce2f0b-bbfe-413f-8673-ea4aedb55d4b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_RAW DATA" id="5091d1be-4061-47d2-bba8-86a93cdd057e"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954830"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954830"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954830_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
          "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
          "type": "OPERATING"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "RAW_DATA",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass[0].barcodeData.segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="fa3b502c-f128-4726-8063-a1949b176f34" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_RAW DATA" id="4457841e-3f48-4043-9ecb-d643b5ca5f95"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_PDF" id="d6028685-28ad-4547-a1a4-efcd9bf1c0e6"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_PDF" id="a0f7fe4a-8427-4605-b976-219d6ac897e3"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954845"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954845"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954845_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "HOME_PRINTED",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>.documentGeneration.document.documentData</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c01c4342-a498-4dde-8c2c-443e87d743fc" name="Verify PDF"><con:configuration><path>.documentGeneration.document.documentData</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="554d4ac5-4c88-4446-928f-6d80fc8d759a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_PDF" id="e90e920d-110e-4012-a672-5cda256650a7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Email" id="843637d6-0ba1-454d-9379-6aeb936921c1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Email" id="980e945f-3235-40d0-ae20-86f871d6e29d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="900000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954861"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954861"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954861_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAEE0000599A"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "GVA",
               "airlineCode": "LX",
               "departureDate": "2018-06-12",
               "type": "OPERATING",
               "arrivalAirport": "ZRH",
               "flightNumber": "2805"
            },
                        {
               "departureAirport": "ZRH",
               "airlineCode": "LX",
               "departureDate": "2018-06-12",
               "type": "OPERATING",
               "arrivalAirport": "FRA",
               "flightNumber": "1074"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_EMAIL",
   "documentId": "docID12345",
   "contactMethod": {"email": "didhiti.kumar@in.ibm.com"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="21f03f64-0997-4165-8f94-882aa729d5e6" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="82860fcc-9c4b-4a47-8f2b-da6903c9b32c" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="c28d75ef-ab6c-4c43-b950-27f29c0c0284" name="Not Contains"><con:configuration><token>warning</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="a8f4a1f4-12be-45fb-85b0-8cb4b6b8b3b0" name="Error"><con:configuration><token>error</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Email" id="f283cc4c-b44e-4ade-b98b-e7eecc2937c4"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Phone" id="332bdd99-a1c2-4f78-84c8-85b67693bdda"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Phone" id="4f3d925f-dae4-49c2-b6d8-0329d6387867"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954877"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954877"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954877_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301DAEE0000599A"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "GVA",
               "airlineCode": "LX",
               "departureDate": "2018-06-12",
               "type": "OPERATING",
               "arrivalAirport": "ZRH",
               "flightNumber": "2805"
            },
                        {
               "departureAirport": "ZRH",
               "airlineCode": "LX",
               "departureDate": "2018-06-12",
               "type": "OPERATING",
               "arrivalAirport": "FRA",
               "flightNumber": "1074"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_PHONE_NUMBER",
   "documentId": "docID12345",
   "contactMethod": {"cellphone": {"phoneNumber": "0039434139201"}}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a33bfff5-25c8-4739-afa4-53ab653cdf64" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="0aa4a64a-7783-485f-9727-0118ffab736f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Phone" id="0b26e24d-21a0-4d6b-841b-335ef56b0aec"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="e0367a1b-8ad0-473f-bcd1-4c01daaa60ed" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="711ac0c1-c831-4a4d-b87c-a6ac03650905" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954892"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954892"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954892_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-10-25",
         "arrivalAirport": "MUC",
         "flightNumber": "178"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-10-25",
         "arrivalAirport": "TXL",
         "flightNumber": "178"
      }
   ]},
   "bookingReference": "${TCProperties#PNR}"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="remove_Documnet Options" id="4651c470-4bbd-4c59-b7ba-7c4b8335ca04" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="remove_Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954908"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954908"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954908_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request/><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>$.passengerDocumentOptions..documentOption.deliveryOption[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="2371"/>
  <con:entry key="passenger-id" value="2301DA4B0000B5F2ZRH"/>
  <con:entry key="departure-airport" value="ZRH"/>
  <con:entry key="departure-date" value="2017-12-29"/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="9f0d704b-4792-4ae1-bd03-44a222adefd2" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954923"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954923"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954923_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12897",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes": {"documentType": ["BOARDINGPASS"]},
         "flights": {"flight": [         {
            "airlineCode": "${TCProperties#airlineCode1}",
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "departureDate": "${TCProperties#DateTime}",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "${TCProperties#FlightNumber1}"
         }]}
      }],
      "identification": {"passengerId": "${TCProperties#passengerID}"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>9163</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="b19df333-7035-4b84-bda2-37a57142359a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T010_Fulfill_MultiSegment_CheckIn_ LH" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="bc683acf-720d-494c-8e12-1bb9ff453e5e" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="9527df36-71c7-4ceb-8269-a7e72402ed59" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="5530fd7d-eef6-470b-8f53-6be9b2083976"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date1</con:name><con:value>2018-05-30</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Date2</con:name><con:value>2018-05-30</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value/></con:property><con:property><con:name>Number_of_Infants</con:name><con:value/></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>KZQLDL</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>FlightNumber1</con:name><con:value>7032</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-30-05</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301CADF00007D25</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LH</con:value></con:property><con:property><con:name>Outbound_Origin_MultiLeg</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination_MultiLeg</con:name><con:value>HAM</con:value></con:property><con:property><con:name>FlightNumber_MultiLeg</con:name><con:value/></con:property><con:property><con:name>FlightNumber2</con:name><con:value>30</con:value></con:property><con:property><con:name>airlineCode2</con:name><con:value>LH</con:value></con:property><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b0cfc3086c56b7fcf4fc60d</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="68620487-24f2-4ac2-a3bb-7bb9d2cdb9b5"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524487649286_1224"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524487649286_1224"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524487649302_1224"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="803eac0f-f423-418a-bb42-869fe76c2edf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="9b678c22-754b-4e78-9512-b2e1be678c2b"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954767"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954767"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954767_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#airlineCode1}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b467039e-b232-49fe-a44a-a0ca0c72fc36" name="VerifyBookingStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="734635cd-192a-4dcb-9209-8a76dbc6bbd7" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="74f04757-e4a1-4d56-9e79-63aa0d5e0bd3" name="VerifyFlightStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retrieval" id="f699d8d0-4565-4bb7-8bf0-eb9286144e41"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Acceptance" id="a93b7fbf-9d42-41da-b7da-0dd6b83d3231"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="e451bd09-9131-4b5d-91ec-dad50c6e9660"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954799"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954799"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954799_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#passengerID}"},
      "bound": {"flight": [      {
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }]}
   }]},
   "action": "ACCEPTANCE"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee4129d6-a982-455c-835f-a2be1713b19f" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="f7e1ab42-6ff1-4223-b517-6a0ee7c91b36" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="fd4b7d59-b029-4ef9-880e-4033310544b6"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Option" id="11bb04b6-a871-46a4-ba67-964c4e157210"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="7d1a094b-7ed0-49ac-a1ea-40d6b3f689e0"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954814"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954814"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954814_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"identification": [
		{
			"passengerId": "${TCProperties#passengerID}"
		}
	],
	"bound": {
		"flight": [
			{
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"airlineCode": "${TCProperties#airlineCode1}",
				"departureDate": "${TCProperties#Outbound_Date1}",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#FlightNumber1}",
				"type": "OPERATING"
			}, {
				"departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
				"airlineCode": "${TCProperties#airlineCode2}",
				"departureDate": "${TCProperties#Outbound_Date2}",
				"arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
				"flightNumber": "${TCProperties#FlightNumber2}",
				"type": "OPERATING"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Option" id="da3f0a75-fe91-45b8-ae63-8e85d4ebf0db"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_RAW DATA" id="9cffc283-b118-41c6-b88b-e64f7d744d2e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_RAW DATA" id="e3cfc95f-3d2f-4a0c-bafb-70f448cd793f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954830"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954830"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954830_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
          "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
          "type": "OPERATING"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "RAW_DATA",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass[0].barcodeData.segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="fa3b502c-f128-4726-8063-a1949b176f34" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_RAW DATA" id="64cedfaa-f02b-44bd-aaf1-53f6c0c59579"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_PDF" id="8daaed33-f96d-4db0-a19d-7dfd37ec0671"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_PDF" id="54a1cb93-846c-4ad8-aa0c-4a951c8bf5e3"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954845"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954845"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954845_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "HOME_PRINTED",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>.documentGeneration.document.documentData</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c01c4342-a498-4dde-8c2c-443e87d743fc" name="Verify PDF"><con:configuration><path>.documentGeneration.document.documentData</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="554d4ac5-4c88-4446-928f-6d80fc8d759a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_PDF" id="706e1944-c97f-439f-b8e7-7d9badd0d343"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Email" id="4f97d2a7-5c7a-4510-8865-e953ca79fe0c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Email" id="a4d4f041-7b63-4b2e-81c0-d2496d4247d4"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="900000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954861"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954861"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954861_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CAC00000957CGVA"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "GVA",
               "airlineCode": "LX",
               "departureDate": "2018-04-25",
               "arrivalAirport": "ZRH",
               "flightNumber": "2801",
               "type": "OPERATING"
            },
                        {
               "departureAirport": "ZRH",
               "airlineCode": "LX",
               "departureDate": "2018-04-25",
               "arrivalAirport": "FRA",
               "flightNumber": "1074",
               "type": "OPERATING"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_EMAIL",
   "documentId": "docID12345",
   "contactMethod": {"email": "didhiti.kumar@in.ibm.com"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="21f03f64-0997-4165-8f94-882aa729d5e6" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="82860fcc-9c4b-4a47-8f2b-da6903c9b32c" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="c28d75ef-ab6c-4c43-b950-27f29c0c0284" name="Not Contains"><con:configuration><token>warning</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="a8f4a1f4-12be-45fb-85b0-8cb4b6b8b3b0" name="Error"><con:configuration><token>error</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Email" id="85745cfd-734e-46f7-8a5a-288bf41f3652"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Phone" id="df823250-d27e-4cca-b78b-017d5d9d5a1d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Phone" id="31e7a00a-1e34-4357-80f4-df69527c4ed9"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954877"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954877"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954877_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CAC00000957CGVA"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "GVA",
               "airlineCode": "LX",
               "departureDate": "2018-04-25",
               "arrivalAirport": "ZRH",
               "flightNumber": "2801",
               "type": "OPERATING"
            },
                        {
               "departureAirport": "ZRH",
               "airlineCode": "LX",
               "departureDate": "2018-04-25",
               "arrivalAirport": "FRA",
               "flightNumber": "1074",
               "type": "OPERATING"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_PHONE_NUMBER",
   "documentId": "docID12345",
   "contactMethod": {"cellphone": {"phoneNumber": "0039434139201"}}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a33bfff5-25c8-4739-afa4-53ab653cdf64" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="0aa4a64a-7783-485f-9727-0118ffab736f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Phone" id="75f59aac-f69d-4cbc-b5f8-59a6a45ab4ef"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="3326a601-5f4c-4644-984e-b96c89fa5864" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="6cd75652-f9f9-43a5-bb54-511fe1ae318c" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954892"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954892"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954892_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-10-25",
         "arrivalAirport": "MUC",
         "flightNumber": "178"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-10-25",
         "arrivalAirport": "TXL",
         "flightNumber": "178"
      }
   ]},
   "bookingReference": "${TCProperties#PNR}"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="remove_Documnet Options" id="f6c95689-42ee-45e4-970f-cb229ec35e77" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="remove_Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954908"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954908"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954908_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request/><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>$.passengerDocumentOptions..documentOption.deliveryOption[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="2371"/>
  <con:entry key="passenger-id" value="2301DA4B0000B5F2ZRH"/>
  <con:entry key="departure-airport" value="ZRH"/>
  <con:entry key="departure-date" value="2017-12-29"/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="93447a99-3938-472f-9025-4b192f40c559" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954923"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954923"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954923_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12897",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes": {"documentType": ["BOARDINGPASS"]},
         "flights": {"flight": [         {
            "airlineCode": "${TCProperties#airlineCode1}",
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "departureDate": "${TCProperties#DateTime}",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "${TCProperties#FlightNumber1}"
         }]}
      }],
      "identification": {"passengerId": "${TCProperties#passengerID}"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>8380</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="b873a60d-89c7-4592-b08d-96834e7220f0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T012_Fulfill_MultiSegment_CheckIn_OS" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="0de6085d-8a57-4b1b-92d2-114afddc6e82" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="49e31450-8fd3-4ff5-93a1-62b8148a5efd" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="1c4447e9-2b96-4385-b974-f9443146f525"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date1</con:name><con:value>2018-06-12</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>VIE</con:value></con:property><con:property><con:name>Outbound_Date2</con:name><con:value>2018-06-12</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value/></con:property><con:property><con:name>Number_of_Infants</con:name><con:value/></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>NJNKQ2</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>FlightNumber1</con:name><con:value>128</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-25-04</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301DAEE0000573F</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>OS</con:value></con:property><con:property><con:name>Outbound_Origin_MultiLeg</con:name><con:value>VIE</con:value></con:property><con:property><con:name>Outbound_Destination_MultiLeg</con:name><con:value>SZG</con:value></con:property><con:property><con:name>FlightNumber_MultiLeg</con:name><con:value/></con:property><con:property><con:name>FlightNumber2</con:name><con:value>917</con:value></con:property><con:property><con:name>airlineCode2</con:name><con:value>OS</con:value></con:property><con:property><con:name>POS</con:name><con:value>OS</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b1e60452d88891618e8f45b</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="303ce63c-5869-4b8f-b1ca-cb71f711b3af"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524487649286_1224"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524487649286_1224"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524487649302_1224"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="aac37c20-770e-49f8-934c-1bf0cf6d2727"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="bc4c1113-fc55-4360-81f6-7ae5874ea202"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954767"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954767"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS_A-FRA_MKI-K_DE"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954767_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#airlineCode1}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b467039e-b232-49fe-a44a-a0ca0c72fc36" name="VerifyBookingStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="734635cd-192a-4dcb-9209-8a76dbc6bbd7" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="74f04757-e4a1-4d56-9e79-63aa0d5e0bd3" name="VerifyFlightStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retrieval" id="63444771-1a05-4acb-a00f-bf01f1737d64"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Acceptance" id="2a1570f5-7817-406c-8d8d-757042d7ce9b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="f72de40b-9df8-4461-ad42-924347a70fa9"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954799"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954799"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS_A-FRA_MKI-K_DE"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954799_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request> {
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#passengerID}"}}],
	  
      "bound": [{
	  "flight": [      {
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }],
	  "sequence": "0" 
 }]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee4129d6-a982-455c-835f-a2be1713b19f" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="f7e1ab42-6ff1-4223-b517-6a0ee7c91b36" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="1e87af9c-f1ba-474e-bd06-0e25697ed2ab"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Option" id="3f9ce5f8-aedb-447d-af3d-5397fd69100a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="4af1e09a-8d6f-4a7c-9817-e2cb9fb1a5c2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954814"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954814"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS_A-FRA_MKI-K_DE"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954814_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"identification": [
		{
			"passengerId": "${TCProperties#passengerID}"
		}
	],
	"bound": {
		"flight": [
			{
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"airlineCode": "${TCProperties#airlineCode1}",
				"departureDate": "${TCProperties#Outbound_Date1}",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#FlightNumber1}",
				"type": "OPERATING"
			}, {
				"departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
				"airlineCode": "${TCProperties#airlineCode2}",
				"departureDate": "${TCProperties#Outbound_Date2}",
				"arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
				"flightNumber": "${TCProperties#FlightNumber2}",
				"type": "OPERATING"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="128"/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Option" id="c976af11-6330-44e1-8579-653c4276fe58"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_RAW DATA" id="4a2c212b-1b5d-45df-aaa7-e5d26731160c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_RAW DATA" id="f71974b6-623a-4551-968b-dd4e15ff1883"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954830"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954830"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS_A-FRA_MKI-K_DE"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954830_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
          "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
          "type": "OPERATING"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "RAW_DATA",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass[0].barcodeData.segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="fa3b502c-f128-4726-8063-a1949b176f34" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_RAW DATA" id="afa427dd-0bfe-4bd6-98ae-322426b12bf5"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_PDF" id="cd80a1b0-e41e-4a29-932e-5f55bd90bdbb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_PDF" id="6509c243-7b17-4759-857e-5e4d241c9b65"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954845"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954845"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954845_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "HOME_PRINTED",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>.documentGeneration.document.documentData</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c01c4342-a498-4dde-8c2c-443e87d743fc" name="Verify PDF"><con:configuration><path>.documentGeneration.document.documentData</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="554d4ac5-4c88-4446-928f-6d80fc8d759a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_PDF" id="97404391-6353-4135-a1ab-a6e36eb88ade"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Email" id="e1db3eea-8fa2-440f-aaf7-5e5ee1f3cb49"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Email" id="e32b32c8-117c-4be1-b50f-39c02d7d107a"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="900000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954861"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954861"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954861_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CADF00007AA4"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "FRA",
               "airlineCode": "OS",
               "departureDate": "2018-05-29",
               "type": "OPERATING",
               "arrivalAirport": "VIE",
               "flightNumber": "128"
            },
                        {
               "departureAirport": "VIE",
               "airlineCode": "OS",
               "departureDate": "2018-05-29",
               "type": "OPERATING",
               "arrivalAirport": "SZG",
               "flightNumber": "917"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_EMAIL",
   "documentId": "docID12345",
   "contactMethod": {"email": "didhiti.kumar@in.ibm.com"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="21f03f64-0997-4165-8f94-882aa729d5e6" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="82860fcc-9c4b-4a47-8f2b-da6903c9b32c" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="c28d75ef-ab6c-4c43-b950-27f29c0c0284" name="Not Contains"><con:configuration><token>warning</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="a8f4a1f4-12be-45fb-85b0-8cb4b6b8b3b0" name="Error"><con:configuration><token>error</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Email" id="45f7c26e-b551-401a-9205-3f3c8387e79c"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Phone" id="06deddaa-a326-4d5e-868f-5d08b6e49334"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Phone" id="fc000639-930f-4993-ac7a-13a1e4e48aa3"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954877"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954877"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954877_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CADF00007AA4"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "FRA",
               "airlineCode": "OS",
               "departureDate": "2018-05-29",
               "type": "OPERATING",
               "arrivalAirport": "VIE",
               "flightNumber": "128"
            },
                        {
               "departureAirport": "VIE",
               "airlineCode": "OS",
               "departureDate": "2018-05-29",
               "type": "OPERATING",
               "arrivalAirport": "SZG",
               "flightNumber": "917"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_PHONE_NUMBER",
   "documentId": "docID12345",
   "contactMethod": {"cellphone": {"phoneNumber": "0039434139201"}}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a33bfff5-25c8-4739-afa4-53ab653cdf64" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="0aa4a64a-7783-485f-9727-0118ffab736f" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Phone" id="9529ce88-a543-44c0-a771-b3013363e1df"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="20dfb0d0-61b8-4593-a040-d040c8bda07d" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="4d6adffc-0214-4527-8d09-c3f17388d4ff" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954892"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954892"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954892_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-10-25",
         "arrivalAirport": "MUC",
         "flightNumber": "178"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-10-25",
         "arrivalAirport": "TXL",
         "flightNumber": "178"
      }
   ]},
   "bookingReference": "${TCProperties#PNR}"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="remove_Documnet Options" id="30516752-9789-4a2c-99e8-13f18d25da83" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="remove_Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954908"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954908"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954908_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request/><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>$.passengerDocumentOptions..documentOption.deliveryOption[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="2371"/>
  <con:entry key="passenger-id" value="2301DA4B0000B5F2ZRH"/>
  <con:entry key="departure-airport" value="ZRH"/>
  <con:entry key="departure-date" value="2017-12-29"/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="f35cfee9-c477-4685-940a-d17eac74b513" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522141954721_1188"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522141954923"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522141954923"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522141954721_1188"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522141954923_1188"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12897",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes": {"documentType": ["BOARDINGPASS"]},
         "flights": {"flight": [         {
            "airlineCode": "${TCProperties#airlineCode1}",
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "departureDate": "${TCProperties#DateTime}",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "${TCProperties#FlightNumber1}"
         }]}
      }],
      "identification": {"passengerId": "${TCProperties#passengerID}"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>14759</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="05756741-e921-474d-bb03-08be7ac26b57" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T013_Fulfill_CodeShare_CheckIn_LH" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="fd05deed-4adb-4f19-a087-247803c5e700" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="a79e8fdc-eef3-4b51-a606-2578d614cf41"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="28dc3306-c10e-4163-a2c8-5f22ddc3d70e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date1</con:name><con:value>2018-04-25</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>Outbound_Date2</con:name><con:value>2018-04-25</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value/></con:property><con:property><con:name>Number_of_Infants</con:name><con:value/></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>TUY7OU</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>FlightNumber1</con:name><con:value>1068</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-10-04</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301CAC000008912ZRH</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LX</con:value></con:property><con:property><con:name>Outbound_Origin_MultiLeg</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination_MultiLeg</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>FlightNumber_MultiLeg</con:name><con:value/></con:property><con:property><con:name>FlightNumber2</con:name><con:value>1218</con:value></con:property><con:property><con:name>airlineCode2</con:name><con:value>LH</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2018-03-14</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value>2018-03-21</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5adef0bb2d888942853b349a</con:value></con:property><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="8aa75037-453a-4ef6-9138-eebdb5f6403a"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524487649286_1224"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524487649286_1224"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524487649302_1224"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="4a97ba67-b2ab-41c5-8204-a252bb51fe9a"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="21cf7ba5-6a44-4784-9371-94547668c5a4"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244561"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244561"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244559_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#airlineCode1}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b467039e-b232-49fe-a44a-a0ca0c72fc36" name="VerifyBookingStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="734635cd-192a-4dcb-9209-8a76dbc6bbd7" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="74f04757-e4a1-4d56-9e79-63aa0d5e0bd3" name="VerifyFlightStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retrieval" id="53bf7b2c-41e1-46cd-a97f-215b2bf58ec3"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Acceptance" id="95991063-5e1c-48b9-a042-8bfd1fa8bcd1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="29962b50-023e-449f-a884-c1f241842f5b"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244603"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244602"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244601_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#passengerID}"},
      "bound": {"flight": [      {
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }]}
   }]},
   "action": "ACCEPTANCE"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee4129d6-a982-455c-835f-a2be1713b19f" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="f7e1ab42-6ff1-4223-b517-6a0ee7c91b36" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="57532be2-1c23-4bdf-b002-d35812e3604d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Options" id="70492f0c-fa6e-49b5-b503-bbd188c94ecc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="f42c6250-0195-4804-908d-56bbbda2a256"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244623"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244622"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244622_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"identification": [
		{
			"passengerId": "2301CAB300005D09ZRH"
		}
	],
	"bound": {
		"flight": [
			{
				"departureAirport": "ZRH",
				"airlineCode": "LX",
				"departureDate": "2018-04-18",
				"type": "OPERATING",
				"arrivalAirport": "GVA",
				"flightNumber": "2804"
			}, {
				"departureAirport": "ZRH",
				"airlineCode": "LX",
				"departureDate": "2018-04-18",
				"type": "OPERATING",
				"arrivalAirport": "GVA",
				"flightNumber": "2804"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Option" id="b5f3cbc0-5cbb-41c6-9e68-d9ed00a9158a"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_RAW DATA" id="6ebb9117-306a-45c4-b737-05c72736baa1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_RAW DATA" id="9ecb9b8f-735b-4422-a179-ea4ad2e64a1e"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244642"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244642"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244642_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "RAW_DATA",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass[0].barcodeData.segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="fa3b502c-f128-4726-8063-a1949b176f34" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_RAW DATA" id="000f7604-b20d-49fa-a781-9757cac19c5b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_PDF" id="dec59a19-132b-4086-96ba-87c6557c46a7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_PDF" id="d6af6799-f858-4d08-a1b5-b2f19cf2144d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="900000000000000000000000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244652"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244652"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244652_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}",
         "type": "OPERATING"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}",
         "type": "OPERATING"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "HOME_PRINTED",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>.documentGeneration.document.documentData</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c01c4342-a498-4dde-8c2c-443e87d743fc" name="Verify PDF"><con:configuration><path>.documentGeneration.document.documentData</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="554d4ac5-4c88-4446-928f-6d80fc8d759a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_PDF" id="495d3a10-4b1c-40a6-a261-af7080ac9a73"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Email" id="559e4d7a-56da-4198-989c-76171c196c49"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Email" id="9ed139d4-eb67-43dc-be10-6129b24c7ee6"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244672"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244672"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244672_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CAC000008912ZRH"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "ZRH",
               "airlineCode": "LX",
               "departureDate": "2018-04-25",
               "type": "OPERATING",
               "arrivalAirport": "FRA",
               "flightNumber": "1068",
               "type": "OPERATING"
            },
                        {
               "departureAirport": "FRA",
               "airlineCode": "LH",
               "departureDate": "2018-04-25",
               "type": "OPERATING",
               "arrivalAirport": "GVA",
               "flightNumber": "1218",
               "type": "OPERATING"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_EMAIL",
   "documentId": "docID12345",
   "contactMethod": {"email": "didhiti.kumar@in.ibm.com"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="da5f10f4-8fe3-402d-a757-e93ed3be3dbd" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="6976b4e1-9f80-46e8-afec-880f9694f82f" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Email" id="b37e26c5-d0b8-4375-b4c9-5eea8801d292"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Phone" id="bc4d2ee8-4ad4-4167-8b69-6ae43b0a0acf"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Phone" id="f0fd7a48-a254-47f5-bab2-7330cad73941"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="900000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244692"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244692"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244692_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CAC000008912ZRH"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "ZRH",
               "airlineCode": "LX",
               "departureDate": "2018-04-25",
               "type": "OPERATING",
               "arrivalAirport": "FRA",
               "flightNumber": "1068"
            },
                        {
               "departureAirport": "FRA",
               "airlineCode": "LH",
               "departureDate": "2018-04-25",
               "type": "OPERATING",
               "arrivalAirport": "GVA",
               "flightNumber": "1218"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_PHONE_NUMBER",
   "documentId": "docID12345",
   "contactMethod": {"cellphone": {"phoneNumber": "003434139201"}}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7779b468-f3f0-4c08-b661-67cf99cc5f21" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="cd982ee7-16b4-484e-a9e0-954ec2b89118" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="416ebad1-b908-4fa8-93e8-c55048078fa3" name="Not Contains"><con:configuration><token>warning
</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" id="e1b4b3f2-6430-41f6-bf10-e7040b118f1e" name="error"><con:configuration><token>error</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Phone" id="2a324d22-3196-4662-8f01-fb009ebc94ab"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="62dcec38-76c8-4c55-a0fa-67dba2fe5439" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="3e87804f-7d48-4ffd-a263-fe11793bc168" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244712"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244712"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244712_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-10-25",
         "arrivalAirport": "MUC",
         "flightNumber": "178"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-10-25",
         "arrivalAirport": "TXL",
         "flightNumber": "178"
      }
   ]},
   "bookingReference": "${TCProperties#PNR}"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="remove_Documnet Options" id="2bf1fda4-7687-4a96-89bc-3e0c86e02905" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="remove_Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244722"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244722"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244722_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request/><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>$.passengerDocumentOptions..documentOption.deliveryOption[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="2371"/>
  <con:entry key="passenger-id" value="2301DA4B0000B5F2ZRH"/>
  <con:entry key="departure-airport" value="ZRH"/>
  <con:entry key="departure-date" value="2017-12-29"/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="81ad6a72-6a3a-4d6a-ac44-448575a74c5b" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522061244490_1597"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522061244732"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522061244732"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522061244490_1597"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522061244732_1597"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12897",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes": {"documentType": ["BOARDINGPASS"]},
         "flights": {"flight": [         {
            "airlineCode": "${TCProperties#airlineCode1}",
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "departureDate": "${TCProperties#DateTime}",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "${TCProperties#FlightNumber1}"
         }]}
      }],
      "identification": {"passengerId": "${TCProperties#passengerID}"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="7d57efb8-3ecf-4225-a425-0fc3c435e880" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T014_Fulfill_CodeShare_CheckIn_LX" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="1d30bb03-c115-4688-87a2-b72f9dec4474" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="7b0c8881-cf92-4049-a87b-e42ac5009217" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="d3d7220c-1884-4a6d-abda-d6c8c58e828d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date1</con:name><con:value>2018-02-27</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Date2</con:name><con:value>2018-02-27</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value/></con:property><con:property><con:name>Number_of_Infants</con:name><con:value/></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>KZONKK</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>FlightNumber1</con:name><con:value>1247</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-10-04</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301CA850000A7DEVIE</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LH</con:value></con:property><con:property><con:name>Outbound_Origin_MultiLeg</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination_MultiLeg</con:name><con:value>GVA</con:value></con:property><con:property><con:name>FlightNumber_MultiLeg</con:name><con:value/></con:property><con:property><con:name>FlightNumber2</con:name><con:value>1077</con:value></con:property><con:property><con:name>airlineCode2</con:name><con:value>LX</con:value></con:property><con:property><con:name>POS</con:name><con:value>LX</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b0bca7b86c56b62f8a176ab</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="69c7af79-d948-4469-b817-ef271f1c1bb5"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524487649286_1224"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524487649286_1224"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524487649302_1224"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="b69aad93-fc31-4fe5-90d5-3e6ad8cb02a9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="b2052b00-9303-4c6f-a039-bc79c9b8e2a8"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519653533461_7133"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519653533539"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519653533539"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519653533461_7133"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519653533539_7133"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#airlineCode1}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "false"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b467039e-b232-49fe-a44a-a0ca0c72fc36" name="VerifyBookingStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="734635cd-192a-4dcb-9209-8a76dbc6bbd7" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="74f04757-e4a1-4d56-9e79-63aa0d5e0bd3" name="VerifyFlightStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retrieval" id="9d1cf771-da3b-466c-b4b7-35c60ddcbeb9"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Acceptance" id="d29f0e32-dc62-4879-9132-7068f717ae71"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="f3b67157-ca9c-468f-b662-3e82a6898fe3"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519653533461_7133"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519653533585"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519653533585"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519653533461_7133"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519653533585_7133"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#passengerID}"},
      "bound": {"flight": [      {
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}"
      }]}
   }]},
   "action": "ACCEPTANCE"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee4129d6-a982-455c-835f-a2be1713b19f" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="f7e1ab42-6ff1-4223-b517-6a0ee7c91b36" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="52403bc9-cb82-4f7c-b7af-00dfdc7d8f7d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_DocumentOptions" id="c7a3495e-4e2d-4e82-a7a7-f93c30e63da3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="dbb5b797-a4d7-4551-92ce-4c80ece6847f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519653533461_7133"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519653533601"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519653533601"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519653533461_7133"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519653533601_7133"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"identification": [
		{
			"passengerId": "${TCProperties#passengerID}"
		}
	],
	"bound": {
		"flight": [
			{
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"airlineCode": "${TCProperties#airlineCode1}",
				"departureDate": "${TCProperties#Outbound_Date1}",
				"type": "OPERATING",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#FlightNumber1}"
			}, {
				"departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
				"airlineCode": "${TCProperties#airlineCode2}",
				"departureDate": "${TCProperties#Outbound_Date2}",
				"type": "OPERATING",
				"arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
				"flightNumber": "${TCProperties#FlightNumber2}"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Option" id="8c2e4871-4993-439f-bc13-a59ecd24b878"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_BoardingPass-RAW-DATA" id="32c11168-0843-4d04-9b24-c2612ea2edb0"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_RAW DATA" id="470a43f9-0d2e-483c-8ebf-75289c3e6af8"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519653533461_7133"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519653533617"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519653533617"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519653533461_7133"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519653533617_7133"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "RAW_DATA",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass[0].barcodeData.segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="fa3b502c-f128-4726-8063-a1949b176f34" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_RAW DATA" id="6f5ec4fa-b57b-45f4-99ee-7632300f8565"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_BoardingPass_PDF" id="3a4f4788-2d54-48e0-bf95-758b79949ae5"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_PDF" id="36a40f20-5322-4603-922a-cc765257204d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519653533461_7133"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519653533632"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519653533632"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519653533461_7133"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519653533632_7133"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "HOME_PRINTED",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>.documentGeneration.document.documentData</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c01c4342-a498-4dde-8c2c-443e87d743fc" name="Verify PDF"><con:configuration><path>.documentGeneration.document.documentData</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="554d4ac5-4c88-4446-928f-6d80fc8d759a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_PDF" id="a1f463bd-e454-4b14-bac8-f4a92a13c374"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Email" id="67cc7170-9baa-4d63-84e2-a1b5ebdadcae"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Email" id="ba06c19f-6a10-4756-9910-29bf6987dcc1"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519653533461_7133"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519653533648"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519653533648"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519653533461_7133"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519653533648_7133"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#passengerID}"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}"
            },
                        {
                "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_EMAIL",
   "documentId": "docID12345",
   "contactMethod": {"email": "didhiti.kumar@in.ibm.com"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="ff3f22bd-0b7e-4fec-9880-bc4979a5aea0" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="431e5ac3-0557-4fdb-94ef-eb959d0f898b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Email" id="f6a01977-2665-4ee8-9cca-5206baa905f9"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Phone" id="4b95ed9e-c03d-4907-b804-c8728a289f41"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Phone" id="9853349d-0a5d-45a3-830b-f97934cc255f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519653533461_7133"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519653533663"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519653533663"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519653533461_7133"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519653533663_7133"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#passengerID}"},
      "bound": [      {
         "flight":          [
                        {
              "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}"
            },
                        {
                "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_PHONE_NUMBER",
   "documentId": "docID12345",
   "contactMethod": {"cellphone": {"phoneNumber": "0039434139201"}}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="761af8fe-9fac-49a4-93a0-71bf9867916d" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="809a6af3-843e-4b52-84bc-6dd6eb1bd97c" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Phone" id="3bb3941c-0e6f-4442-aba6-3714ef2c1019"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="1a522b59-df69-4e18-877d-9b86d9c1d253" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="628fba5f-9476-44f4-abbc-26244cc722bc" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519653533461_7133"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519653533679"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519653533679"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519653533461_7133"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519653533679_7133"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-10-25",
         "arrivalAirport": "MUC",
         "flightNumber": "178"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-10-25",
         "arrivalAirport": "TXL",
         "flightNumber": "178"
      }
   ]},
   "bookingReference": "${TCProperties#PNR}"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="remove_Documnet Options" id="21d2d544-b75f-4e32-b43d-091ddb45e021" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="remove_Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519653533461_7133"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519653533695"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519653533695"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519653533461_7133"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519653533695_7133"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request/><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>$.passengerDocumentOptions..documentOption.deliveryOption[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="2371"/>
  <con:entry key="passenger-id" value="2301DA4B0000B5F2ZRH"/>
  <con:entry key="departure-airport" value="ZRH"/>
  <con:entry key="departure-date" value="2017-12-29"/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="31249c7e-6b0d-491d-bb65-6114fe2c4005" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519653533461_7133"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519653533710"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519653533710"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519653533461_7133"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519653533710_7133"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12897",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes": {"documentType": ["BOARDINGPASS"]},
         "flights": {"flight": [         {
            "airlineCode": "${TCProperties#airlineCode1}",
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "departureDate": "${TCProperties#DateTime}",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "${TCProperties#FlightNumber1}"
         }]}
      }],
      "identification": {"passengerId": "${TCProperties#passengerID}"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>18509</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="0121f465-cdd4-49b4-943f-843ae82263af" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T015_Fulfill_CodeShare_CheckIn_OS" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="UpdateDate" id="91a94c5d-27ca-4d5c-a18a-1486f6ebf893" disabled="true"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="groovy" name="AddADCHeader" id="0b6f919a-0534-48fc-b664-e50a9cf46267" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="813b0109-4fff-4de9-9129-28aa6c43693d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date1</con:name><con:value>2018-06-12</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>VIE</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Date2</con:name><con:value>2018-06-12</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value/></con:property><con:property><con:name>Number_of_Infants</con:name><con:value/></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>NJNZMN</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXDA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTDA</con:value></con:property><con:property><con:name>FlightNumber1</con:name><con:value>1247</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-10-04</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301CAEE00005F95</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LH</con:value></con:property><con:property><con:name>Outbound_Origin_MultiLeg</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination_MultiLeg</con:name><con:value>VIE</con:value></con:property><con:property><con:name>FlightNumber_MultiLeg</con:name><con:value/></con:property><con:property><con:name>FlightNumber2</con:name><con:value>124</con:value></con:property><con:property><con:name>airlineCode2</con:name><con:value>OS</con:value></con:property><con:property><con:name>POS</con:name><con:value>OS</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b1e660e2d88891618e8f462</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="662a8cf4-3695-4686-8a18-7234d57108a6"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524487649286_1224"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524487649286_1224"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524487649302_1224"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="caac7343-a668-4639-8a66-3c7fff42466d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="2abafcd6-ccb6-4dff-b726-b0ab52f0db33"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519720080934_1722"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519720081090"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519720081090"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS_A-FRA_MKI-K_AT"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519720080934_1722"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519720081090_1722"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#airlineCode1}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus 1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b467039e-b232-49fe-a44a-a0ca0c72fc36" name="VerifyBookingStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="734635cd-192a-4dcb-9209-8a76dbc6bbd7" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="74f04757-e4a1-4d56-9e79-63aa0d5e0bd3" name="VerifyFlightStatus 2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retrieval" id="f7876a51-987e-43d6-9517-0dcd7c4f3701"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Acceptance" id="fffcfe24-a502-41b5-b522-9533f7e2daaa"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="13bf9672-4487-4c4d-8b85-be83c5630bfd"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519720080934_1722"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519720081136"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519720081136"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS_A-FRA_MKI-K_AT"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519720080934_1722"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519720081136_1722"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#passengerID}"}}],
	  
      "bound": [{
	  "flight": [      {
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "type": "OPERATING",
         "flightNumber": "${TCProperties#FlightNumber1}"
      },
      {
        "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}"
      }],
	  "sequence": "0" 
 }]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus 1st Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee4129d6-a982-455c-835f-a2be1713b19f" name="VerifyCheckinStatus 2nd Segment"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[1].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="f7e1ab42-6ff1-4223-b517-6a0ee7c91b36" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="be9314fe-8c7f-49e0-a08a-3d29133f53dc"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Options" id="19988873-0b64-4295-8c4d-bcbff101e930"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="28a7c0d4-c393-4e54-889f-3793a9ef03fe"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519720080934_1722"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519720081152"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519720081152"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS_A-FRA_MKI-K_AT"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519720080934_1722"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519720081152_1722"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"identification": [
		{
			"passengerId": "${TCProperties#passengerID}"
		}
	],
	"bound": {
		"flight": [
			{
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"airlineCode": "${TCProperties#airlineCode1}",
				"departureDate": "${TCProperties#Outbound_Date1}",
				"type": "OPERATING",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#FlightNumber1}"
			}, {
				"departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
				"airlineCode": "${TCProperties#airlineCode2}",
				"departureDate": "${TCProperties#Outbound_Date2}",
				"type": "OPERATING",
				"arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
				"flightNumber": "${TCProperties#FlightNumber2}"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>.documentOptions.bound.flight.documentOptions.deliveryMethod[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Option" id="fc4d0b6a-4178-46e6-b6d1-5e0d9938e178"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_RAW DATA" id="87fafa03-dbc1-4f2b-9740-3bdee25dfd7f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_RAW DATA" id="b54e744c-d1bb-4ae8-84e2-aa913380e61c"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_RAW DATA" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519720080934_1722"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519720081168"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519720081168"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS_A-FRA_MKI-K_AT"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519720080934_1722"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519720081168_1722"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "RAW_DATA",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus"><con:configuration><path>.documentGeneration.document.passengerDocument.boardingPass[0].barcodeData.segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="fa3b502c-f128-4726-8063-a1949b176f34" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_RAW DATA" id="b8d074df-0f1b-48c1-a1ad-7a369a6437de"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Borading Pass_PDF" id="7362baaa-b1c2-428c-82ee-4bf496c6e2f8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport-FirstPassenger1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Outbound_Origin_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureDate-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Outbound_Date2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>arrivalAirport-FirstPassenger2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination_MultiLeg</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingRef-FirstPassenegr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingReference</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNuber-FirstPassenegr1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNuber-FirstPassenegr2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_PDF" id="8741471d-eb53-4cf5-a4f1-cffae39f7af7"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_PDF" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519720080934_1722"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519720081183"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519720081183"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS_A-FRA_MKI-K_AT"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519720080934_1722"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519720081183_1722"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"documentGeneration": {
		"document": [
			{
				"passengers": {
					"passenger": [
						{
							"identification": {
								"passengerId": "${TCProperties#passengerID}"
							},
							"bound": [
								{
									"flight": [
										{
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "airlineCode": "${TCProperties#airlineCode1}",
         "departureDate": "${TCProperties#Outbound_Date1}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber1}"
      },
      {
         "departureAirport": "${TCProperties#Outbound_Origin_MultiLeg}",
         "airlineCode": "${TCProperties#airlineCode2}",
         "departureDate": "${TCProperties#Outbound_Date2}",
         "type": "OPERATING",
         "arrivalAirport": "${TCProperties#Outbound_Destination_MultiLeg}",
         "flightNumber": "${TCProperties#FlightNumber2}"
      }
									],
									"documentType": [
										{
											"type": "BOARDINGPASS"
										}
									]
								}
							]
						}
					]
				},
				"deliveryMethod": "HOME_PRINTED",
				"documentId": "docID12345"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>.documentGeneration.document.documentData</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c01c4342-a498-4dde-8c2c-443e87d743fc" name="Verify PDF"><con:configuration><path>.documentGeneration.document.documentData</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="554d4ac5-4c88-4446-928f-6d80fc8d759a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_PDF" id="6f3a3fd2-803a-47d4-a8bb-1fdcba8f069b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Email" id="b6f65b75-5393-4f77-9493-f3e7190dd952"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Email</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Email" id="76c76a9b-7902-44cc-80fb-cf44f7f4094f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Email" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519720080934_1722"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519720081199"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519720081199"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS_A-FRA_MKI-K_AT"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519720080934_1722"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519720081199_1722"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CAEE00005F95"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "VIE",
               "airlineCode": "LH",
               "departureDate": "2018-06-12",
               "type": "OPERATING",
               "arrivalAirport": "FRA",
               "flightNumber": "1247"
            },
                        {
               "departureAirport": "FRA",
               "airlineCode": "OS",
               "departureDate": "2018-06-12",
               "type": "OPERATING",
               "arrivalAirport": "VIE",
               "flightNumber": "124"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_EMAIL",
   "documentId": "docID12345",
   "contactMethod": {"email": "didhiti.kumar@in.ibm.com"}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="24f6d4a6-5643-42c1-8de7-c2b3e2e3172b" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="60781faa-7532-4f74-943e-3bf7b29e3f2a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Email" id="a5f04b9d-4650-4dba-9fdc-24cb486265b4"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer_Document Generation_Phone" id="175cd020-33a0-40db-91e8-743025186e5c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferChildNodes="false" ignoreEmpty="false" transferToAll="false" entitize="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>ArrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="true" transferToAll="false" useXQuery="false"><con:name>depatureDate_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlinecode_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>departureAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>ArrivalAirport_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document Generation_BoardingPass_via Phone</con:targetStep><con:targetPath>.documentGeneration.document.passengers.passenger.bound.flight[1].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation_BoardingPass_via Phone" id="413e6223-c4bc-49cb-81f1-9bad7adb3f05"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation_BoardingPass_via Phone" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519720080934_1722"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519720081214"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519720081214"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="OS_A-FRA_MKI-K_AT"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519720080934_1722"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519720081214_1722"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CAEE00005F95"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "VIE",
               "airlineCode": "LH",
               "departureDate": "2018-06-12",
               "type": "OPERATING",
               "arrivalAirport": "FRA",
               "flightNumber": "1247"
            },
                        {
               "departureAirport": "FRA",
               "airlineCode": "OS",
               "departureDate": "2018-06-12",
               "type": "OPERATING",
               "arrivalAirport": "VIE",
               "flightNumber": "124"
            }
         ],
         "documentType": [{"type": "BOARDINGPASS"}]
      }]
   }]},
   "deliveryMethod": "MOBILE_VIA_PHONE_NUMBER",
   "documentId": "docID12345",
   "contactMethod": {"cellphone": {"phoneNumber": "0039434139201"}}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/travelers/documents</con:originalUri><con:assertion type="JsonPath Match" id="bc63808e-9341-4239-8a85-57b207992293" name="checkinStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c8ff776a-9437-4017-9a9c-a0f5f74095d4" name="bookingStatus" disabled="true"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="979fa17c-5670-420a-be39-c25a54b21eaf" name="Contains"><con:configuration><token>boardingpass</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4001eba6-26cd-4821-bf0c-ce6ac364bfeb" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Doc Generation_via Phone" id="2193feca-1e38-4d2f-985f-fd2295861047"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="44bbfae7-75a3-47c1-bef4-336c881704bc" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>FlightNumber1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType xsi:nil="true"/><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="d7f3a10b-0e0b-45eb-bd93-dd2a746700cf" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519720080934_1722"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519720081230"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519720081230"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519720080934_1722"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519720081230_1722"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-10-25",
         "arrivalAirport": "MUC",
         "flightNumber": "178"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-10-25",
         "arrivalAirport": "TXL",
         "flightNumber": "178"
      }
   ]},
   "bookingReference": "${TCProperties#PNR}"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="remove_Documnet Options" id="e1975d54-dacb-4ced-9ca4-50c0b6a26a63" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="remove_Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519720080934_1722"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519720081246"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519720081246"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519720080934_1722"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519720081246_1722"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request/><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>$.passengerDocumentOptions..documentOption.deliveryOption[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="2371"/>
  <con:entry key="passenger-id" value="2301DA4B0000B5F2ZRH"/>
  <con:entry key="departure-airport" value="ZRH"/>
  <con:entry key="departure-date" value="2017-12-29"/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="be192299-6e3a-4195-b297-1f771c6981a7" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519720080934_1722"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519720081261"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519720081261"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LX"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519720080934_1722"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519720081261_1722"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12897",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes": {"documentType": ["BOARDINGPASS"]},
         "flights": {"flight": [         {
            "airlineCode": "${TCProperties#airlineCode1}",
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "departureDate": "${TCProperties#DateTime}",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "${TCProperties#FlightNumber1}"
         }]}
      }],
      "identification": {"passengerId": "${TCProperties#passengerID}"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>14767</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="a4094d41-c930-4a68-befc-e512ea83464f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D10.F014.S002.O22.T001_Check In_Regulatory Data Collection_Single Passenger_Single Segment_LH" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="15cd7b5d-aec8-4b65-a605-c9e7b50e7a73" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="8e3e85db-b42c-426c-9da5-19a02fe348ac"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH_A-FRA_MKI-K_DE</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2017-10-20</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>JFK</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value/></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Infants</con:name><con:value>1</con:value></con:property><con:property><con:name>Cabin</con:name><con:value>Business</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>date_1</con:name><con:value>2018-05-24</con:value></con:property><con:property><con:name>date_2</con:name><con:value>2018-05-31</con:value></con:property><con:property><con:name>passengerFirstName</con:name><con:value>paxone</con:value></con:property><con:property><con:name>passengerLastName</con:name><con:value>TESTONE</con:value></con:property><con:property><con:name>bookingReference</con:name><con:value>KV9X44</con:value></con:property><con:property><con:name>flightNumber</con:name><con:value>4568</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>PassengerID</con:name><con:value>2301CAC100005EF6FRA</con:value></con:property><con:property><con:name>userSessionId_LH</con:name><con:value>5b055fe72d88895550c4ec5a</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="TransferProperties" id="53863b42-b6c4-468e-886d-3086666e11c4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>userSessionID</con:name><con:value>5b055fe72d88895550c4ec5a</con:value></con:property><con:property><con:name>itineraryPriceRef_1</con:name><con:value>/air/search/5b055fe92d88895550c4ec5b/itinerary-prices/1_1</con:value></con:property><con:property><con:name>itineraryPriceRef_2</con:name><con:value/></con:property><con:property><con:name>offerRef</con:name><con:value>/offers/5b055ff92d88895550c4ec85</con:value></con:property><con:property><con:name>m_offerRef_ID</con:name><con:value>/merchandizing/58d12b05d6abab5f3c182a65/offers/ANCILLARYAIR_1</con:value></con:property><con:property><con:name>formOfPayment</con:name><con:value>/fulfillment/methods/5b0560102d88895550c4ec87/payment-forms/CREDITCARD/2</con:value></con:property><con:property><con:name>cardType</con:name><con:value>/fulfillment/methods/5b0560102d88895550c4ec87/payment-forms/CREDITCARD/2/payment-card-types/VI</con:value></con:property><con:property><con:name>allocationRef</con:name><con:value>/fulfillment/methods/5b0560102d88895550c4ec87/payment-allocations/1</con:value></con:property><con:property><con:name>optionAllocationRef</con:name><con:value>/fulfillment/methods/5b0560102d88895550c4ec87/payment-allocations/1/option-allocations/4</con:value></con:property><con:property><con:name>air_amount</con:name><con:value>3088.83</con:value></con:property><con:property><con:name>m_offerRef</con:name><con:value>/offers/58d12b06d6abab5f3c182a67</con:value></con:property><con:property><con:name>m_travelerCompositionUri</con:name><con:value>/offers/58d12b06d6abab5f3c182a67/ancillaryair/traveler-compositions/0</con:value></con:property><con:property><con:name>travelerCompositionUri</con:name><con:value>/offers/5b055ff92d88895550c4ec85/air/traveler-compositions/0</con:value></con:property><con:property><con:name>reservationRef</con:name><con:value>/reservations/A000002086</con:value></con:property><con:property><con:name>paymentRef</con:name><con:value/></con:property><con:property><con:name>offerRef1</con:name><con:value>/offers/5b055ff92d88895550c4ec85</con:value></con:property><con:property><con:name>travelerCompositionUri1</con:name><con:value>/offers/5a1fb2942d888909d152dff6/air/traveler-compositions/1</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Travel Date" id="51f26488-fbdb-4bb7-a11d-089d8373f066"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[1]/*:origin/@*:date", flightDate_ob_s1);
//testRunner.testCase.testSuite.setPropertyValue("date_1", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("date_1", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("date_2", flightDate_ib_s1);

//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml);</script></con:config></con:testStep><con:testStep type="restrequest" name="Air_Search" id="a4f915d1-0423-4120-8173-d31d6e5963f4"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Search" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/lfs to get tinerary price reference with LX, One way Domestic flight for one adult  and no cabin as input</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522058319692_9698"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522058319692"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522058319692"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522058319692_9698"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522058319692_9698"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "languageCode": "${TCProperties#language}",
    "originDestination": [
        {
            "origin": {
                "date": "${TCProperties#date_1}",
                "windowBefore": "0",
                "windowAfter": "0",
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Origin}"
                }
            },
            "destination": {
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Destination}"
                }
            }
        }
    ],
    "travelerComposition": [
        {
            "count": "${TCProperties#Number_of_Adults}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/ADT"
            }
        }
        
        
    ],
    "pos": "${TCProperties#POS}",
    "preferences": {
        "cabin": {
            "cabinRef": {
                "uri": "/info/air/cabin-classes/${TCProperties#Cabin}"
            }
        }
    }
}
</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f56d4c53-af85-43bf-90a7-5bf1a91421f2" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c971de40-b89e-45fa-834a-3855f135ce0c" name="JsonPath Count - No Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="803cd1e9-3a86-4f64-bea8-02c34b958368" name="JsonPath Existence Match - ItineraryPriceRef"><con:configuration><path>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2758936c-e002-49fe-b1f0-359382509cf2" name="Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8d233546-71cc-478d-a6b2-92f29f5b7697" name="Script Assertion 3"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ItineraryPriceRef" id="339dee8f-784f-4932-88c6-a82978ceae2b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>itineraryPriceRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>.search.itineraryPrice[0].uri</con:sourcePath><con:targetType>itineraryPriceRef_1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userSessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionID</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Air_Price" id="dc4d9698-8db2-4660-9c25-13bd32daa130"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/price" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Price" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false" timeout="6000000000000000000000000000000000000000000"><con:description>Call POST /air/price to get Offer URI</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522058319692_9698"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522058319712"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522058319712"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522058319692_9698"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522058319712_9698"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{     "userSessionId": "${TransferProperties#userSessionID}",     
	"languageCode": "${TCProperties#language}",
	"itineraryPriceRQ": {         
		"price": "true",         
		"itineraryPriceRef": [            
		{                 
			"uri": "${TransferProperties#itineraryPriceRef_1}"             
			} 
			]     },     
			"pos": "${TCProperties#POS}" }
			</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66918970-0946-42b3-88f9-c78fda3f2310" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="a423a547-5b8d-4063-8b9a-d2444abccab4" name="JsonPath Count - NoErrors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b689c70d-bcdc-47b2-adea-5b0f534b3dd3" name="JsonPath Existence Match - OfferRef"><con:configuration><path>$.offer[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="20c6818a-5902-4150-8911-9f7f5ae8649a" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_OfferRef" id="4bdebbea-b6c6-4adb-8d62-03c405fcc0c9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerCompositionUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[0]</con:sourcePath><con:targetType>travelerCompositionUri</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>travelerComposition1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[2]</con:sourcePath><con:targetType>travelerCompositionUri1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Reservation_Post" id="1abc7f0a-d02a-4c36-8c4d-2b1d3125e1da"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/reservations" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reservation_Post" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522058319692_9698"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522058319722"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522058319722"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522058319692_9698"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522058319722_9698"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"userSessionId": "${TransferProperties#userSessionID}",
	"pos": "${TCProperties#POS}",
	"traveler": [
		{
			"customer": true,
			"dateOfBirth": "1981-06-21+00:00",
			"gender": "M",
			"id": 0,
			"uri": "/travelers/0",
			"name": {
				"first": "${TCProperties#passengerFirstName}",
				"last": "${TCProperties#passengerLastName}",
				"titleRef": {
					"id": "MR",
					"uri": "/info/traveler-name-titles/MR"
				}
			},
			"email": {
				"address": "arsenio.organojr@datalex.com",
				"default": true,
				"id": 1,
				"uri": "/travelers/0/emails/1",
				"typeRef": {
					"id": "1.EAT",
					"uri": "/info/email-types/1.EAT"
				}
			},
			"phone": {
				"default": true,
				"id": 1,
				"number": "01234567",
				"uri": "/travelers/0/phones/1",
				"typeRef": {
					"id": "5.PUT",
					"uri": "/info/phone-types/5.PUT"
				}
			},
			"address": {
				"addressLine1": "TRANSIT",
				"city": "NEW YORK",
				"countryCode": "US",
				"postalCode": "77845",
				"default": true,
				"id": 1,
				"stateCode": "NJ",
				"uri": "/travelers/0/addresses/1",
				"typeRef": {
					"id": "7.AUT",
					"uri": "/info/address-types/7.AUT"
				}
			},
			"FOID": {
                                                                "dateOfBirth": "1981-06-21+00:00",
                                                                "gender": "M",
                                                                "lastName": "${TCProperties#passengerLastName}",
                                                                "firstName": "${TCProperties#passengerFirstName}",
                                                                "id": 1,
                                                                "typeRef": {
                                                                                "id": "2.DOC",
                                                                                "uri": "/info/foid-types/2.DOC"
                                                                },
                                                                "expiryDate": "2019-04-19+03:00",
                                                                "number": 456987,
                                                                "applicableCountry": "US",
                                                                "issuingLocation": "FRA",
                                                                "effectiveDate": "1999-05-29+03:00",
                                                                "uri": "/travelers/0/forms-of-identification/1"
                                                },
			"typeRef": {
				"id": "ADT",
				"uri": "/info/traveler-types/AIR/ADT"
			},
			"citizenship": {
				"countryRef": {
					"id": "US",
					"uri": "/geo/countries/US"
				}
			}
		}

	],
	"item": [
		{
			"book": true,
			"offerRef": {
				"uri": "${TransferProperties#offerRef1}"
			}
		}
	],
	"travelerAssignment": [
		{
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri}"
			},
			"travelerRef": {
				"uri": "/travelers/0"
			}
		}
	]
} </con:request><con:originalUri>http://10.160.6.148/tdprest-2/api/reservation</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c9d5b6d0-156a-40bc-aed3-f931f2096fab" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="57898c12-aaae-4bcb-86d6-deaad57c6349" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="955f0a2f-3f2a-45ce-880d-1256e35792a1" name="JsonPath Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="267c181b-0d35-4260-8521-74000c582e14" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bdf765b2-8675-4508-a42e-b527a8325b7b" name="JsonPath Match"><con:configuration><path>$.reservation.status</path><content>BOOKED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ReservationRef" id="7ec00562-2f11-41ca-918b-589f542eb096"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>reservationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Reservation_Post</con:sourceStep><con:sourcePath>$.reservation.uri</con:sourcePath><con:targetType>reservationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Methods" id="dd253329-34d8-49ca-9297-c987565b7d49"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/tdprest-2/api/fulfillment/methods" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Methods" id="c71f685c-8bb6-417f-9e46-bbffbe66f544" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522058319692_9698"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522058319732"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522058319732"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522058319692_9698"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522058319732_9698"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${#TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"reservationRef": {
		"uri": "${TransferProperties#reservationRef}"
	}
}</con:request><con:originalUri>http://localhost/fulfillment/methods</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f4911e4e-8cde-4acb-9cd5-32c46e76441b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="eef435b3-daaf-4ffe-9489-ee43b6150fec" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="46d611a1-663b-42ae-bb1b-f7ac275764c4" name="JsonPath Count  Warnings"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3c9f471a-5103-4d9d-84d2-e53d8845487d" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fae0e08b-4a8f-4256-920b-61956baf26fe" name="JsonPath Existence Match"><con:configuration><path>$.fulfillmentMethod.paymentForm..id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_FOP_Data" id="4b63eeb9-0b82-434d-94f8-ed8d31b2fdc9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>formOfPayment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].uri[0]</con:sourcePath><con:targetType>formOfPayment</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cardType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentCard.type[?(@.id=='VI')].uri[0]</con:sourcePath><con:targetType>cardType</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>allocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation[0].paymentAllocationRef.uri</con:sourcePath><con:targetType>allocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>optionAllocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation.optionAllocationRef.uri[0]</con:sourcePath><con:targetType>optionAllocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>air_amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.amount</con:sourcePath><con:targetType>air_amount</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Currency</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.currency</con:sourcePath><con:targetType>Currency</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Orders" id="d207e43c-5ea6-4e92-b955-44d511bb0efa"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/fulfillment/orders" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Orders" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522058319692_9698"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522058319742"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522058319742"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522058319692_9698"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522058319742_9698"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"application": {
"wrapCallback": false,
"callback": [
{
"type": "COMPLETE",
"url": "http://57.20.104.193:29443/PaymentHub/post"
}, {
"type": "FAILURE",
"url": "http://errorurl.com"
}, {
"type": "CANCEL",
"url": "http://cancelurl.com"
}
],
"browserInfo": {
"acceptHeader": "application/xml",
"userAgent": "Java/1.8.0_101"
}
},

	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"paymentDetails": {
		"id": 1,
		"uri": "/payment-details/1",
		"customerRef": {
			"uri": "${TransferProperties#reservationRef}/customers/1"
		},
		"paymentFormRef": {
			"uri": "${TransferProperties#formOfPayment}"
		},
		"paymentCard": {
			"number": "${TCProperties#Token number}",
			"expiryDate": "2018-12-31",
			"holderName": "Paul Ziert",
			"issuingCountry": "CA",
			"typeRef": {
				"uri": "${TransferProperties#cardType}"
			},
			"securityCode": 123,
			"billingAddressRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/addresses/1"
			},
			"phoneRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/phones/1"
			},
			"emailRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/emails/1"
			}
		}
	},
	"payment": {
		"allocationRef": {
			"uri": "${TransferProperties#allocationRef}"
		},
		"option": {
			"detailsRef": {
				"uri": "/payment-details/1"
			},
			"allocationRef": {
				"uri": "${TransferProperties#optionAllocationRef}"
			},
			"value": {
				"money": {
					"amount":"${TransferProperties#air_amount}",
					"currency": "${TransferProperties#Currency}"
				}
			}
		}
	}
}</con:request><con:originalUri>http://localhost/tdprest-2/api/fulfillment/orders</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="867da589-56f7-4d9e-9dd2-675187865f9a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fec7caae-1863-471e-bb22-396c480f9b54" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="b17fbd0a-19d1-4ed3-898a-9f44c5cd0a63" name="JsonPath Count  Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d5881854-0cad-42da-b102-0bc61b80f12b" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ec69b593-94aa-4f8d-9892-916149e75e0d" name="JsonPath Match"><con:configuration><path>$.order.item..fulfillmentStatus</path><content>[READY]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bd8e94ea-19c5-404f-8497-621563614dd3" name="JsonPath Match 1"><con:configuration><path>$.reservation.status</path><content>TICKETED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer PNR" id="e4512b0c-1e92-4599-a979-e75cfe8a7041"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PNR</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation..bookingReference.value[0]</con:sourcePath><con:targetType>bookingReference</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>FirstName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.traveler.name..first[0]</con:sourcePath><con:targetType>passengerFirstName</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LastName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.traveler.name..last[0]</con:sourcePath><con:targetType>passengerLastName</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.item.air.itinerary.originDestination.flightSegment.operatingAirlineRef.id[0]</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionId_LH</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data-Retrieval" id="8c9b20cf-8645-4087-b81b-1b827222f39d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data-Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522058319692_9698"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522058319762"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522058319762"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522058319692_9698"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522058319762_9698"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#passengerLastName}",

          "passengerFirstName": "${TCProperties#passengerFirstName}",

          "bookingReference": "${TCProperties#bookingReference}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#airlineCode}",
            "type": "OPERATING"


          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="b062e8df-2f09-468b-b3c1-136bf35616a7" name="VerifyResponse"><con:configuration><path>.passengerSearch.passenger[0].regulatoryDataCollectionStatus</path><content>DATA_INCOMPLETE</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retrieval" id="b454328c-6b01-4258-9176-48d0f04c2f2e"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Regulatory_Data" id="d8e5228e-4bf3-4e3f-a132-97fe00ebdab9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>lastName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerLastName</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.identification.passengerLastName</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.identification.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>depatureaiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>arrivalAiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>flightNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Requlatory_Data_Collection" id="621f2140-681c-42f7-bec2-a94042b914dd"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/regulatory-data" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Requlatory_Data_Collection" id="0f94da8f-5813-4dac-bf1d-6ab663561928" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522058319692_9698"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522058319772"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522058319772"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522058319692_9698"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522058319772_9698"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"identification": {
		"passengerId": "${TCProperties#PassengerID}"
	},
	"bound": {
		"flight": [
			{
				"airlineCode": "${TCProperties#airlineCode}",
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"departureDate": "${TCProperties#date_1}",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#flightNumber}",
				"type": "OPERATING"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/regulatory-data</con:originalUri><con:assertion type="JsonPath Match" id="0bdf3106-1d34-4154-8755-b41d714c1c04" name="ValidationResponse"><con:configuration><path>.regulatoryDataCollection.dataCollectionStatus</path><content>[DATA_INCOMPLETE]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="7cc35377-3816-4407-ab9b-76384ac1839d" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>passenger-id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Regulatory Data Collection_Status" id="4bf95b93-564c-42eb-b11d-cba88cdb0edc"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Primary_Data" id="358e010f-3595-490e-bbf3-3ade6e431700"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>flightNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureData</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>date_1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureAiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Requlatory_Data_Collection</con:sourceStep><con:sourcePath>.regulatoryDataCollectionStatus.regulatoryData.segment[0].flight.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Data_Collection</con:targetStep><con:targetPath>.regulatoryData.segment[0].flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Requlatory_Data_Collection</con:sourceStep><con:sourcePath>.regulatoryDataCollectionStatus.regulatoryData.segment[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Data_Collection</con:targetStep><con:targetPath>.regulatoryData.segment[0].flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureData2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Requlatory_Data_Collection</con:sourceStep><con:sourcePath>.regulatoryDataCollectionStatus.regulatoryData.segment[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Data_Collection</con:targetStep><con:targetPath>.regulatoryData.segment[0].flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureAiport2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Requlatory_Data_Collection</con:sourceStep><con:sourcePath>.regulatoryDataCollectionStatus.regulatoryData.segment[0].flight.departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Data_Collection</con:targetStep><con:targetPath>.regulatoryData.segment[0].flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Data_Collection_Primary" id="2091f5ab-6f19-4c4e-8767-21ad6e0fb6f3"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/regulatory-data" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Data_Collection_Primary" id="0f94da8f-5813-4dac-bf1d-6ab663561928" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522058319692_9698"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522058319782"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522058319782"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522058319692_9698"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522058319782_9698"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "regulatoryData":    {
      "purposeOfVisit": {"value": "TOURIST"},
      "segment": [      {
         "flight":          {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#date_1}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#flightNumber}",
      "type": "OPERATING"
         },
         "primaryDocument": [         {
            "dateOfBirth": {"value": "1981-06-21"},
            "lastName": {"value": "TESTONE"},
            "countryOfIssue": {"value": "GB"},
            "documentFeatures":             {
               "biometricPassport": {"value": "TRUE"},
               "machineReadable": {"value": "FALSE"}
            },
            "nationality": {"value": "GB"},
            "expiryDate": {"value": "2019-04-19"},
            "gender": {"value": "MALE"},
            "multipleNamesOnPassportRole": {"value": "BEARER"},
            "number": {"value": "GBA216549"},
            "givenName": {"value": "paxone"},
            "type": {"value": "PASSPORT"}
         }],
         "secureFlightData":          {
            "redressNumber": {"value": "323456789"},
            "knownTravellerNumber": {"value": "523456789"},
            "secureFlightPassengerData":             {
               "lastName": {"value": "TESTONE"},
               "gender": {"value": "MALE"},
               "birthDay": {"value": "1981-06-21"},
               "givenName": {"value": "paxone"}
            }
         }
      }],
      "countryOfResidence": {"value": "GB"}
   },
   "identification": {"passengerId": "${TCProperties#PassengerID}"},
   "bound": {"flight": [   {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#date_1}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#flightNumber}",
      "type": "OPERATING"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/regulatory-data</con:originalUri><con:assertion type="JsonPath Match" id="0bdf3106-1d34-4154-8755-b41d714c1c04" name="ValidationResponse"><con:configuration><path>.regulatoryDataCollection.dataCollectionStatus</path><content>[DATA_INCOMPLETE]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>passenger-id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Regulatory Data Collection_Primary" id="beb881cc-5a88-41af-8425-0f30e046ed89"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="restrequest" name="Data_Collection" id="fb92cd1f-960d-44ec-be79-5a4566349315"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/regulatory-data" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Data_Collection" id="0f94da8f-5813-4dac-bf1d-6ab663561928" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522058319692_9698"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522058319792"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522058319792"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522058319692_9698"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522058319792_9698"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "regulatoryData":    {
      "purposeOfVisit": {"value": "TOURIST"},
      "segment": [      {
         "flight":          {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#date_1}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#flightNumber}",
      "type": "OPERATING"
         },
         "primaryDocument": [         {
            "dateOfBirth": {"value": "1981-06-21"},
            "lastName": {"value": "TESTONE"},
            "countryOfIssue": {"value": "GB"},
            "documentFeatures":             {
               "biometricPassport": {"value": "TRUE"},
               "machineReadable": {"value": "FALSE"}
            },
            "nationality": {"value": "GB"},
            "expiryDate": {"value": "2019-04-19"},
            "gender": {"value": "MALE"},
            "multipleNamesOnPassportRole": {"value": "BEARER"},
            "number": {"value": "GBA21654945"},
            "givenName": {"value": "paxone"},
            "type": {"value": "PASSPORT"}
         }],
         "secondaryData": {"visa":          {
            "countryOfIssue": {"value": "GB"},
            "validForCountry": {"value": "US"},
            "expiryDate": {"value": "2019-04-19"},
            "number": {"value": "GBA21654945"}
         }},
         "destinationAddress":          {
            "streetAndNumber": {"value": "TRANSIT"},
            "postalCode": {"value": "99999"},
            "state": {"value": "NJ"},
            "city": {"value": "NEW YORK"}
         },
         "secureFlightData":          {
            "redressNumber": {"value": "123456789"},
            "knownTravellerNumber": {"value": "123456789"},
            "secureFlightPassengerData":             {
               "lastName": {"value": "TESTONE"},
               "gender": {"value": "MALE"},
               "birthDay": {"value": "1981-06-21"},
               "givenName": {"value": "paxone"}
            }
         }
      }],
      "countryOfResidence": {"value": "GB"}
   },
   "identification": {"passengerId": "${TCProperties#PassengerID}"},
   "bound": {"flight": [   {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#date_1}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#flightNumber}",
      "type": "OPERATING"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/regulatory-data</con:originalUri><con:assertion type="JsonPath Match" id="fc36bbb3-6daf-4f6b-b1be-8dd6fb2b0e0a" name="VerifyResponse"><con:configuration><path>.regulatoryDataCollection.dataCollectionStatus</path><content>[DATA_COMPLETE]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>passenger-id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Regulatory Data Collection_Secondary" id="0026da24-041a-4bc4-af8d-10ca07e7b7d9"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="7faffaa3-cd19-4768-b202-3e883fe40bc5"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522058319692_9698"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522058319802"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522058319802"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LH}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522058319692_9698"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522058319802_9698"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#PassengerID}"},
      "bound": {"flight": [      {
                    "airlineCode": "${TCProperties#airlineCode}",
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"departureDate": "${TCProperties#date_1}",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#flightNumber}",
				"type": "OPERATING"
      }]}
   }]},
   "action": "ACCEPTANCE"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="14dae960-b034-4cee-9550-0d16e240f597"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>14760</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property></con:properties></con:testCase><con:testCase id="9140235f-578c-44e1-a70d-96f323d0c1b4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D10.F014.S002.O22.T002_Check In_Regulatory Data Collection_Single Passenger_Single Segment_LX" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="0c4c58e0-302c-470f-99ee-5bc9203865f4" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="5641b8e5-0503-4d41-9513-e8f38c1406a8"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LX_A-FRA_MKI-K_CH</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2017-10-20</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>JFK</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value/></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value/></con:property><con:property><con:name>Number_of_Infants</con:name><con:value/></con:property><con:property><con:name>Cabin</con:name><con:value>Business</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>520000A3LBI60007</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>date_1</con:name><con:value>2018-05-29</con:value></con:property><con:property><con:name>date_2</con:name><con:value>2018-06-05</con:value></con:property><con:property><con:name>passengerFirstName</con:name><con:value>paxone</con:value></con:property><con:property><con:name>passengerLastName</con:name><con:value>TESTONE</con:value></con:property><con:property><con:name>bookingReference</con:name><con:value>LOEOZI</con:value></con:property><con:property><con:name>PassengerID</con:name><con:value>2301CAE300006A22</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LX</con:value></con:property><con:property><con:name>flightNumber</con:name><con:value>16</con:value></con:property><con:property><con:name>userSessionId_LX</con:name><con:value>5b0baf1a86c56b62f88116b3</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="TransferProperties" id="2103b617-cb06-4a0b-9ab2-7088282f2eee"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>userSessionID</con:name><con:value>5b0baf1a86c56b62f88116b3</con:value></con:property><con:property><con:name>itineraryPriceRef_1</con:name><con:value>/air/search/5b0baf1b86c56b62f88116b4/itinerary-prices/1_1</con:value></con:property><con:property><con:name>itineraryPriceRef_2</con:name><con:value/></con:property><con:property><con:name>offerRef</con:name><con:value>/offers/5b0baf2086c56b62f88116db</con:value></con:property><con:property><con:name>m_offerRef_ID</con:name><con:value>/merchandizing/58d12b05d6abab5f3c182a65/offers/ANCILLARYAIR_1</con:value></con:property><con:property><con:name>formOfPayment</con:name><con:value>/fulfillment/methods/5b0baf2a86c56b62f88116dd/payment-forms/CREDITCARD/1</con:value></con:property><con:property><con:name>cardType</con:name><con:value>/fulfillment/methods/5b0baf2a86c56b62f88116dd/payment-forms/CREDITCARD/1/payment-card-types/MC</con:value></con:property><con:property><con:name>allocationRef</con:name><con:value>/fulfillment/methods/5b0baf2a86c56b62f88116dd/payment-allocations/1</con:value></con:property><con:property><con:name>optionAllocationRef</con:name><con:value>/fulfillment/methods/5b0baf2a86c56b62f88116dd/payment-allocations/1/option-allocations/2</con:value></con:property><con:property><con:name>air_amount</con:name><con:value>2916.1</con:value></con:property><con:property><con:name>m_offerRef</con:name><con:value>/offers/58d12b06d6abab5f3c182a67</con:value></con:property><con:property><con:name>m_travelerCompositionUri</con:name><con:value>/offers/58d12b06d6abab5f3c182a67/ancillaryair/traveler-compositions/0</con:value></con:property><con:property><con:name>travelerCompositionUri</con:name><con:value>/offers/5b0baf2086c56b62f88116db/air/traveler-compositions/0</con:value></con:property><con:property><con:name>reservationRef</con:name><con:value>/reservations/A000001032</con:value></con:property><con:property><con:name>paymentRef</con:name><con:value/></con:property><con:property><con:name>offerRef1</con:name><con:value>/offers/5b0baf2086c56b62f88116db</con:value></con:property><con:property><con:name>travelerCompositionUri1</con:name><con:value>/offers/5a1e72552d888909d152aeed/air/traveler-compositions/1</con:value></con:property><con:property><con:name>Currency</con:name><con:value>CHF</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Travel Date" id="df84ad81-1878-4f96-b7d0-49656f03bcd0"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 0
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[1]/*:origin/@*:date", flightDate_ob_s1);
//testRunner.testCase.testSuite.setPropertyValue("date_1", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("date_1", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("date_2", flightDate_ib_s1);

//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml);</script></con:config></con:testStep><con:testStep type="restrequest" name="Air_Search" id="a29e679b-a4e4-4559-a037-f7044f1c3ccc"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Search" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false" timeout=""><con:description>Call POST /air/lfs to get tinerary price reference with LX, One way Domestic flight for one adult  and no cabin as input</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524550333443_5346"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524550333501"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524550333501"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524550333443_5346"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524550333500_5346"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "languageCode": "${TCProperties#language}",
    "originDestination": [
        {
            "origin": {
                "date": "${TCProperties#date_1}",
                "windowBefore": "0",
                "windowAfter": "0",
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Origin}"
                }
            },
            "destination": {
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Destination}"
                }
            }
        }
    ],
    "travelerComposition": [
        {
            "count": "${TCProperties#Number_of_Adults}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/ADT"
            }
        }
        
        
    ],
    "pos": "${TCProperties#POS}",
    "preferences": {
        "cabin": {
            "cabinRef": {
                "uri": "/info/air/cabin-classes/${TCProperties#Cabin}"
            }
        }
    }
}
</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f56d4c53-af85-43bf-90a7-5bf1a91421f2" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c971de40-b89e-45fa-834a-3855f135ce0c" name="JsonPath Count - No Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="803cd1e9-3a86-4f64-bea8-02c34b958368" name="JsonPath Existence Match - ItineraryPriceRef"><con:configuration><path>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2758936c-e002-49fe-b1f0-359382509cf2" name="Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8d233546-71cc-478d-a6b2-92f29f5b7697" name="Script Assertion 3"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ItineraryPriceRef" id="d874e801-4470-4190-9e90-b7898d59b556"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>itineraryPriceRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>.search.itineraryPrice[0].uri</con:sourcePath><con:targetType>itineraryPriceRef_1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userSessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionID</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Air_Price" id="d3c558ce-1b13-439e-9d78-0a9ff0a033c1"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/price" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Price" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/price to get Offer URI</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524550333443_5346"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524550333534"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524550333534"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524550333443_5346"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524550333533_5346"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{     "userSessionId": "${TransferProperties#userSessionID}",     
	"languageCode": "${TCProperties#language}",
	"itineraryPriceRQ": {         
		"price": "true",         
		"itineraryPriceRef": [            
		{                 
			"uri": "${TransferProperties#itineraryPriceRef_1}"             
			} 
			]     },     
			"pos": "${TCProperties#POS}" }
			</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66918970-0946-42b3-88f9-c78fda3f2310" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="a423a547-5b8d-4063-8b9a-d2444abccab4" name="JsonPath Count - NoErrors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b689c70d-bcdc-47b2-adea-5b0f534b3dd3" name="JsonPath Existence Match - OfferRef"><con:configuration><path>$.offer[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="20c6818a-5902-4150-8911-9f7f5ae8649a" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_OfferRef" id="8e7b487e-cab9-441d-8e92-1688f96cc7e8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerCompositionUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[0]</con:sourcePath><con:targetType>travelerCompositionUri</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>travelerComposition1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[2]</con:sourcePath><con:targetType>travelerCompositionUri1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Reservation_Post" id="2940df04-382f-4de2-8d4f-be6c5a17050d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/reservations" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reservation_Post" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524550333443_5346"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524550333549"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524550333548"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524550333443_5346"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524550333548_5346"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"userSessionId": "${TransferProperties#userSessionID}",
	"pos": "${TCProperties#POS}",
	"traveler": [
		{
			"customer": true,
			"dateOfBirth": "1981-06-21+00:00",
			"gender": "M",
			"id": 0,
			"uri": "/travelers/0",
			"name": {
				"first": "${TCProperties#passengerFirstName}",
				"last": "${TCProperties#passengerLastName}",
				"titleRef": {
					"id": "MR",
					"uri": "/info/traveler-name-titles/MR"
				}
			},
			"email": {
				"address": "arsenio.organojr@datalex.com",
				"default": true,
				"id": 1,
				"uri": "/travelers/0/emails/1",
				"typeRef": {
					"id": "1.EAT",
					"uri": "/info/email-types/1.EAT"
				}
			},
			"phone": {
				"default": true,
				"id": 1,
				"number": "01234567",
				"uri": "/travelers/0/phones/1",
				"typeRef": {
					"id": "5.PUT",
					"uri": "/info/phone-types/5.PUT"
				}
			},
			"address": {
				"addressLine1": "TRANSIT",
				"city": "NEW YORK",
				"countryCode": "US",
				"postalCode": "77845",
				"default": true,
				"id": 1,
				"stateCode": "NJ",
				"uri": "/travelers/0/addresses/1",
				"typeRef": {
					"id": "7.AUT",
					"uri": "/info/address-types/7.AUT"
				}
			},
			"FOID": {
                                                                "dateOfBirth": "1981-06-21+00:00",
                                                                "gender": "M",
                                                                "lastName": "${TCProperties#passengerLastName}",
                                                                "firstName": "${TCProperties#passengerFirstName}",
                                                                "id": 1,
                                                                "typeRef": {
                                                                                "id": "2.DOC",
                                                                                "uri": "/info/foid-types/2.DOC"
                                                                },
                                                                "expiryDate": "2019-04-19+03:00",
                                                                "number": 456987,
                                                                "applicableCountry": "US",
                                                                "issuingLocation": "FRA",
                                                                "effectiveDate": "1999-05-29+03:00",
                                                                "uri": "/travelers/0/forms-of-identification/1"
                                                },
			"typeRef": {
				"id": "ADT",
				"uri": "/info/traveler-types/AIR/ADT"
			},
			"citizenship": {
				"countryRef": {
					"id": "US",
					"uri": "/geo/countries/US"
				}
			}
		}

	],
	"item": [
		{
			"book": true,
			"offerRef": {
				"uri": "${TransferProperties#offerRef1}"
			}
		}
	],
	"travelerAssignment": [
		{
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri}"
			},
			"travelerRef": {
				"uri": "/travelers/0"
			}
		}
	]
} </con:request><con:originalUri>http://10.160.6.148/tdprest-2/api/reservation</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c9d5b6d0-156a-40bc-aed3-f931f2096fab" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="57898c12-aaae-4bcb-86d6-deaad57c6349" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="955f0a2f-3f2a-45ce-880d-1256e35792a1" name="JsonPath Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="267c181b-0d35-4260-8521-74000c582e14" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bdf765b2-8675-4508-a42e-b527a8325b7b" name="JsonPath Match" disabled="true"><con:configuration><path>$.reservation.status</path><content>BOOKED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ReservationRef" id="bda1aa0c-7bc3-4689-b5fa-fe6a837a08b7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>reservationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Reservation_Post</con:sourceStep><con:sourcePath>$.reservation.uri</con:sourcePath><con:targetType>reservationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Methods" id="6ac2215f-b04e-4ac9-9bb3-992b2da36c86"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/tdprest-2/api/fulfillment/methods" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Methods" id="c71f685c-8bb6-417f-9e46-bbffbe66f544" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524550333443_5346"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524550333566"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524550333566"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524550333443_5346"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524550333565_5346"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"userSessionId": "${Properties#usersession}",
		"languageCode": "en",
		"pos": "${TCProperties#POS}",
		"userSessionId": "${TransferProperties#userSessionID}",
		"reservationRef": {
			"uri": "${TransferProperties#reservationRef}"
		}
	}</con:request><con:originalUri>http://localhost/fulfillment/methods</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f4911e4e-8cde-4acb-9cd5-32c46e76441b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="eef435b3-daaf-4ffe-9489-ee43b6150fec" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="46d611a1-663b-42ae-bb1b-f7ac275764c4" name="JsonPath Count  Warnings"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3c9f471a-5103-4d9d-84d2-e53d8845487d" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fae0e08b-4a8f-4256-920b-61956baf26fe" name="JsonPath Existence Match"><con:configuration><path>$.fulfillmentMethod.paymentForm..id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_FOP_Data" id="933ddd81-9c7c-4ff5-beaf-3f9ce2caa134"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>formOfPayment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].uri[0]</con:sourcePath><con:targetType>formOfPayment</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cardType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentCard.type[?(@.id=='MC')].uri[0]</con:sourcePath><con:targetType>cardType</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>allocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation[0].paymentAllocationRef.uri</con:sourcePath><con:targetType>allocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>optionAllocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation.optionAllocationRef.uri[0]</con:sourcePath><con:targetType>optionAllocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>air_amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.amount</con:sourcePath><con:targetType>air_amount</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Currency</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.currency</con:sourcePath><con:targetType>Currency</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Orders" id="e165e8ac-1c4e-40e1-ba71-d1176dce921a"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/fulfillment/orders" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Orders" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524550333443_5346"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524550333580"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524550333580"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524550333443_5346"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524550333580_5346"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"application": {
"wrapCallback": false,
"callback": [
{
"type": "COMPLETE",
"url": "http://57.20.104.193:29443/PaymentHub/post"
}, {
"type": "FAILURE",
"url": "http://errorurl.com"
}, {
"type": "CANCEL",
"url": "http://cancelurl.com"
}
],
"browserInfo": {
"acceptHeader": "application/xml",
"userAgent": "Java/1.8.0_101"
}
},

	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"paymentDetails": {
		"id": 1,
		"uri": "/payment-details/1",
		"customerRef": {
			"uri": "${TransferProperties#reservationRef}/customers/1"
		},
		"paymentFormRef": {
			"uri": "${TransferProperties#formOfPayment}"
		},
		"paymentCard": {
			"number": "${TCProperties#Token number}",
			"expiryDate": "2018-12-31",
			"holderName": "Paul Ziert",
			"issuingCountry": "CA",
			"typeRef": {
				"uri": "${TransferProperties#cardType}"
			},
			"securityCode": 123,
			"billingAddressRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/addresses/1"
			},
			"phoneRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/phones/1"
			},
			"emailRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/emails/1"
			}
		}
	},
	"payment": {
		"allocationRef": {
			"uri": "${TransferProperties#allocationRef}"
		},
		"option": {
			"detailsRef": {
				"uri": "/payment-details/1"
			},
			"allocationRef": {
				"uri": "${TransferProperties#optionAllocationRef}"
			},
			"value": {
				"money": {
					"amount":"${TransferProperties#air_amount}",
					"currency": "${TransferProperties#Currency}"
				}
			}
		}
	}
}</con:request><con:originalUri>http://localhost/tdprest-2/api/fulfillment/orders</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="867da589-56f7-4d9e-9dd2-675187865f9a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fec7caae-1863-471e-bb22-396c480f9b54" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="b17fbd0a-19d1-4ed3-898a-9f44c5cd0a63" name="JsonPath Count  Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d5881854-0cad-42da-b102-0bc61b80f12b" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ec69b593-94aa-4f8d-9892-916149e75e0d" name="JsonPath Match"><con:configuration><path>$.order.item..fulfillmentStatus</path><content>[READY]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bd8e94ea-19c5-404f-8497-621563614dd3" name="JsonPath Match 1"><con:configuration><path>$.reservation.status</path><content>TICKETED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer PNR" id="0292121e-5403-4933-90ea-04e69e542c3d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PNR</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation..bookingReference.value[0]</con:sourcePath><con:targetType>bookingReference</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>FirstName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.traveler.name..first[0]</con:sourcePath><con:targetType>passengerFirstName</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LastName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.traveler.name..last[0]</con:sourcePath><con:targetType>passengerLastName</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AirlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.item.air.itinerary.originDestination.flightSegment.operatingAirlineRef.id[0]</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UserSessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionId_LX</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data-Retrieval" id="901a4cac-a591-4ff8-b703-0dfeb779c471"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data-Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524550333443_5346"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524550333595"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524550333594"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524550333443_5346"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524550333593_5346"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#passengerLastName}",

          "passengerFirstName": "${TCProperties#passengerFirstName}",

          "bookingReference": "${TCProperties#bookingReference}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#airlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="b062e8df-2f09-468b-b3c1-136bf35616a7" name="VerifyResponse"><con:configuration><path>.passengerSearch.passenger.regulatoryDataCollectionStatus</path><content>[DATA_INCOMPLETE]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retrieval" id="363a795c-1fa8-4b50-b05a-b92e8af5c981"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Regulatory_Data" id="7c57fc65-2e60-49f0-a9ea-51c2cfbe3d71"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>lastName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerLastName</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.identification.passengerLastName</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.identification.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>depatureaiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>arrivalAiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>flightNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Requlatory_Data_Collection" id="92a71bac-3766-411c-ac67-07e5edd96322"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/regulatory-data" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Requlatory_Data_Collection" id="0f94da8f-5813-4dac-bf1d-6ab663561928" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524550333443_5346_5"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524550333613"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524550333612"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524550333443_5346"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524550333611_5346"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"identification": {
		"passengerId": "${TCProperties#PassengerID}"
	},
	"bound": {
		"flight": [
			{
				"airlineCode": "${TCProperties#airlineCode}",
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"departureDate": "${TCProperties#date_1}",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#flightNumber}",
				"type": "OPERATING"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/regulatory-data</con:originalUri><con:assertion type="JsonPath Match" id="0bdf3106-1d34-4154-8755-b41d714c1c04" name="ValidationResponse"><con:configuration><path>.regulatoryDataCollection.dataCollectionStatus</path><content>[DATA_INCOMPLETE]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>passenger-id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Regulatory Data Collection_Status" id="bd244bb7-4837-426b-895d-8e173ba1a478"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Primary_Data" id="c0d661bc-8508-4cc0-b3c8-0f1223551f29"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.passengerId[0]</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightnumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>flightNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureData</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>date_1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureAiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Outbound_Origin</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalAirport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Outbound_Destination</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Requlatory_Data_Collection</con:sourceStep><con:sourcePath>.regulatoryDataCollectionStatus.regulatoryData.segment[0].flight.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Data_Collection</con:targetStep><con:targetPath>.regulatoryData.segment[0].flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightnumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Requlatory_Data_Collection</con:sourceStep><con:sourcePath>.regulatoryDataCollectionStatus.regulatoryData.segment[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Data_Collection</con:targetStep><con:targetPath>.regulatoryData.segment[0].flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureData2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Requlatory_Data_Collection</con:sourceStep><con:sourcePath>.regulatoryDataCollectionStatus.regulatoryData.segment[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Data_Collection</con:targetStep><con:targetPath>.regulatoryData.segment[0].flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureAiport2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Requlatory_Data_Collection</con:sourceStep><con:sourcePath>.regulatoryDataCollectionStatus.regulatoryData.segment[0].flight.departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Data_Collection</con:targetStep><con:targetPath>.regulatoryData.segment[0].flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Data_Collection_Primary" id="d3b66e31-9f49-4eb5-a483-7c59e4fb74da"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/regulatory-data" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Data_Collection_Primary" id="0f94da8f-5813-4dac-bf1d-6ab663561928" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524550333443_5346"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524550333627"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524550333627"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524550333443_5346"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524550333626_5346"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "regulatoryData":    {
      "purposeOfVisit": {"value": "TOURIST"},
      "segment": [      {
         "flight":          {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#date_1}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#flightNumber}",
      "type": "OPERATING"
         },
         "primaryDocument": [         {
            "dateOfBirth": {"value": "1981-06-21"},
            "lastName": {"value": "TESTONE"},
            "countryOfIssue": {"value": "GB"},
            "documentFeatures":             {
               "biometricPassport": {"value": "TRUE"},
               "machineReadable": {"value": "FALSE"}
            },
            "nationality": {"value": "GB"},
            "expiryDate": {"value": "2019-04-19"},
            "gender": {"value": "MALE"},
            "multipleNamesOnPassportRole": {"value": "BEARER"},
            "number": {"value": "GBA216549"},
            "givenName": {"value": "paxone"},
            "type": {"value": "PASSPORT"}
         }],
         "secureFlightData":          {
            "redressNumber": {"value": "323456789"},
            "knownTravellerNumber": {"value": "523456789"},
            "secureFlightPassengerData":             {
               "lastName": {"value": "TESTONE"},
               "gender": {"value": "MALE"},
               "birthDay": {"value": "1981-06-21"},
               "givenName": {"value": "paxone"}
            }
         }
      }],
      "countryOfResidence": {"value": "GB"}
   },
   "identification": {"passengerId": "${TCProperties#PassengerID}"},
   "bound": {"flight": [   {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#date_1}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#flightNumber}",
      "type": "OPERATING"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/regulatory-data</con:originalUri><con:assertion type="JsonPath Match" id="fc36bbb3-6daf-4f6b-b1be-8dd6fb2b0e0a" name="VerifyResponse"><con:configuration><path>.regulatoryDataCollection.dataCollectionStatus</path><content>[DATA_INCOMPLETE]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>passenger-id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Regulatory Data Collection_Primary" id="63363018-ca2f-46e4-9d08-309835d352ce"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Secondary_Data" id="3914c5cb-b0f8-41c4-8261-8850e9200a23" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>lastName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerLastName</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.identification.passengerLastName</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.identification.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>depatureaiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>arrivalAiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>flightNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Data_Collection_Secondary" id="85a32fa5-1e1a-4b72-a98a-2cf8ca74c5bc"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/regulatory-data" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Data_Collection_Secondary" id="0f94da8f-5813-4dac-bf1d-6ab663561928" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524550333443_5346"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524550333641"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524550333640"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524550333443_5346"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524550333640_5346"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "regulatoryData":    {
      "purposeOfVisit": {"value": "TOURIST"},
      "segment": [      {
         "flight":          {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#date_1}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#flightNumber}",
      "type": "OPERATING"
         },
         "primaryDocument": [         {
            "dateOfBirth": {"value": "1981-06-21"},
            "lastName": {"value": "TESTONE"},
            "countryOfIssue": {"value": "GB"},
            "documentFeatures":             {
               "biometricPassport": {"value": "TRUE"},
               "machineReadable": {"value": "FALSE"}
            },
            "nationality": {"value": "GB"},
            "expiryDate": {"value": "2019-04-19"},
            "gender": {"value": "MALE"},
            "multipleNamesOnPassportRole": {"value": "BEARER"},
            "number": {"value": "GBA21654945"},
            "givenName": {"value": "paxone"},
            "type": {"value": "PASSPORT"}
         }],
         "secondaryData": {"visa":          {
            "countryOfIssue": {"value": "GB"},
            "validForCountry": {"value": "US"},
            "expiryDate": {"value": "2019-04-19"},
            "number": {"value": "GBA21654945"}
         }},
         "destinationAddress":          {
            "streetAndNumber": {"value": "TRANSIT"},
            "postalCode": {"value": "99999"},
            "state": {"value": "NJ"},
            "city": {"value": "NEW YORK"}
         },
         "secureFlightData":          {
            "redressNumber": {"value": "123456789"},
            "knownTravellerNumber": {"value": "123456789"},
            "secureFlightPassengerData":             {
               "lastName": {"value": "TESTONE"},
               "gender": {"value": "MALE"},
               "birthDay": {"value": "1981-06-21"},
               "givenName": {"value": "paxone"}
            }
         }
      }],
      "countryOfResidence": {"value": "GB"}
   },
   "identification": {"passengerId": "${TCProperties#PassengerID}"},
   "bound": {"flight": [   {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#date_1}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#flightNumber}",
      "type": "OPERATING"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/regulatory-data</con:originalUri><con:assertion type="JsonPath Match" id="fc36bbb3-6daf-4f6b-b1be-8dd6fb2b0e0a" name="VerifyResponse"><con:configuration><path>.regulatoryDataCollection.dataCollectionStatus</path><content>[DATA_COMPLETE]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>passenger-id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Regulatory Data Collection_Secondary" id="d1e63b20-6329-4c61-ad3e-7a6954d83e55"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="b094af8f-5ca9-4217-9615-d43b03cf987b"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524550333443_5346_3"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524550333654"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524550333654"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_LX}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524550333443_5346"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524550333653_5346"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#PassengerID}"},
      "bound": {"flight": [      {
                    "airlineCode": "${TCProperties#airlineCode}",
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"departureDate": "${TCProperties#date_1}",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#flightNumber}",
				"type": "OPERATING"
      }]}
   }]},
   "action": "ACCEPTANCE"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="6c590272-fa96-4bdb-94be-77594f267b51"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>14771</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property></con:properties></con:testCase><con:testCase id="85ebe4b0-8af6-411f-af15-fcf1c845d1ac" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D10.F014.S002.O22.T003_Check In_Regulatory Data Collection_Single Passenger_Single Segment_OS" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="8ed5363d-de69-46fe-8784-dc59d695d336" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="b4fbcd0e-d0cd-4c7a-a61c-18c27fa12eff"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>OS_A-FRA_MKI-K_DE</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2017-10-20</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>VIE</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>JFK</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value/></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value/></con:property><con:property><con:name>Number_of_Infants</con:name><con:value/></con:property><con:property><con:name>Cabin</con:name><con:value>Business</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>520000A3LBI60007</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>date_1</con:name><con:value>2018-05-28</con:value></con:property><con:property><con:name>date_2</con:name><con:value>2018-06-04</con:value></con:property><con:property><con:name>passengerFirstName</con:name><con:value>paxone</con:value></con:property><con:property><con:name>passengerLastName</con:name><con:value>TESTONE</con:value></con:property><con:property><con:name>bookingReference</con:name><con:value>LOG4XU</con:value></con:property><con:property><con:name>PassengerID</con:name><con:value>2301CAE300006B57</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>OS</con:value></con:property><con:property><con:name>flightNumber</con:name><con:value>87</con:value></con:property><con:property><con:name>userSessionId_OS</con:name><con:value>5b0bb1c386c56b62f88117ab</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="TransferProperties" id="22da824f-35dc-45e9-99ea-4aecc63cc535"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>userSessionID</con:name><con:value>5b0bb1c386c56b62f88117ab</con:value></con:property><con:property><con:name>itineraryPriceRef_1</con:name><con:value>/air/search/5b0bb1df86c56b62f88117b7/itinerary-prices/1_1</con:value></con:property><con:property><con:name>itineraryPriceRef_2</con:name><con:value/></con:property><con:property><con:name>offerRef</con:name><con:value>/offers/5b0bb1e986c56b62f88117df</con:value></con:property><con:property><con:name>m_offerRef_ID</con:name><con:value>/merchandizing/58d12b05d6abab5f3c182a65/offers/ANCILLARYAIR_1</con:value></con:property><con:property><con:name>formOfPayment</con:name><con:value>/fulfillment/methods/5b0bb22b86c56b62f88117f1/payment-forms/CREDITCARD/1</con:value></con:property><con:property><con:name>cardType</con:name><con:value>/fulfillment/methods/5b0bb22b86c56b62f88117f1/payment-forms/CREDITCARD/1/payment-card-types/MC</con:value></con:property><con:property><con:name>allocationRef</con:name><con:value>/fulfillment/methods/5b0bb22b86c56b62f88117f1/payment-allocations/1</con:value></con:property><con:property><con:name>optionAllocationRef</con:name><con:value>/fulfillment/methods/5b0bb22b86c56b62f88117f1/payment-allocations/1/option-allocations/3</con:value></con:property><con:property><con:name>air_amount</con:name><con:value>2650.18</con:value></con:property><con:property><con:name>m_offerRef</con:name><con:value>/offers/58d12b06d6abab5f3c182a67</con:value></con:property><con:property><con:name>m_travelerCompositionUri</con:name><con:value>/offers/58d12b06d6abab5f3c182a67/ancillaryair/traveler-compositions/0</con:value></con:property><con:property><con:name>travelerCompositionUri</con:name><con:value>/offers/5b0bb1e986c56b62f88117df/air/traveler-compositions/0</con:value></con:property><con:property><con:name>reservationRef</con:name><con:value>/reservations/A000001035</con:value></con:property><con:property><con:name>paymentRef</con:name><con:value/></con:property><con:property><con:name>offerRef1</con:name><con:value>/offers/5b0bb1e986c56b62f88117df</con:value></con:property><con:property><con:name>travelerCompositionUri1</con:name><con:value>/offers/5a1e72552d888909d152aeed/air/traveler-compositions/1</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Travel Date" id="9a93fc4c-d270-43d8-881c-bcd5bd1818ae"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 0
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[1]/*:origin/@*:date", flightDate_ob_s1);
//testRunner.testCase.testSuite.setPropertyValue("date_1", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("date_1", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("date_2", flightDate_ib_s1);

//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml);</script></con:config></con:testStep><con:testStep type="restrequest" name="Air_Search" id="2f6ac8ef-854f-47a8-967b-4a5913fc488c"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Search" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000"><con:description>Call POST /air/lfs to get tinerary price reference with LX, One way Domestic flight for one adult  and no cabin as input</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519730763439_2312"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519730763517"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519730763517"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519730763439_2312"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519730763517_2312"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "languageCode": "${TCProperties#language}",
    "originDestination": [
        {
            "origin": {
                "date": "${TCProperties#date_1}",
                "windowBefore": "0",
                "windowAfter": "0",
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Origin}"
                }
            },
            "destination": {
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Destination}"
                }
            }
        }
    ],
    "travelerComposition": [
        {
            "count": "${TCProperties#Number_of_Adults}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/ADT"
            }
        }
        
        
    ],
    "pos": "${TCProperties#POS}",
    "preferences": {
        "cabin": {
            "cabinRef": {
                "uri": "/info/air/cabin-classes/${TCProperties#Cabin}"
            }
        }
    }
}
</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f56d4c53-af85-43bf-90a7-5bf1a91421f2" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c971de40-b89e-45fa-834a-3855f135ce0c" name="JsonPath Count - No Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="803cd1e9-3a86-4f64-bea8-02c34b958368" name="JsonPath Existence Match - ItineraryPriceRef"><con:configuration><path>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2758936c-e002-49fe-b1f0-359382509cf2" name="Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8d233546-71cc-478d-a6b2-92f29f5b7697" name="Script Assertion 3"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ItineraryPriceRef" id="7d34b7d6-111d-4c34-8c2e-175ad1687c0e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>itineraryPriceRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>.search.itineraryPrice[0].uri</con:sourcePath><con:targetType>itineraryPriceRef_1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userSessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionID</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Air_Price" id="90e9aee1-cf45-4cab-aa04-9059f23960d5"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/price" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Price" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/price to get Offer URI</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519730763439_2312"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519730763548"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519730763548"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519730763439_2312"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519730763548_2312"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{     "userSessionId": "${TransferProperties#userSessionID}",     
	"languageCode": "${TCProperties#language}",
	"itineraryPriceRQ": {         
		"price": "true",         
		"itineraryPriceRef": [            
		{                 
			"uri": "${TransferProperties#itineraryPriceRef_1}"             
			} 
			]     },     
			"pos": "${TCProperties#POS}" }
			</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66918970-0946-42b3-88f9-c78fda3f2310" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="a423a547-5b8d-4063-8b9a-d2444abccab4" name="JsonPath Count - NoErrors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b689c70d-bcdc-47b2-adea-5b0f534b3dd3" name="JsonPath Existence Match - OfferRef"><con:configuration><path>$.offer[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="20c6818a-5902-4150-8911-9f7f5ae8649a" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_OfferRef" id="1f6862cc-4146-4012-9fcd-32eaa546575e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerCompositionUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[0]</con:sourcePath><con:targetType>travelerCompositionUri</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>travelerComposition1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[2]</con:sourcePath><con:targetType>travelerCompositionUri1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Reservation_Post" id="980294ac-2690-4ec2-b993-9410a9db4e7b"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/reservations" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reservation_Post" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519730763439_2312"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519730763564"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519730763564"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519730763439_2312"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519730763564_2312"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"userSessionId": "${TransferProperties#userSessionID}",
	"pos": "${TCProperties#POS}",
	"traveler": [
		{
			"customer": true,
			"dateOfBirth": "1981-06-21+00:00",
			"gender": "M",
			"id": 0,
			"uri": "/travelers/0",
			"name": {
				"first": "${TCProperties#passengerFirstName}",
				"last": "${TCProperties#passengerLastName}",
				"titleRef": {
					"id": "MR",
					"uri": "/info/traveler-name-titles/MR"
				}
			},
			"email": {
				"address": "arsenio.organojr@datalex.com",
				"default": true,
				"id": 1,
				"uri": "/travelers/0/emails/1",
				"typeRef": {
					"id": "1.EAT",
					"uri": "/info/email-types/1.EAT"
				}
			},
			"phone": {
				"default": true,
				"id": 1,
				"number": "01234567",
				"uri": "/travelers/0/phones/1",
				"typeRef": {
					"id": "5.PUT",
					"uri": "/info/phone-types/5.PUT"
				}
			},
			"address": {
				"addressLine1": "TRANSIT",
				"city": "NEW YORK",
				"countryCode": "US",
				"postalCode": "77845",
				"default": true,
				"id": 1,
				"stateCode": "NJ",
				"uri": "/travelers/0/addresses/1",
				"typeRef": {
					"id": "7.AUT",
					"uri": "/info/address-types/7.AUT"
				}
			},
			"FOID": {
                                                                "dateOfBirth": "1981-06-21+00:00",
                                                                "gender": "M",
                                                                "lastName": "${TCProperties#passengerLastName}",
                                                                "firstName": "${TCProperties#passengerFirstName}",
                                                                "id": 1,
                                                                "typeRef": {
                                                                                "id": "2.DOC",
                                                                                "uri": "/info/foid-types/2.DOC"
                                                                },
                                                                "expiryDate": "2019-04-19+03:00",
                                                                "number": 456987,
                                                                "applicableCountry": "US",
                                                                "issuingLocation": "FRA",
                                                                "effectiveDate": "1999-05-29+03:00",
                                                                "uri": "/travelers/0/forms-of-identification/1"
                                                },
			"typeRef": {
				"id": "ADT",
				"uri": "/info/traveler-types/AIR/ADT"
			},
			"citizenship": {
				"countryRef": {
					"id": "US",
					"uri": "/geo/countries/US"
				}
			}
		}

	],
	"item": [
		{
			"book": true,
			"offerRef": {
				"uri": "${TransferProperties#offerRef1}"
			}
		}
	],
	"travelerAssignment": [
		{
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri}"
			},
			"travelerRef": {
				"uri": "/travelers/0"
			}
		}
	]
} </con:request><con:originalUri>http://10.160.6.148/tdprest-2/api/reservation</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c9d5b6d0-156a-40bc-aed3-f931f2096fab" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="57898c12-aaae-4bcb-86d6-deaad57c6349" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="955f0a2f-3f2a-45ce-880d-1256e35792a1" name="JsonPath Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="267c181b-0d35-4260-8521-74000c582e14" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bdf765b2-8675-4508-a42e-b527a8325b7b" name="JsonPath Match"><con:configuration><path>$.reservation.status</path><content>BOOKED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ReservationRef" id="a3defc7a-8f40-4db0-be94-f2bb669bb4cc"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>reservationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Reservation_Post</con:sourceStep><con:sourcePath>$.reservation.uri</con:sourcePath><con:targetType>reservationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Methods" id="5997cb03-0461-406b-9b09-b41676b34c19"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/tdprest-2/api/fulfillment/methods" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Methods" id="c71f685c-8bb6-417f-9e46-bbffbe66f544" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519730763439_2312"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519730763580"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519730763580"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519730763439_2312"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519730763580_2312"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"userSessionId": "${Properties#usersession}",
  "accept": "application/json;charset=UTF-8",
  "contentType": "application/json;charset=UTF-8",
		"languageCode": "en",
		"pos": "${TCProperties#POS}",
		"userSessionId": "${TransferProperties#userSessionID}",
		"reservationRef": {
			"uri": "${TransferProperties#reservationRef}",
			"xsi:type": "ns2:ReferenceType"
		}
	}</con:request><con:originalUri>http://localhost/fulfillment/methods</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f4911e4e-8cde-4acb-9cd5-32c46e76441b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="eef435b3-daaf-4ffe-9489-ee43b6150fec" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="46d611a1-663b-42ae-bb1b-f7ac275764c4" name="JsonPath Count  Warnings"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3c9f471a-5103-4d9d-84d2-e53d8845487d" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fae0e08b-4a8f-4256-920b-61956baf26fe" name="JsonPath Existence Match"><con:configuration><path>$.fulfillmentMethod.paymentForm..id</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_FOP_Data" id="bc22449e-55a4-48f7-968e-a3c8bf25910b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>formOfPayment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].uri[0]</con:sourcePath><con:targetType>formOfPayment</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cardType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentCard.type[?(@.id=='MC')].uri[0]</con:sourcePath><con:targetType>cardType</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>allocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation[0].paymentAllocationRef.uri</con:sourcePath><con:targetType>allocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>optionAllocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation.optionAllocationRef.uri[0]</con:sourcePath><con:targetType>optionAllocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>air_amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.amount</con:sourcePath><con:targetType>air_amount</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Currency</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.currency</con:sourcePath><con:targetType>Currency</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Orders" id="7ae54a9c-a6c2-4853-8750-b21bf10ed26a"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/fulfillment/orders" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Orders" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519730763439_2312"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519730763595"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519730763595"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519730763439_2312"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519730763595_2312"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"application": {
"wrapCallback": false,
"callback": [
{
"type": "COMPLETE",
"url": "http://57.20.104.193:29443/PaymentHub/post"
}, {
"type": "FAILURE",
"url": "http://errorurl.com"
}, {
"type": "CANCEL",
"url": "http://cancelurl.com"
}
],
"browserInfo": {
"acceptHeader": "application/xml",
"userAgent": "Java/1.8.0_101"
}
},

	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"paymentDetails": {
		"id": 1,
		"uri": "/payment-details/1",
		"customerRef": {
			"uri": "${TransferProperties#reservationRef}/customers/1"
		},
		"paymentFormRef": {
			"uri": "${TransferProperties#formOfPayment}"
		},
		"paymentCard": {
			"number": "${TCProperties#Token number}",
			"expiryDate": "2018-12-31",
			"holderName": "Paul Ziert",
			"issuingCountry": "CA",
			"typeRef": {
				"uri": "${TransferProperties#cardType}"
			},
			"securityCode": 123,
			"billingAddressRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/addresses/1"
			},
			"phoneRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/phones/1"
			},
			"emailRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/emails/1"
			}
		}
	},
	"payment": {
		"allocationRef": {
			"uri": "${TransferProperties#allocationRef}"
		},
		"option": {
			"detailsRef": {
				"uri": "/payment-details/1"
			},
			"allocationRef": {
				"uri": "${TransferProperties#optionAllocationRef}"
			},
			"value": {
				"money": {
					"amount":"${TransferProperties#air_amount}",
					"currency": "${TransferProperties#Currency}"
				}
			}
		}
	}
}</con:request><con:originalUri>http://localhost/tdprest-2/api/fulfillment/orders</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="867da589-56f7-4d9e-9dd2-675187865f9a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fec7caae-1863-471e-bb22-396c480f9b54" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="b17fbd0a-19d1-4ed3-898a-9f44c5cd0a63" name="JsonPath Count  Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d5881854-0cad-42da-b102-0bc61b80f12b" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ec69b593-94aa-4f8d-9892-916149e75e0d" name="JsonPath Match"><con:configuration><path>$.order.item..fulfillmentStatus</path><content>[READY]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bd8e94ea-19c5-404f-8497-621563614dd3" name="JsonPath Match 1"><con:configuration><path>$.reservation.status</path><content>TICKETED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer PNR" id="50910b0d-d907-41b4-9945-1322ad5acd40"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PNR</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation..bookingReference.value[0]</con:sourcePath><con:targetType>bookingReference</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>FirstName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.traveler.name..first[0]</con:sourcePath><con:targetType>passengerFirstName</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>LastName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.traveler.name..last[0]</con:sourcePath><con:targetType>passengerLastName</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.item.air.itinerary.originDestination.flightSegment.operatingAirlineRef.id[0]</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>XPATH</con:type><con:targetTransferType>XPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionId_OS</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data-Retrieval" id="9e3da806-5065-4a02-8867-db3f4e850a3a"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data-Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519730763439_2312"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519730763626"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519730763626"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519730763439_2312"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519730763626_2312"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#passengerLastName}",

          "passengerFirstName": "${TCProperties#passengerFirstName}",

          "bookingReference": "${TCProperties#bookingReference}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#airlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="b062e8df-2f09-468b-b3c1-136bf35616a7" name="VerifyResponse"><con:configuration><path>.passengerSearch.passenger.regulatoryDataCollectionStatus</path><content>[DATA_INCOMPLETE]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Data Retrieval" id="1a7c3a1c-1a55-49fd-9e94-878b7d0364ee"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Regulatory_Data" id="abea1c49-6109-4c10-9a8f-3a5ff89be257"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>lastName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerLastName</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.identification.passengerLastName</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.identification.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>depatureaiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>arrivalAiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>flightNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Requlatory_Data_Collection" id="d12dc20b-827d-4d0c-a861-57c4f761bea6"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/regulatory-data" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Requlatory_Data_Collection" id="0f94da8f-5813-4dac-bf1d-6ab663561928" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519730763439_2312"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519730763642"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519730763642"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519730763439_2312"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519730763642_2312"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"identification": {
		"passengerId": "${TCProperties#PassengerID}"
	},
	"bound": {
		"flight": [
			{
				"airlineCode": "${TCProperties#airlineCode}",
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"departureDate": "${TCProperties#date_1}",
				"type": "OPERATING",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#flightNumber}"
			}
		]
	}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/regulatory-data</con:originalUri><con:assertion type="JsonPath Match" id="0bdf3106-1d34-4154-8755-b41d714c1c04" name="ValidationResponse"><con:configuration><path>.regulatoryDataCollection.dataCollectionStatus</path><content>[DATA_INCOMPLETE]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>passenger-id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Regularory Data Collection_Status" id="08993874-bada-49ef-8fd8-c261be7c023d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Primary_Data" id="41172d78-ab96-45e2-b900-ad21efb54088"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>lastName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerLastName</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.identification.passengerLastName</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.identification.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>depatureaiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>arrivalAiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>flightNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Data_Collection_Primary" id="3cf08acd-448a-4b75-b877-f81d87a8c426"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/regulatory-data" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Data_Collection_Primary" id="0f94da8f-5813-4dac-bf1d-6ab663561928" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519730763439_2312"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519730763658"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519730763658"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519730763439_2312"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519730763658_2312"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "regulatoryData":    {
      "purposeOfVisit": {"value": "TOURIST"},
      "segment": [      {
         "flight":          {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#date_1}",
      "type": "OPERATING",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#flightNumber}"
         },
         "primaryDocument": [         {
            "dateOfBirth": {"value": "1981-06-21"},
            "lastName": {"value": "TESTONE"},
            "countryOfIssue": {"value": "GB"},
            "documentFeatures":             {
               "biometricPassport": {"value": "TRUE"},
               "machineReadable": {"value": "FALSE"}
            },
            "nationality": {"value": "GB"},
            "expiryDate": {"value": "2019-04-19"},
            "gender": {"value": "MALE"},
            "multipleNamesOnPassportRole": {"value": "BEARER"},
            "number": {"value": "GBA216549"},
            "givenName": {"value": "Barun"},
            "type": {"value": "PASSPORT"}
         }],
         "secureFlightData":          {
            "redressNumber": {"value": "323456789"},
            "knownTravellerNumber": {"value": "523456789"},
            "secureFlightPassengerData":             {
               "lastName": {"value": "TESTONE"},
               "gender": {"value": "MALE"},
               "birthDay": {"value": "1981-06-21"},
               "givenName": {"value": "Barun"}
            }
         }
      }],
      "countryOfResidence": {"value": "GB"}
   },
   "identification": {"passengerId": "${TCProperties#PassengerID}"},
   "bound": {"flight": [   {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#date_1}",
      "type": "OPERATING",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#flightNumber}"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/regulatory-data</con:originalUri><con:assertion type="JsonPath Match" id="fc36bbb3-6daf-4f6b-b1be-8dd6fb2b0e0a" name="VerifyResponse"><con:configuration><path>.regulatoryDataCollection.dataCollectionStatus</path><content>[DATA_INCOMPLETE]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>passenger-id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Regularory Data Collection_Primary" id="e68e32aa-9dc4-4626-9db8-f04912b77fd6"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="transfer" name="Secondary_Data" id="54fa3dbc-3b2d-42bd-a05d-cad4e129e5d7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>PassengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>lastName</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.passengerLastName</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.identification.passengerLastName</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.identification.bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>depatureaiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>arrivalAiport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Requlatory_Data_Collection</con:targetStep><con:targetPath>.flights.flight[0].arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data-Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>flightNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Data_Collection_Secondary" id="108f34fd-c3bf-4ba1-bc22-4e626409da59"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/regulatory-data" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Data_Collection_Secondary" id="0f94da8f-5813-4dac-bf1d-6ab663561928" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519730763439_2312"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519730763673"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519730763673"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519730763439_2312"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519730763673_2312"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "regulatoryData":    {
      "purposeOfVisit": {"value": "TOURIST"},
      "segment": [      {
         "flight":          {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#date_1}",
      "type": "OPERATING",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#flightNumber}"
         },
         "primaryDocument": [         {
            "dateOfBirth": {"value": "1981-06-21"},
            "lastName": {"value": "TESTONE"},
            "countryOfIssue": {"value": "GB"},
            "documentFeatures":             {
               "biometricPassport": {"value": "TRUE"},
               "machineReadable": {"value": "FALSE"}
            },
            "nationality": {"value": "GB"},
            "expiryDate": {"value": "2019-04-19"},
            "gender": {"value": "MALE"},
            "multipleNamesOnPassportRole": {"value": "BEARER"},
            "number": {"value": "GBA21654945"},
            "givenName": {"value": "paxone"},
            "type": {"value": "PASSPORT"}
         }],
         "secondaryData": {"visa":          {
            "countryOfIssue": {"value": "GB"},
            "validForCountry": {"value": "US"},
            "expiryDate": {"value": "2019-04-19"},
            "number": {"value": "GBA21654945"}
         }},
         "destinationAddress":          {
            "streetAndNumber": {"value": "TRANSIT"},
            "postalCode": {"value": "99999"},
            "state": {"value": "NJ"},
            "city": {"value": "NEW YORK"}
         },
         "secureFlightData":          {
            "redressNumber": {"value": "123456789"},
            "knownTravellerNumber": {"value": "123456789"},
            "secureFlightPassengerData":             {
               "lastName": {"value": "TESTONE"},
               "gender": {"value": "MALE"},
               "birthDay": {"value": "1981-06-21"},
               "givenName": {"value": "paxone"}
            }
         }
      }],
      "countryOfResidence": {"value": "GB"}
   },
   "identification": {"passengerId": "${TCProperties#PassengerID}"},
   "bound": {"flight": [   {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#date_1}",
      "type": "OPERATING",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#flightNumber}"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/regulatory-data</con:originalUri><con:assertion type="JsonPath Match" id="fc36bbb3-6daf-4f6b-b1be-8dd6fb2b0e0a" name="VerifyResponse"><con:configuration><path>.regulatoryDataCollection.dataCollectionStatus</path><content>[DATA_COMPLETE]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>passenger-id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Regularory Data Collection_Secondary" id="e82e1e02-5e90-426a-a026-45bf98aaaa18"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="16a5b527-f532-4b8d-8554-f3550fd93f30"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519730763439_2312"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519730763689"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519730763689"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#userSessionId_OS}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519730763439_2312"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519730763689_2312"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#PassengerID}"},
      "bound": {"flight": [      {
                    "airlineCode": "${TCProperties#airlineCode}",
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"departureDate": "${TCProperties#date_1}",
				"type": "OPERATING",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#flightNumber}"
      }]}
   }]},
   "action": "ACCEPTANCE"
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture_Passenger Acceptance" id="2b220f0a-475f-4385-8d1f-c73030df4355"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>14772</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property></con:properties></con:testCase><con:testCase id="3a31445d-0de4-4671-8c8d-4b341797d571" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Copy of D07.S001.O15.T004_OS_ OW_1ADT+1INF_Domestic_Business" searchProperties="true" disabled="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="43ef553e-8ed5-48da-880d-4c8d2ebc041f"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt


//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")
headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="0964b608-d405-4059-a64b-9faf3583d689"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>OS_A-FRA_MKI-K_AT</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2017-11-15</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>VIE</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>INN</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value>2017-11-12</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value>INN</con:value></con:property><con:property><con:name>Inbound_Destination</con:name><con:value>VIE</con:value></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Infants</con:name><con:value>1</con:value></con:property><con:property><con:name>Cabin</con:name><con:value>Business</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>520000A3LBI60007</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>UNRQD3</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="TransferProperties" id="3b32770f-ca30-4ad6-8621-0ee99bd567c4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>userSessionID</con:name><con:value>5a0a930f2d8889202931718f</con:value></con:property><con:property><con:name>itineraryPriceRef_1</con:name><con:value>/air/search/5a0a930f2d88892029317190/itinerary-prices/2_3</con:value></con:property><con:property><con:name>itineraryPriceRef_2</con:name><con:value/></con:property><con:property><con:name>offerRef</con:name><con:value>/offers/5a0a93122d88892029317196</con:value></con:property><con:property><con:name>m_offerRef_ID</con:name><con:value>/merchandizing/58d12b05d6abab5f3c182a65/offers/ANCILLARYAIR_1</con:value></con:property><con:property><con:name>formOfPayment</con:name><con:value>/fulfillment/methods/5a0a931e2d888920293171b6/payment-forms/CREDITCARD</con:value></con:property><con:property><con:name>cardType</con:name><con:value>/fulfillment/methods/5a0a931e2d888920293171b6/payment-forms/CREDITCARD/payment-card-types/MC</con:value></con:property><con:property><con:name>allocationRef</con:name><con:value>/fulfillment/methods/5a0a931e2d888920293171b6/payment-allocations/1</con:value></con:property><con:property><con:name>optionAllocationRef</con:name><con:value>/fulfillment/methods/5a0a931e2d888920293171b6/payment-allocations/1/option-allocations/3</con:value></con:property><con:property><con:name>air_amount</con:name><con:value>308.83</con:value></con:property><con:property><con:name>m_offerRef</con:name><con:value>/offers/58d12b06d6abab5f3c182a67</con:value></con:property><con:property><con:name>m_travelerCompositionUri</con:name><con:value>/offers/58d12b06d6abab5f3c182a67/ancillaryair/traveler-compositions/0</con:value></con:property><con:property><con:name>travelerCompositionUri</con:name><con:value>/offers/5a0a93122d88892029317196/air/traveler-compositions/0</con:value></con:property><con:property><con:name>reservationRef</con:name><con:value>/reservations/A000001072</con:value></con:property><con:property><con:name>paymentRef</con:name><con:value/></con:property><con:property><con:name>offerRef1</con:name><con:value>/offers/5a0a93122d88892029317196</con:value></con:property><con:property><con:name>travelerCompositionUri1</con:name><con:value>/offers/59fab7a72d8889431723b712/air/traveler-compositions/1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Air_Search" id="11a3c480-d93f-4e69-8834-0956750354b5"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Search" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/lfs to get tinerary price reference with LX, One way Domestic flight for one adult  and no cabin as input</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510642447550_1369"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510642447597"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510642447597"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510642447550_1369"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510642447597_1369"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "languageCode": "${TCProperties#language}",
    "originDestination": [
        {
            "origin": {
                "date": "${TCProperties#Outbound_Date}",
                "windowBefore": "0",
                "windowAfter": "0",
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Origin}"
                }
            },
            "destination": {
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Destination}"
                }
            }
        }
    ],
    "travelerComposition": [
        {
            "count": "${TCProperties#Number_of_Adults}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/ADT"
            }
        }
     
        
    ],
    "pos": "${TCProperties#POS}",
    "preferences": {
        "cabin": {
            "cabinRef": {
                "uri": "/info/air/cabin-classes/${TCProperties#Cabin}"
            }
        }
    }
}
</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f56d4c53-af85-43bf-90a7-5bf1a91421f2" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c971de40-b89e-45fa-834a-3855f135ce0c" name="JsonPath Count - No Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="803cd1e9-3a86-4f64-bea8-02c34b958368" name="JsonPath Existence Match - ItineraryPriceRef"><con:configuration><path>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c5bda1e5-eb7f-432b-a24b-4b5af8750553" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ItineraryPriceRef" id="0b48a90b-3a1d-4bf6-aeb6-af39eb495996"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>itineraryPriceRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.search.itineraryPrice[2].uri</con:sourcePath><con:targetType>itineraryPriceRef_1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userSessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionID</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Air_Price" id="5a31b08a-b7e6-4bfa-8880-8d472223222f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/price" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Price" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/price to get Offer URI</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510642447550_1369"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510642447628"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510642447628"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510642447550_1369"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510642447628_1369"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{     "userSessionId": "${TransferProperties#userSessionID}",     
	"languageCode": "${TCProperties#language}",
	"itineraryPriceRQ": {         
		"price": "true",         
		"itineraryPriceRef": [            
		{                 
			"uri": "${TransferProperties#itineraryPriceRef_1}"             
			} 
			]     },     
			"pos": "${TCProperties#POS}" }
			</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66918970-0946-42b3-88f9-c78fda3f2310" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="a423a547-5b8d-4063-8b9a-d2444abccab4" name="JsonPath Count - NoErrors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b689c70d-bcdc-47b2-adea-5b0f534b3dd3" name="JsonPath Existence Match - OfferRef"><con:configuration><path>$.offer[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50035a9c-117a-4d7d-a33d-c4b65d52f45a" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_OfferRef" id="27c01ff0-c79d-4d32-9755-43e56b3422ea"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerCompositionUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[0]</con:sourcePath><con:targetType>travelerCompositionUri</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false" disabled="true"><con:name>travelerComposition1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[2]</con:sourcePath><con:targetType>travelerCompositionUri1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Reservation_Post" id="66895cfe-2f13-403f-9b5b-59f2091f3149"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/reservations" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reservation_Post" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510642447550_1369"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510642447644"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510642447644"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510642447550_1369"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510642447644_1369"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"traveler": [
		{
			"uri": "/travelers/0",
			"id": "0",
			"dateOfBirth": "1977-07-20-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "Kuno",
				"last": "Keineahnung",
				"titleRef": {
					"uri": "/info/traveler-name-titles/MR",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/1",
					"id": "1",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/1.EAT",
						"id": "1.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"postalCode":"90210",
					"stateCode": "OH",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/ADT",
				"id": "ADT"
			}
		}
	],
	"item": [
		{
			"book": true,
			"offerRef": {
				"uri": "${TransferProperties#offerRef}"
			}
		}
	],
	"travelerAssignment": [
		{
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri}"
			},
			"travelerRef": {
				"uri": "/travelers/0"
			}
		}
	]
}</con:request><con:originalUri>http://10.160.6.148/tdprest-2/api/reservation</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c9d5b6d0-156a-40bc-aed3-f931f2096fab" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="57898c12-aaae-4bcb-86d6-deaad57c6349" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="955f0a2f-3f2a-45ce-880d-1256e35792a1" name="JsonPath Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c3e940cf-2fd0-4790-bfaa-da95a95ec858" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6351486d-acf7-4d47-8f9d-293c597882bb" name="JsonPath Match"><con:configuration><path>$.reservation.status</path><content>BOOKED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ReservationRef" id="ffb452d1-51ea-412a-93e0-22a6ae8fac5b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>reservationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Reservation_Post</con:sourceStep><con:sourcePath>$.reservation.uri</con:sourcePath><con:targetType>reservationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Methods" id="7fa625df-7f87-4c69-8ad3-d0267623b703"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/tdprest-2/api/fulfillment/methods" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Methods" id="c71f685c-8bb6-417f-9e46-bbffbe66f544" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510642447550_1369"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510642447660"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510642447660"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510642447550_1369"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510642447660_1369"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"reservationRef": {
		"uri": "${TransferProperties#reservationRef}"
	}
}</con:request><con:originalUri>http://localhost/fulfillment/methods</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f4911e4e-8cde-4acb-9cd5-32c46e76441b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="eef435b3-daaf-4ffe-9489-ee43b6150fec" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="46d611a1-663b-42ae-bb1b-f7ac275764c4" name="JsonPath Count  Warnings"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="cb70a136-f3d2-4cd5-a2c6-bd5263055c34" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_FOP_Data" id="3cf93ae1-8481-49c6-ae00-e0a2735e03f9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>formOfPayment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].uri[0]</con:sourcePath><con:targetType>formOfPayment</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cardType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentCard.type[?(@.id=='MC')].uri[0]</con:sourcePath><con:targetType>cardType</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>allocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation[0].paymentAllocationRef.uri</con:sourcePath><con:targetType>allocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>optionAllocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.id=='CREDITCARD')].paymentAllocation.optionAllocation.optionAllocationRef.uri[0]</con:sourcePath><con:targetType>optionAllocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>air_amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.amount</con:sourcePath><con:targetType>air_amount</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Orders" id="5f40e98b-eb28-40e0-a3e5-fb9d21b6c18d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/fulfillment/orders" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Orders" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510642447550_1369"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510642447675"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510642447675"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510642447550_1369"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510642447675_1369"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"application": {
"wrapCallback": false,
"callback": [
{
"type": "COMPLETE",
"url": "http://57.20.104.193:29443/PaymentHub/post"
}, {
"type": "FAILURE",
"url": "http://errorurl.com"
}, {
"type": "CANCEL",
"url": "http://cancelurl.com"
}
],
"browserInfo": {
"acceptHeader": "application/xml",
"userAgent": "Java/1.8.0_101"
}
},

	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"paymentDetails": {
		"id": 1,
		"uri": "/payment-details/1",
		"customerRef": {
			"uri": "${TransferProperties#reservationRef}/customers/1"
		},
		"paymentFormRef": {
			"uri": "${TransferProperties#formOfPayment}"
		},
		"paymentCard": {
			"number": "${TCProperties#Token number}",
			"expiryDate": "2018-12-31",
			"holderName": "Paul Ziert",
			"issuingCountry": "CA",
			"typeRef": {
				"uri": "${TransferProperties#cardType}"
			},
			"securityCode": 123,
			"billingAddressRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/addresses/1"
			},
			"phoneRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/phones/1"
			},
			"emailRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/emails/1"
			}
		}
	},
	"payment": {
		"allocationRef": {
			"uri": "${TransferProperties#allocationRef}"
		},
		"option": {
			"detailsRef": {
				"uri": "/payment-details/1"
			},
			"allocationRef": {
				"uri": "${TransferProperties#optionAllocationRef}"
			},
			"value": {
				"money": {
					"amount":"${TransferProperties#air_amount}",
					"currency": "EUR"
				}
			}
		}
	}
}</con:request><con:originalUri>http://localhost/tdprest-2/api/fulfillment/orders</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="867da589-56f7-4d9e-9dd2-675187865f9a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fec7caae-1863-471e-bb22-396c480f9b54" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="b17fbd0a-19d1-4ed3-898a-9f44c5cd0a63" name="JsonPath Count  Warnings"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="80954d56-3688-4a9e-88e2-87e9d7b9fb6b" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6d66d694-8bd1-4ba0-96e5-f1d24a9ff32f" name="JsonPath Match"><con:configuration><path>$.reservation.status</path><content>TICKETED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="71635f35-f7c5-4226-a7f6-1445622db350" name="JsonPath Match 1"><con:configuration><path>$.order.item..fulfillmentStatus</path><content>[READY]</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_PNR" id="6ad7ea1f-82e1-4f40-bdca-d6afb29ea259"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>pnr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation.item.bookingReference.value[0]</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture" id="41d7e1da-92ab-4846-b7d4-82302c05e069" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="3029ae80-b8a4-4283-bb69-12896740f340" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Copy of D09.F014.S002.O26.T001_Fulfill_CheckIn_ LH" searchProperties="true" disabled="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="fa10bab4-f834-439f-a884-680436896f1f"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt


//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")
headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="groovy" name="UpdateDate" id="1aee0a7d-982b-4212-9123-f2bfccf53dd2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);

//enter number of days to advance todays date
def days_in_advance = 1
//enter bumber of days of duration
def stay_duration = 7

//def secondRequest = testRunner.testCase.getTestStepByName("low fare search");
//property = secondRequest.getProperty("request");
//holder1 = groovyUtils.getXmlHolder(property.value);

//def flightDate = new Date.parse( "yyyy-MM-dd'T'HH:mm:ss", text ).with { new Date( time + 1000) }
def dateTimeFormat = "yyyy-MM-dd"
def timeZone = TimeZone.getTimeZone("Etc/GMT")
def dateTimeFormatter = new java.text.SimpleDateFormat(dateTimeFormat)
dateTimeFormatter.setTimeZone(timeZone)

// Outbound segement
def ob_s1 = Calendar.getInstance()
ob_s1.setTime(new Date())
ob_s1.add(Calendar.DATE, days_in_advance)

// Inbound segement
def ib_s1 = Calendar.getInstance()
ib_s1.setTime(new Date())
ib_s1.add(Calendar.DATE, ((days_in_advance+stay_duration)))

def flightDate_ob_s1 = dateTimeFormatter.format(ob_s1.getTime())
log.info("flightDate_ob_s1 = " + flightDate_ob_s1);
def flightDate_ib_s1 = dateTimeFormatter.format(ib_s1.getTime())
log.info("flightDate_ib_s1 = " + flightDate_ib_s1);

//Outbound Seg


testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Outbound_Date", flightDate_ob_s1);
testRunner.testCase.getTestStepByName("TCProperties").setPropertyValue("Inbound_Date", flightDate_ib_s1);
//Inbound Seg
//holder1.put("/*:airLowFareSearchRQ/*:originDestination[2]/*:origin/@*:date",, flightDate_ib_s1);

//log.info("property = " + property.value);
//property.setValue(holder1.prettyXml); </script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="a645025a-a46e-4b1e-ba22-cb03bb24cce5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH_A-FRA_MKI-K_DE</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2017-11-15</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>HAM</con:value></con:property><con:property><con:name>Inbound_Date</con:name><con:value>2017-11-22</con:value></con:property><con:property><con:name>Inbound_Origin</con:name><con:value/></con:property><con:property><con:name>Inbound_Destination</con:name><con:value/></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Infants</con:name><con:value>1</con:value></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>UNXGO5</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>Kuno</con:value></con:property><con:property><con:name>LastName</con:name><con:value>Keineahnung</con:value></con:property><con:property><con:name>FlightNumber</con:name><con:value>92</con:value></con:property><con:property><con:name>DateTime</con:name><con:value>2017-10-04</con:value></con:property><con:property><con:name>passengerID</con:name><con:value>2301CA2000008179FRA</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LH</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="TransferProperties" id="447fbf1e-cd51-4666-a559-223600b5337d"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>userSessionID</con:name><con:value>5a0ac2a22d88892029318010</con:value></con:property><con:property><con:name>itineraryPriceRef_1</con:name><con:value>/air/search/5a0ac2af2d88892029318011/itinerary-prices/1_1</con:value></con:property><con:property><con:name>itineraryPriceRef_2</con:name><con:value/></con:property><con:property><con:name>offerRef</con:name><con:value>/offers/5a0a9dfb2d88892029317664</con:value></con:property><con:property><con:name>m_offerRef_ID</con:name><con:value>/merchandizing/58d12b05d6abab5f3c182a65/offers/ANCILLARYAIR_1</con:value></con:property><con:property><con:name>formOfPayment</con:name><con:value>/fulfillment/methods/5a0a9e032d88892029317665/payment-forms/CREDITCARD</con:value></con:property><con:property><con:name>cardType</con:name><con:value>/fulfillment/methods/5a0a9e032d88892029317665/payment-forms/CREDITCARD/payment-card-types/VI</con:value></con:property><con:property><con:name>allocationRef</con:name><con:value>/fulfillment/methods/5a0a9e032d88892029317665/payment-allocations/1</con:value></con:property><con:property><con:name>optionAllocationRef</con:name><con:value>/fulfillment/methods/5a0a9e032d88892029317665/payment-allocations/1/option-allocations/4</con:value></con:property><con:property><con:name>air_amount</con:name><con:value>203.88</con:value></con:property><con:property><con:name>m_offerRef</con:name><con:value>/offers/58d12b06d6abab5f3c182a67</con:value></con:property><con:property><con:name>m_travelerCompositionUri</con:name><con:value>/offers/58d12b06d6abab5f3c182a67/ancillaryair/traveler-compositions/0</con:value></con:property><con:property><con:name>travelerCompositionUri</con:name><con:value>/offers/5a0a9dfb2d88892029317664/air/traveler-compositions/0</con:value></con:property><con:property><con:name>reservationRef</con:name><con:value>/reservations/A000001080</con:value></con:property><con:property><con:name>paymentRef</con:name><con:value/></con:property><con:property><con:name>offerRef1</con:name><con:value>/offers/5a0a9dfb2d88892029317664</con:value></con:property><con:property><con:name>travelerCompositionUri1</con:name><con:value>/offers/5a0a9dfb2d88892029317664/air/traveler-compositions/1</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Air_Search" id="9a5e3f96-4dd9-4bfc-af73-50539f8d8821"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/search" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Search" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false" timeout="6000000000000000000000000000"><con:description>Call POST /air/lfs to get tinerary price reference with LX, One way Domestic flight for one adult  and no cabin as input</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510645230136_9062"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510645230136"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510645230136"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510645230136_9062"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510645230136_9062"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "languageCode": "${TCProperties#language}",
    "originDestination": [
        {
            "origin": {
                "date": "${TCProperties#Outbound_Date}",
                "windowBefore": "0",
                "windowAfter": "0",
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Origin}"
                }
            },
            "destination": {
                "locationRef": {
                    "uri": "/geo/locations/A/${TCProperties#Outbound_Destination}"
                }
            }
        }
    ],
    "travelerComposition": [
        {
            "count": "${TCProperties#Number_of_Adults}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/ADT"
            }
        },
        
        {
            "count": "${TCProperties#Number_of_Children}",
            "typeRef": {
                "uri": "/info/traveler-types/AIR/CHD"
            }
        }
    ],
    "pos": "${TCProperties#POS}",
    "preferences": {
        "cabin": {
            "cabinRef": {
                "uri": "/info/air/cabin-classes/${TCProperties#Cabin}"
            }
        }
    }
}
</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f56d4c53-af85-43bf-90a7-5bf1a91421f2" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c971de40-b89e-45fa-834a-3855f135ce0c" name="JsonPath Count - No Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="803cd1e9-3a86-4f64-bea8-02c34b958368" name="JsonPath Existence Match - ItineraryPriceRef"><con:configuration><path>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2758936c-e002-49fe-b1f0-359382509cf2" name="Contains"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="8d233546-71cc-478d-a6b2-92f29f5b7697" name="Script Assertion 3"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ItineraryPriceRef" id="5beb40a6-c598-40c1-902b-8f750910ad6b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>itineraryPriceRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.search.recommendedOffer[0].itineraryPriceRef[0].uri</con:sourcePath><con:targetType>itineraryPriceRef_1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>userSessionID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Search</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>userSessionID</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Air_Price" id="77bbdc62-8572-4b18-8205-aff13e9de80e"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/air/price" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Air_Price" id="a4b4673d-8cfa-4bc2-8396-710f0fc52d07" mediaType="application/json" postQueryString="false"><con:description>Call POST /air/price to get Offer URI</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510645230136_9062"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510645230167"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510645230167"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510645230136_9062"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510645230167_9062"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{     "userSessionId": "${TransferProperties#userSessionID}",     
	"languageCode": "${TCProperties#language}",
	"itineraryPriceRQ": {         
		"price": "true",         
		"itineraryPriceRef": [            
		{                 
			"uri": "${TransferProperties#itineraryPriceRef_1}"             
			} 
			]     },     
			"pos": "${TCProperties#POS}" }
			</con:request><con:originalUri>http://localhost/tdprest-2/api/air/lfs</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="66918970-0946-42b3-88f9-c78fda3f2310" name="Valid HTTP Status Codes - HTTP-200"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="a423a547-5b8d-4063-8b9a-d2444abccab4" name="JsonPath Count - NoErrors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b689c70d-bcdc-47b2-adea-5b0f534b3dd3" name="JsonPath Existence Match - OfferRef"><con:configuration><path>$.offer[0].uri</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="20c6818a-5902-4150-8911-9f7f5ae8649a" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_OfferRef" id="94d6aa96-c044-4abd-a8a8-6fad2ab8ab01"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerCompositionUri</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[0]</con:sourcePath><con:targetType>travelerCompositionUri</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>offerRef1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer[0].uri</con:sourcePath><con:targetType>offerRef1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>travelerComposition1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Air_Price</con:sourceStep><con:sourcePath>$.offer..travelerComposition..uri[2]</con:sourcePath><con:targetType>travelerCompositionUri1</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Reservation_Post" id="1a82657b-c4b0-42f7-aed7-108ca911471b"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/reservations" methodName="Create" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Reservation_Post" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510645230136_9062"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510645230183"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510645230183"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510645230136_9062"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510645230183_9062"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"traveler": [
		{
			"uri": "/travelers/0",
			"id": "0",
			"dateOfBirth": "1977-07-20-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "${TCProperties#FirstName}",
				"last": "${TCProperties#LastName}",
				"titleRef": {
					"uri": "/info/traveler-name-titles/MR",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/1",
					"id": "1",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/1.EAT",
						"id": "1.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"stateCode": "ON",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/ADT",
				"id": "ADT"
			}
		}, {
			"uri": "/travelers/1",
			"id": "0",
			"dateOfBirth": "2011-04-21-03:00",
			"gender": "M",
			"customer": true,
			"name": {
				"first": "GC",
				"last": "Test",
				"titleRef": {
					"uri": "/info/traveler-name-titles/Master",
					"id": "MR"
				}
			},
			"email": [
				{
					"uri": "/travelers/0/emails/2",
					"id": "2",
					"address": "kuno@keineahnung.com",
					"default": true,
					"typeRef": {
						"uri": "/info/email-types/2.EAT",
						"id": "2.EAT"
					}
				}
			],
			"phone": [
				{
					"uri": "/travelers/0/phones/1",
					"id": "1",
					"number": "1234567275",
					"default": true,
					"typeRef": {
						"uri": "/info/phone-types/5.PUT",
						"id": "5.PUT"
					}
				}
			],
			"address": [
				{
					"uri": "/travelers/0/addresses/1",
					"id": "1",
					"addressLine1": "Aberdeen Avenue 1",
					"city": "Hamilton",
					"countryCode": "US",
					"stateCode": "ON",
					"default": true,
					"typeRef": {
						"uri": "/info/address-types/7.AUT",
						"id": "7.AUT"
					}
				}
			],
			
			"typeRef": {
				"uri": "/info/traveler-types/AIR/CHD",
				"id": "CHD"
			}
		}
	],
	"item": [
		{
			"book": true,
			"offerRef": {
				"uri": "${TransferProperties#offerRef}"
			}
		}
	],
	"travelerAssignment": [
		{
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri}"
			},
			"travelerRef": {
				"uri": "/travelers/0"
			}
		}, {
			"compositionRef": {
				"uri": "${TransferProperties#travelerCompositionUri1}"
			},
			"travelerRef": {
				"uri": "/travelers/1"
			}
		}
	]
}</con:request><con:originalUri>http://10.160.6.148/tdprest-2/api/reservation</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c9d5b6d0-156a-40bc-aed3-f931f2096fab" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="57898c12-aaae-4bcb-86d6-deaad57c6349" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="955f0a2f-3f2a-45ce-880d-1256e35792a1" name="JsonPath Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="267c181b-0d35-4260-8521-74000c582e14" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_ReservationRef" id="eeee70c6-c8c3-4288-bcda-30c3eb8d648e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>reservationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Reservation_Post</con:sourceStep><con:sourcePath>$.reservation.uri</con:sourcePath><con:targetType>reservationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Methods" id="4768051a-858f-4dcc-9931-51928729ae61"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/tdprest-2/api/fulfillment/methods" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Methods" id="c71f685c-8bb6-417f-9e46-bbffbe66f544" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510645230136_9062"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510645230198"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510645230198"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510645230136_9062"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510645230198_9062"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
	"languageCode": "${TCProperties#language}",
	"pos": "${#TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"reservationRef": {
		"uri": "${TransferProperties#reservationRef}"
	}
}</con:request><con:originalUri>http://localhost/fulfillment/methods</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f4911e4e-8cde-4acb-9cd5-32c46e76441b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="eef435b3-daaf-4ffe-9489-ee43b6150fec" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="46d611a1-663b-42ae-bb1b-f7ac275764c4" name="JsonPath Count  Warnings"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3c9f471a-5103-4d9d-84d2-e53d8845487d" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_FOP_Data" id="a30933c9-17c4-40f0-b29a-41c468b7e100"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>formOfPayment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].uri[0]</con:sourcePath><con:targetType>formOfPayment</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>cardType</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentCard.type[?(@.id=='VI')].uri[0]</con:sourcePath><con:targetType>cardType</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>allocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.code=='CREDITCARD')].paymentAllocation.optionAllocation[0].paymentAllocationRef.uri</con:sourcePath><con:targetType>allocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>optionAllocationRef</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentForm[?(@.id=='CREDITCARD')].paymentAllocation.optionAllocation.optionAllocationRef.uri[0]</con:sourcePath><con:targetType>optionAllocationRef</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>air_amount</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Methods</con:sourceStep><con:sourcePath>$.fulfillmentMethod.paymentAllocation[0].value.money.amount</con:sourcePath><con:targetType>air_amount</con:targetType><con:targetStep>TransferProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Fulfillment_Orders" id="558641f3-c2c4-4f0f-a652-0a17ef121e37"><con:settings/><con:config service="http://localhost:11180" resourcePath="/tdprest-2/api/fulfillment/orders" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Fulfillment_Orders" id="f4a9e094-3168-45ee-8311-f786a514151e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510645230136_9062"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510645230214"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510645230214"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510645230136_9062"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510645230214_9062"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
"application": {
"wrapCallback": false,
"callback": [
{
"type": "COMPLETE",
"url": "http://57.20.104.193:29443/PaymentHub/post"
}, {
"type": "FAILURE",
"url": "http://errorurl.com"
}, {
"type": "CANCEL",
"url": "http://cancelurl.com"
}
],
"browserInfo": {
"acceptHeader": "application/xml",
"userAgent": "Java/1.8.0_101"
}
},

	"languageCode": "${TCProperties#language}",
	"pos": "${#TCProperties#POS}",
	"userSessionId": "${TransferProperties#userSessionID}",
	"paymentDetails": {
		"id": 1,
		"uri": "/payment-details/1",
		"customerRef": {
			"uri": "${TransferProperties#reservationRef}/customers/1"
		},
		"paymentFormRef": {
			"uri": "${TransferProperties#formOfPayment}"
		},
		"paymentCard": {
			"number": "${TCProperties#Token number}",
			"expiryDate": "2018-12-31",
			"holderName": "Paul Ziert",
			"issuingCountry": "CA",
			"typeRef": {
				"uri": "${TransferProperties#cardType}"
			},
			"securityCode": 123,
			"billingAddressRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/addresses/1"
			},
			"phoneRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/phones/1"
			},
			"emailRef": {
				"uri": "${TransferProperties#reservationRef}/customers/1/emails/1"
			}
		}
	},
	"payment": {
		"allocationRef": {
			"uri": "${TransferProperties#allocationRef}"
		},
		"option": {
			"detailsRef": {
				"uri": "/payment-details/1"
			},
			"allocationRef": {
				"uri": "${TransferProperties#optionAllocationRef}"
			},
			"value": {
				"money": {
					"amount":"${TransferProperties#air_amount}",
					"currency": "EUR"
				}
			}
		}
	}
}</con:request><con:originalUri>http://localhost/tdprest-2/api/fulfillment/orders</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="867da589-56f7-4d9e-9dd2-675187865f9a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fec7caae-1863-471e-bb22-396c480f9b54" name="JsonPath Count Errors"><con:configuration><path>$.error</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="b17fbd0a-19d1-4ed3-898a-9f44c5cd0a63" name="JsonPath Count  Warnings" disabled="true"><con:configuration><path>$.warning</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="d5881854-0cad-42da-b102-0bc61b80f12b" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer_PNR" id="54f85b72-7fe8-4732-a436-e28e6f59b20c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>pnr</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Fulfillment_Orders</con:sourceStep><con:sourcePath>.reservation..bookingReference.value[1]</con:sourcePath><con:targetType>PNR</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval" id="1aba8b32-7c54-4e9e-923c-4ebac65732e7"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510645230136_9062"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510645230230"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510645230230"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510645230136_9062"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510645230230_9062"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>
	{
 "passengers": {
      "passenger": [{
        "passengerFirstName": "${TCProperties#FirstName}",
        "passengerLastName": "${TCProperties#LastName}",
        "bookingReference": "${TCProperties#PNR}",
        "flights": {
          "flight":[ {
            "departureAirport": "${TCProperties#Outbound_Origin}"
          }
]
        }
      }
                    ]
                      
 },
"resynch":"true"
    
  }


</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].flightDetails.status</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="passenger-last-name" value="Keineahnung" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_CheckIn_Request" id="4d4799de-9b55-413f-8a9b-95e5373e1f71"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>FlightNumber</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passangerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>passengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passanger_Acceptance" id="e39b9838-4ee6-40ed-af31-8d580e14e169"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passanger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false" timeout="600000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510645230136_9062"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510645230245"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510645230245"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510645230136_9062"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510645230245_9062"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "${TCProperties#FirstName}",
   "flights": {"flight": [   {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#Outbound_Date}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#FlightNumber}"
   }]},
   "passengerLastName": "${TCProperties#LastName}",
   "bookingReference": "${TCProperties#PNR}"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="368c4eb3-aa42-47ea-8567-5e30e5f73581" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="68c04cc8-b0ed-4a1b-9785-75f47fded778" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="manualTestStep" name="Manual TestStep-SeatAllocation" id="316df854-343c-492d-becd-b21312b6105f" disabled="true"><con:description>Seat avilability : We do n't ,what is the pattern for seat avilability.We are doing some randome seat for allocation.</con:description><con:settings/><con:config xsi:type="con:ManualTestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:testStep type="restrequest" name="Documnet Options" id="3e933d31-76ee-4728-9132-d9f0babaac30"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false" timeout="800000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510645230136_9062"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510645230261"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510645230261"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510645230136_9062"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510645230261_9062"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "${TCProperties#airlineCode}",
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "departureDate": "${TCProperties#Outbound_Date}",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "${TCProperties#FlightNumber}"
   }]},
   "identification": [{"passengerId": "${TCProperties#passengerID}"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documentOptions</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a2ffdc01-6628-4c15-9a95-c8539639c3f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a21dccfb-ca2f-4a10-b42d-48dd7ca2cdfe" name="Contains"><con:configuration><token>documentType</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="79c37386-98bb-446a-aed2-a53a9ba00f4d" name="JsonPath Count"><con:configuration><path>$.passengerDocumentOptions..documentOption.deliveryOption[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="ee266bb4-2e94-44a5-ae5e-dc126ff03b72" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>airline-code</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Passenger Seat" id="7dbcd23e-3e89-45b7-8ad5-0b437d24cb47" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/seats" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger Seat" id="4dfca63d-d5ae-4999-aafd-ed1027369b37" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510645230136_9062"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510645230276"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510645230276"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510645230136_9062"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510645230276_9062"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"seatHandling": {"seatOperation": [{
   "identification": {"passengerId": "${TCProperties#passengerID}"},
   "flightSeat": [   {
      "flight":       {
         "airlineCode": "${TCProperties#airlineCode}",
         "departureAirport": "${TCProperties#Outbound_Origin}",
         "departureDate": "${TCProperties#Outbound_Date}",
         "arrivalAirport": "${TCProperties#Outbound_Destination}",
         "flightNumber": "${TCProperties#FlightNumber}"
      },
      "seat": "20D"
      
   }]
}]}} </con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/seats</con:originalUri><con:assertion type="JsonPath Count" id="78dfb521-06ed-42d0-915b-69b0cf666f57" name="JsonPath Count"><con:configuration><path>$.seatOperation..flightSeats.seat[:1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="3755958d-6aec-4385-bdb8-dc7da1a4bbdc" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="SeatDeallocation" id="4fd6b9c4-516a-4385-8e8a-6ed990ae1ba9" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/seats" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="SeatDeallocation" id="4dfca63d-d5ae-4999-aafd-ed1027369b37" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510645230136_9062"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510645230292"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510645230292"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510645230136_9062"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510645230292_9062"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"seatHandling": {"seatOperation": [{
   "identification": {"passengerId": "2301DA0A000055D9FRA"},
   "flightSeat": [   {
      "seat": "20D",
      "flight":       {
         "departureAirport": "FRA",
         "airlineCode": "LH",
         "departureDate": "2017-10-24",
         "arrivalAirport": "MUC",
         "flightNumber": "4301"
      }
   }
   ]
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/seats</con:originalUri><con:assertion type="GroovyScriptAssertion" id="f43eea14-31f2-466f-8d3a-b6a6c37e56d9" name="Script Assertion"><con:configuration/></con:assertion><con:assertion type="Valid HTTP Status Codes" id="6a16334f-b3be-4a9b-a27e-4e020c65fb37" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Document Generation" id="21f9c312-ab5e-46f5-a63b-b8ac155a04c2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document Generation" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="80000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1510645230136_9062"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1510645230308"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1510645230308"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1510645230136_9062"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1510645230308_9062"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12897",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes": {"documentType": ["BOARDINGPASS"]},
         "flights": {"flight": [         {
            "airlineCode": "${TCProperties#airlineCode}",
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "departureDate": "${TCProperties#Outbound_Date}",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "${TCProperties#FlightNumber}"
         }]}
      }],
      "identification": {"passengerId": "${TCProperties#passengerID}"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="314837d2-a9ed-4689-9648-8a50bef7b5e2" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f9fce47-a691-40b8-8aef-3d6d10e7bc2b" name="JsonPath Match"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['checkinStatus']</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="7c60e1e6-8d02-4153-a9b5-dff61325ddec" name="Contains"><con:configuration><token>boardingPass</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e2235bab-5397-4c68-9740-1c5b582b749a" name="JsonPath Match 1"><con:configuration><path>$['document'][0]['passengerDocument'][0]['passengerData']['booking'][0]['segment'][0]['bookingStatus']</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="89590d2f-0955-49b7-bc46-b9a6bbf2b7dd" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="ReqResCapture" id="6b2253cd-abb7-4638-a657-b39c2f98e1ab"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
	
} 

log.info("thanks");</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value>Subject\Airline.com\Integration Test\Drop 9\DLX\REST\CheckIn</con:value></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value>Root\Integration Test\Drop 13\Regression 2\DLX\REST\CheckIn</con:value></con:property><con:property><con:name>QC_TestSet</con:name><con:value>CheckIn_E2E</con:value></con:property><con:property><con:name>Product</con:name><con:value/></con:property></con:properties></con:testSuite><con:testSuite id="455ac909-d0a7-4b35-afa9-9c4179680ce3" name="CheckIn_ServiceCall" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5709c99b-a29a-4d48-99da-f3dd3e23b123" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O32.T013_CheckIn_MultiLeg_Flight_Status_LH" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="98f3d10d-7fed-46e9-aeb5-18aa2a0d0efd" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="e41d00ff-e766-4324-a491-cab0bd10e015"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2018-05-30</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>JED</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>598</con:value></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Infants</con:name><con:value>1</con:value></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>KZSAYF</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>seat</con:name><con:value>15E</con:value></con:property><con:property><con:name>Outbound_Destination1</con:name><con:value>ADD</con:value></con:property><con:property><con:name>AirlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>Flight Number1</con:name><con:value>598</con:value></con:property><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b0cfe5486c56b7fcf4fc60f</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="5bd29573-8280-4c80-ab61-8529ed7994dd"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="be531543-4847-4890-90b7-969e75e4c4f7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Flight_Status" id="7ebec67d-70d4-439d-92b8-d70081cf8085"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/flights" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Flight_Status" id="516de7c6-4778-4671-93cb-9b9a381145c8" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522146252327_2088"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522146252374"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522146252374"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522146252327_2088"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522146252374_2088"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"flights": {
		"flight": [
			{
				"airlineCode": "${TCProperties#AirlineCode}",
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"departureDate": "${TCProperties#Outbound_Date}",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#Flight Number}",
				"type": "OPERATING"
			}, {
				"airlineCode": "${TCProperties#AirlineCode}",
				"departureAirport": "${TCProperties#Outbound_Destination}",
				"departureDate": "${TCProperties#Outbound_Date}",
				"arrivalAirport": "${TCProperties#Outbound_Destination1}",
				"flightNumber": "${TCProperties#Flight Number1}",
				"type": "OPERATING"
			}
		]
	}
}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/flights</con:originalUri><con:assertion type="JsonPath Match" id="f9739ed9-23df-42b5-ae2f-2a2701167893" name="VerifyFlightStatus 2st Segment"><con:configuration><path>.flightStatus[1].flightLeg[0].status</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="53cfbca5-77d3-4877-9ee6-9f84df785665" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9d91377a-94b4-4322-b8fc-28625838a9d3" name="VerifyFlightStatus 1st Segment"><con:configuration><path>.flightStatus[0].flightLeg[0].status</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>marketing-airline</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="185f9381-21f2-4191-81d3-74bdf67d6724"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>18529</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="7958e412-7b6e-4a79-aa66-fea7057b399e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O32.T014_CheckIn_MultiLeg_Flight_Status_LX" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="19fba0a4-7792-48e9-ab95-477db68a0129" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="1adc27bd-0762-4d3c-bdf5-168812a42c01"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2018-05-30</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>NBO</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>294</con:value></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Infants</con:name><con:value>1</con:value></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>KZR8FJ</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>seat</con:name><con:value>15E</con:value></con:property><con:property><con:name>Outbound_Destination1</con:name><con:value>DAR</con:value></con:property><con:property><con:name>AirlineCode</con:name><con:value>LX</con:value></con:property><con:property><con:name>Flight Number1</con:name><con:value>294</con:value></con:property><con:property><con:name>POS</con:name><con:value>LX</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b0cfeee86c56b7fcf4fc611</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="e7a6451f-eff9-4bfa-89e0-55ebf32ee506"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="2f383599-40ff-4e33-b27a-e3f2e31833e1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Flight_Status" id="2c982af8-8188-4465-bee9-c21e1a7fff1e"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/flights" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Flight_Status" id="516de7c6-4778-4671-93cb-9b9a381145c8" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522146252327_2088"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522146252374"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522146252374"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522146252327_2088"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522146252374_2088"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"flights": {
		"flight": [
			{
				"airlineCode": "${TCProperties#AirlineCode}",
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"departureDate": "${TCProperties#Outbound_Date}",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#Flight Number}",
				"type": "OPERATING"
			}, {
				"airlineCode": "${TCProperties#AirlineCode}",
				"departureAirport": "${TCProperties#Outbound_Destination}",
				"departureDate": "${TCProperties#Outbound_Date}",
				"arrivalAirport": "${TCProperties#Outbound_Destination1}",
				"flightNumber": "${TCProperties#Flight Number1}",
				"type": "OPERATING"
			}
		]
	}
}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/flights</con:originalUri><con:assertion type="JsonPath Match" id="f9739ed9-23df-42b5-ae2f-2a2701167893" name="VerifyFlightStatus 2st Segment"><con:configuration><path>.flightStatus[1].flightLeg[0].status</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="53cfbca5-77d3-4877-9ee6-9f84df785665" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9d91377a-94b4-4322-b8fc-28625838a9d3" name="VerifyFlightStatus 1st Segment"><con:configuration><path>.flightStatus[0].flightLeg[0].status</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>marketing-airline</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="6e65a95b-694c-4531-a1b5-c32d8da02861"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>9162</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="8689df30-949f-47e7-bb52-40a0beb3ea6d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O32.T015_CheckIn_MultiLeg_Flight_Status_OS" searchProperties="true"><con:description>Test case returns price information about Rail-and-Fly distinguished by 1st and 2nd class seats (RAIL_AND_FLY_FIRST_CLASS, RAIL_AND_FLY_SECOND_CLASS) for domestic flights</con:description><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="c76e11b1-7929-4c3d-994c-1a8b1325f46e" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LX")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="ea1e1197-e0dc-4a49-b813-b3fcac2311c3"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Date</con:name><con:value>2018-04-25</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>NBO</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>294</con:value></con:property><con:property><con:name>Number_of_Adults</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Children</con:name><con:value>1</con:value></con:property><con:property><con:name>Number_of_Infants</con:name><con:value>1</con:value></con:property><con:property><con:name>Cabin</con:name><con:value>Economy</con:value></con:property><con:property><con:name>touchpoint</con:name><con:value>ITINERARY_CONFIRMATION</con:value></con:property><con:property><con:name>Token number</con:name><con:value>454109A7SKO90010</con:value></con:property><con:property><con:name>ExpiryDate</con:name><con:value>2018-12-31</con:value></con:property><con:property><con:name>HolderName</con:name><con:value>Paul Ziert</con:value></con:property><con:property><con:name>IssuingCountry</con:name><con:value>CA</con:value></con:property><con:property><con:name>SecurityCode</con:name><con:value>123</con:value></con:property><con:property><con:name>Currency</con:name><con:value>EUR</con:value></con:property><con:property><con:name>PNR</con:name><con:value>NSWFM9</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>seat</con:name><con:value>15E</con:value></con:property><con:property><con:name>Outbound_Destination1</con:name><con:value>DAR</con:value></con:property><con:property><con:name>AirlineCode</con:name><con:value>LX</con:value></con:property><con:property><con:name>Flight Number1</con:name><con:value>294</con:value></con:property><con:property><con:name>POS</con:name><con:value>OS</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b0cff0d86c56b7fcf4fc612</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="6f12ee07-554d-4b5e-9615-fd8c920b0d4b"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="9a429f6f-6d3e-4459-b4c9-46f4bccf06b4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Flight_Status" id="3a0f6040-2790-4336-ba0a-35be2b95e6b4"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/flights" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Flight_Status" id="516de7c6-4778-4671-93cb-9b9a381145c8" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522146252327_2088"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522146252374"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522146252374"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522146252327_2088"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522146252374_2088"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"flights": {
		"flight": [
			{
				"airlineCode": "${TCProperties#AirlineCode}",
				"departureAirport": "${TCProperties#Outbound_Origin}",
				"departureDate": "${TCProperties#Outbound_Date}",
				"arrivalAirport": "${TCProperties#Outbound_Destination}",
				"flightNumber": "${TCProperties#Flight Number}",
				"type": "OPERATING"
			}, {
				"airlineCode": "${TCProperties#AirlineCode}",
				"departureAirport": "${TCProperties#Outbound_Destination}",
				"departureDate": "${TCProperties#Outbound_Date}",
				"arrivalAirport": "${TCProperties#Outbound_Destination1}",
				"flightNumber": "${TCProperties#Flight Number1}",
				"type": "OPERATING"
			}
		]
	}
}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/flights</con:originalUri><con:assertion type="JsonPath Match" id="f9739ed9-23df-42b5-ae2f-2a2701167893" name="VerifyFlightStatus 2st Segment"><con:configuration><path>.flightStatus[1].flightLeg[0].status</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="53cfbca5-77d3-4877-9ee6-9f84df785665" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="9d91377a-94b4-4322-b8fc-28625838a9d3" name="VerifyFlightStatus 1st Segment"><con:configuration><path>.flightStatus[0].flightLeg[0].status</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>marketing-airline</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>arrival-airport</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="9a550c74-2466-4d8f-958e-7603ba843d70"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:properties><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>QC_ID</con:name><con:value>13966</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="59c7717a-567a-4fc2-8011-75e06187a3f5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T016_CheckIn_SingleSegment_ Print Baggage Tag_LH" searchProperties="true" disabled="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Add_PNR_To_Request" id="a0e25123-598f-4ae6-a9d6-dec5b6804cda" disabled="true"><con:settings/><con:config><script>//get test case from other project or from the same one
project = testRunner.getTestCase().getTestSuite().getProject().getWorkspace().getProjectByName("ADC_CheckIn");
testSuite = project.getTestSuiteByName("OM_Flow");
testCase = testSuite.getTestCaseByName("PNR_Creation_SinglePassenger_SingleSegment")

//set properties if you need
//testRunner.testCase.setPropertyValue("airlineIdentifier",airlineIdentifier );
//testRunner.testCase.setPropertyValue(another_property_name, another_property_value);

// run test case
runner = testCase.run(new com.eviware.soapui.support.types.StringToObjectMap(), false);
def verificationIP = context.expand('${#Global#PNRValue}');


</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="08ecc4f8-ba07-455e-9bcf-f3b4ff93f5c0"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>7032</con:value></con:property><con:property><con:name>PNR</con:name><con:value>TP2RG6</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>airlineIdentifier</con:name><con:value>LH</con:value></con:property><con:property><con:name>FormcodeserialNumber</con:name><con:value>2382901616</con:value></con:property><con:property><con:name>DepatureDate</con:name><con:value>2017-09-20+02:00</con:value></con:property><con:property><con:name>Bagtag number1</con:name><con:value>6454654132</con:value></con:property><con:property><con:name>Bagtag number 2</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval" id="ccbed2af-6ce7-49a6-8332-26abaa7e1f00"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>
	{
 "passengers": {
      "passenger": [{
        "passengerLastName": "${TCProperties#LastName}",
        "passengerFirstName": "${TCProperties#FirstName}",
        "bookingReference": "${TCProperties#PNR}",
        "flights": {
          "flight":[ {
            "departureAirport": "${TCProperties#Outbound_Origin}"
          }
]
        }
      }
                    ]
    }

  }


</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].flightDetails.status</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Checkin_Request" id="7cb8e942-9c55-405b-81a8-081ce2d314a3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="89623b30-eaee-48eb-a56e-26932c6518df"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "bookingReference": "TP2RG6",
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight": [   {
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "airlineCode": "${TCProperties#POS}",
      "departureDate": "2017-10-18",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "7032"
   }]}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Document_Options" id="3166555e-eb2d-4f22-9dc7-4923f2adeceb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.identification[0].passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depratureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet_Options" id="d4aab510-0473-4cb1-9fd6-1279839782e3"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet_Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": [{"passengerId": "2301CA04000054DCMUC"}],
   "flights": {"flight": [   {
      "departureAirport": "FRA",
      "airlineCode": "LH",
      "departureDate": "2017-10-18",
      "arrivalAirport": "MUC",
      "flightNumber": "7032"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documents</con:originalUri><con:assertion type="JsonPath Match" id="20d53adf-0604-44c6-98a0-bc9cc98d78e6" name="VerifyDocumnetType(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].documentType</path><content>BOARDINGPASS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91f3a6a9-b544-49fa-a6c5-74ff7c6ad1f9" name="VerifyDeliveryOption(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[0]</path><content>RAW_DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7dc26790-1e34-4861-a7e5-88d285051118" name="VerifyDeliveryOption(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[1]</path><content>MOBILE_VIA_PHONE_NUMBER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d04b14c9-6b5c-4349-839f-7f9da21982d6" name="VerifyDeliveryOption(3)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[2]</path><content>HOME_PRINTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f453180-5e3e-4b27-a698-b8ab28ff4be8" name="VerifyDeliveryOption(4)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[3]</path><content>MOBILE_VIA_EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="501c34d2-c58e-411c-857a-f6a040569dd4" name="VerifyDeliveryOption(5)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[4]</path><content>AIRPORT_PICKUP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e90be9cd-da0e-4e78-ac86-d63f01e7b849" name="VerifyDocumentType(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[1].documentType</path><content>BAGTAG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="7032"/>
  <con:entry key="arrival-airport" value="FRA"/>
  <con:entry key="passenger-id" value="2301CA04000054DCMUC"/>
  <con:entry key="departure-airport" value="MUC"/>
  <con:entry key="departure-date" value="2017-10-18"/>
  <con:entry key="type" value=""/>
  <con:entry key="arrivalAirport" value="${#Global#endAirport}"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>airline-code</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Baggage_Registration" id="fa3b7425-d97b-44b8-a191-0cd1b6590650" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passenegrId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="cf2e4470-9831-4933-8b36-03b3122e32a2" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "identification": {"passengerId": "2301C9F000012006FRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight": [      {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-09-28",
         "arrivalAirport": "MUC",
         "flightNumber": "4271"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Bag_Tag" id="437b46e7-7c96-44d0-a9a7-7bd9e6d404fd" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[0].tagNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[0]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bagTagNumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[1].tagNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[1]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document_Generation_Bag_Tag_Raw_Data" id="81f090a5-6154-4d65-b546-e7d4bddf1b59"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CA04000054DCMUC"},
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber":             [
               "${TCProperties#Bagtag number1}"
              
            ],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight": [         {
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#POS}",
            "departureDate": "2017-10-18",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "1068"
         }]}
      }]
   }]},
   "documentMedia": "RAW_DATA",
   "id": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>8489</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>182a44a0-107d-4409-b463-42f44c2f3362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddfcb096-e5f7-4615-b46a-919889c42ca7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="ce61927a-dd0b-4493-ad71-c1b1a0a2e8d8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T017_CheckIn_MultiSegment_ Print Baggage Tag_LH" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Add_PNR_To_Request" id="19ac5efb-dd09-4494-b1b2-60517fb79ada"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="49a4dc7a-b497-4f02-8f0e-b346a62cf54f"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="3a3eeca0-d616-4ab3-b147-770c52f66500"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval" id="20565852-368d-429f-ae3c-ee22d821c0bb"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513384_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Origin_1st Segment}",
            "airlineCode": "${TCProperties#airlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus" disabled="true"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus" disabled="true"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4969914a-c3f6-4325-931f-6cefa55d8683" name="Contains"><con:configuration><token>baggagedata</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Checkin_Request" id="3ff5608a-7182-439d-9225-9c214c87893f" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="3411b6c8-3bcb-4191-bf75-94b78154f5ae" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513424_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "bookingReference": "WSTDEO",
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight": [   {
      "departureAirport": "${TCProperties#Origin_1st Segment}",
      "airlineCode": "${TCProperties#POS}",
      "departureDate": "2017-11-28",
      "arrivalAirport": "${TCProperties#Destination_1st Segment}",
      "flightNumber": "108"
   }]}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Document_Options" id="29d625f0-0139-4b46-8fdb-fe702f5cc19e" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.identification[0].passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depratureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet_Options" id="a574b2f7-b723-4106-ab89-22bbb5ab2b4b" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet_Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513434_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "LH",
      "departureAirport": "FRA",
      "departureDate": "2017-09-28",
      "arrivalAirport": "MUC",
      "flightNumber": "4271"
   }]},
   "identification": [{"passengerId": "2301C9F000012006FRA"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documents</con:originalUri><con:assertion type="JsonPath Match" id="20d53adf-0604-44c6-98a0-bc9cc98d78e6" name="VerifyDocumnetType(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].documentType</path><content>BOARDINGPASS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91f3a6a9-b544-49fa-a6c5-74ff7c6ad1f9" name="VerifyDeliveryOption(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[0]</path><content>RAW_DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7dc26790-1e34-4861-a7e5-88d285051118" name="VerifyDeliveryOption(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[1]</path><content>MOBILE_VIA_PHONE_NUMBER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d04b14c9-6b5c-4349-839f-7f9da21982d6" name="VerifyDeliveryOption(3)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[2]</path><content>HOME_PRINTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f453180-5e3e-4b27-a698-b8ab28ff4be8" name="VerifyDeliveryOption(4)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[3]</path><content>MOBILE_VIA_EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="501c34d2-c58e-411c-857a-f6a040569dd4" name="VerifyDeliveryOption(5)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[4]</path><content>AIRPORT_PICKUP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e90be9cd-da0e-4e78-ac86-d63f01e7b849" name="VerifyDocumentType(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[1].documentType</path><content>BAGTAG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
  <con:entry key="arrivalAirport" value="${#Global#endAirport}"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>airline-code</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Baggage_Registration" id="42c8ede2-304b-4d47-b253-69d68da30076" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passenegrId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="805a21a0-85cc-4aa8-a178-4d566730a8d7" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513444_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "identification": {"passengerId": "2301C9F000012006FRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight": [      {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-09-28",
         "arrivalAirport": "MUC",
         "flightNumber": "4271"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Bag_Tag" id="c8e0008a-aed3-475b-9cf2-9dc9a101aa3e"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>DepatureDate</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_1st segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>Bagtag number1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bagTagNumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[1].tagNumber</con:sourcePath><con:targetType>Bagtag number 2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[1]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_2nd segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_1st Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Origin_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_1st segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Destination_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_2nd segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Destination_2nd Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureDate1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>DepatureDate1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document_Generation_Bag_Tag_Raw_Data" id="0220b000-fa3b-47f7-94ae-1663a3c0daf5"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="123456"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513454_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#PassengerID}"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "${TCProperties#Origin_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode}",
               "departureDate": "${TCProperties#DepatureDate}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_1st Segment}",
               "flightNumber": "${TCProperties#FlightNumber_1st segment}"
            },
                        {
                "departureAirport": "${TCProperties#Destination_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode1}",
               "departureDate": "${TCProperties#DepatureDate1}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_2nd Segment}",
               "flightNumber": "${TCProperties#FlightNumber_2nd segment}"
            }
         ],
         "documentType": [         {
            "bagTagNumber":             [
   
               "${TCProperties#Bagtag number1}"

            ],
                      "numberOfBagTags": "1",
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse" disabled="true"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4c958233-4131-4170-b44e-8f937e61a9b9" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9f6c62d9-e27a-4633-9734-98a64377ca71" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="04ac94b3-1d7c-4fa6-ab1e-9f1cd55d2fa4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="166e15eb-5e85-4719-9b07-17f41509abe2"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Origin_1st Segment</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Destination_1st Segment</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>111</con:value></con:property><con:property><con:name>PNR</con:name><con:value>P73LRM</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>airlineIdentifier</con:name><con:value>220</con:value></con:property><con:property><con:name>FormcodeserialNumber</con:name><con:value>2386982576</con:value></con:property><con:property><con:name>DepatureDate</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>Bagtag number1</con:name><con:value>8947988944</con:value></con:property><con:property><con:name>Bagtag number 2</con:name><con:value/></con:property><con:property><con:name>Destination_2nd Segment</con:name><con:value>HAM</con:value></con:property><con:property><con:name>FlightNumber_1st segment</con:name><con:value>7032</con:value></con:property><con:property><con:name>FlightNumber_2nd segment</con:name><con:value>30</con:value></con:property><con:property><con:name>PassengerID</con:name><con:value>2301CAA400004553MUC</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LH</con:value></con:property><con:property><con:name>DepatureDate1</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Passenger_Acceptance" id="42e3d0c6-f8fc-4f3c-8a18-760fd5c5f435" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513464_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "PAXONE",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
      }
   ]},
   "passengerLastName": "DROPTENONE",
   "bookingReference": "WSTDEO"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="f88d8ab3-8b6e-4d63-8534-26d7a4f2e66f" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513474_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12345",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber":             [
               "4220002237",
               "4220002238"
            ],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight":          [
                        {
               "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
            },
                        {
               "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
            }
         ]}
      }],
      "identification": {"passengerId": "2301C9D20000547FHAM"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="baggage" id="077b3597-c8bb-41c7-ac10-8c246b247710" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="baggage" id="8226f32c-b118-4c68-ad95-8344eaaed1b5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513484_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DA2D00005F2DFRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight":       [
                  {
            "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
         },
                  {
             "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
         }
      ]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>8490</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>182a44a0-107d-4409-b463-42f44c2f3362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddfcb096-e5f7-4615-b46a-919889c42ca7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="3f0a3f8c-c416-496b-b024-61e8442d9d9c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T018_CheckIn_CodeShare_ Print Baggage Tag_LH" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Add_PNR_To_Request" id="c990d9e3-8b9e-4b12-8e58-1a4d64c92735"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="33d29ba4-5355-4e76-8132-d2f00deb3b5d"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="765ea25a-a9d4-4d0c-afdf-f7e750abd941"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval" id="b6f66107-9002-44d6-b05b-65ca1698a4f2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513384_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Origin_1st Segment}",
            "airlineCode": "${TCProperties#airlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus" disabled="true"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus" disabled="true"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4969914a-c3f6-4325-931f-6cefa55d8683" name="Contains"><con:configuration><token>baggagedata</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Checkin_Request" id="bdfaf342-1d1b-479c-97e4-eb983989d2c0" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="51f2d7c8-ccce-4c94-a7fc-f35d2dabaf78" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513424_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "bookingReference": "WSTDEO",
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight": [   {
      "departureAirport": "${TCProperties#Origin_1st Segment}",
      "airlineCode": "${TCProperties#POS}",
      "departureDate": "2017-11-28",
      "arrivalAirport": "${TCProperties#Destination_1st Segment}",
      "flightNumber": "108"
   }]}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Document_Options" id="59b3e786-4fba-44e1-9a55-8eae70d310f5" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.identification[0].passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depratureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet_Options" id="5711712d-86b8-4d15-9d43-f7233b917dba" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet_Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513434_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "LH",
      "departureAirport": "FRA",
      "departureDate": "2017-09-28",
      "arrivalAirport": "MUC",
      "flightNumber": "4271"
   }]},
   "identification": [{"passengerId": "2301C9F000012006FRA"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documents</con:originalUri><con:assertion type="JsonPath Match" id="20d53adf-0604-44c6-98a0-bc9cc98d78e6" name="VerifyDocumnetType(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].documentType</path><content>BOARDINGPASS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91f3a6a9-b544-49fa-a6c5-74ff7c6ad1f9" name="VerifyDeliveryOption(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[0]</path><content>RAW_DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7dc26790-1e34-4861-a7e5-88d285051118" name="VerifyDeliveryOption(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[1]</path><content>MOBILE_VIA_PHONE_NUMBER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d04b14c9-6b5c-4349-839f-7f9da21982d6" name="VerifyDeliveryOption(3)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[2]</path><content>HOME_PRINTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f453180-5e3e-4b27-a698-b8ab28ff4be8" name="VerifyDeliveryOption(4)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[3]</path><content>MOBILE_VIA_EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="501c34d2-c58e-411c-857a-f6a040569dd4" name="VerifyDeliveryOption(5)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[4]</path><content>AIRPORT_PICKUP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e90be9cd-da0e-4e78-ac86-d63f01e7b849" name="VerifyDocumentType(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[1].documentType</path><content>BAGTAG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
  <con:entry key="arrivalAirport" value="${#Global#endAirport}"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>airline-code</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Baggage_Registration" id="942b9527-5a18-4205-8b7a-42d8d5e73469" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passenegrId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="779a27da-9539-434c-b42e-9a2ff4b67436" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513444_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "identification": {"passengerId": "2301C9F000012006FRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight": [      {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-09-28",
         "arrivalAirport": "MUC",
         "flightNumber": "4271"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Bag_Tag" id="3d4f7522-eb8e-434e-81b0-9802de078f89"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>DepatureDate</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_1st segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>Bagtag number1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bagTagNumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[1].tagNumber</con:sourcePath><con:targetType>Bagtag number 2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[1]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_2nd segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_1st Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Origin_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_1st segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Destination_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_2nd segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Destination_2nd Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureDate1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>DepatureDate1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document_Generation_Bag_Tag_Raw_Data" id="10ae0636-a7a3-4637-b318-f28ad6d6a8b5"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513454_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#PassengerID}"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "${TCProperties#Origin_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode}",
               "departureDate": "${TCProperties#DepatureDate}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_1st Segment}",
               "flightNumber": "${TCProperties#FlightNumber_1st segment}"
            },
                        {
                "departureAirport": "${TCProperties#Destination_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode1}",
               "departureDate": "${TCProperties#DepatureDate1}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_2nd Segment}",
               "flightNumber": "${TCProperties#FlightNumber_2nd segment}"
            }
         ],
         "documentType": [         {
            "bagTagNumber":             [
   
               "${TCProperties#Bagtag number1}"

            ],
                      "numberOfBagTags": "1",
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse" disabled="true"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4c958233-4131-4170-b44e-8f937e61a9b9" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9f6c62d9-e27a-4633-9734-98a64377ca71" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="f953acfa-1f6a-4b79-a0e1-bacb84c540ea"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="12a8c3a2-001a-4fbb-9e76-af13c72e7d10"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Origin_1st Segment</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Destination_1st Segment</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>111</con:value></con:property><con:property><con:name>PNR</con:name><con:value>P73LRM</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>airlineIdentifier</con:name><con:value>220</con:value></con:property><con:property><con:name>FormcodeserialNumber</con:name><con:value>2386982576</con:value></con:property><con:property><con:name>DepatureDate</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>Bagtag number1</con:name><con:value>8947988944</con:value></con:property><con:property><con:name>Bagtag number 2</con:name><con:value/></con:property><con:property><con:name>Destination_2nd Segment</con:name><con:value>HAM</con:value></con:property><con:property><con:name>FlightNumber_1st segment</con:name><con:value>7032</con:value></con:property><con:property><con:name>FlightNumber_2nd segment</con:name><con:value>30</con:value></con:property><con:property><con:name>PassengerID</con:name><con:value>2301CAA400004553MUC</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LH</con:value></con:property><con:property><con:name>DepatureDate1</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Passenger_Acceptance" id="ff236a26-0b83-4666-9edf-ae15a9e934a1" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513464_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "PAXONE",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
      }
   ]},
   "passengerLastName": "DROPTENONE",
   "bookingReference": "WSTDEO"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="d68b6d8a-16d1-4f5f-a9e6-45d7af5498d8" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513474_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12345",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber":             [
               "4220002237",
               "4220002238"
            ],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight":          [
                        {
               "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
            },
                        {
               "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
            }
         ]}
      }],
      "identification": {"passengerId": "2301C9D20000547FHAM"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="baggage" id="87ced83f-e5ba-4b05-8fb1-adfe4f239a31" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="baggage" id="8226f32c-b118-4c68-ad95-8344eaaed1b5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513484_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DA2D00005F2DFRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight":       [
                  {
            "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
         },
                  {
             "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
         }
      ]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>182a44a0-107d-4409-b463-42f44c2f3362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddfcb096-e5f7-4615-b46a-919889c42ca7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="670172e2-0ebf-45e0-8c16-8a83492c582a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T019_CheckIn_MultiLeg_ Print Baggage Tag_LH" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Add_PNR_To_Request" id="af282505-aa47-4a21-befb-145950b18112"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="3c367825-2597-40b2-8a36-11db305895c2"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="7fae4e30-9220-44fd-88de-2140056bfb03"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval" id="50768f9a-075e-4bef-a4ad-5449ed5926bb"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513384_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Origin_1st Segment}",
            "airlineCode": "${TCProperties#airlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus" disabled="true"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus" disabled="true"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4969914a-c3f6-4325-931f-6cefa55d8683" name="Contains"><con:configuration><token>baggagedata</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Checkin_Request" id="946ed7be-c078-4b8a-a3b6-aae6b482aca6" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="9c35a930-86b5-438c-98ea-ccd73dce100a" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513424_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "bookingReference": "WSTDEO",
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight": [   {
      "departureAirport": "${TCProperties#Origin_1st Segment}",
      "airlineCode": "${TCProperties#POS}",
      "departureDate": "2017-11-28",
      "arrivalAirport": "${TCProperties#Destination_1st Segment}",
      "flightNumber": "108"
   }]}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Document_Options" id="80673d5f-fbb3-426d-a96f-e23107914ac9" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.identification[0].passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depratureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet_Options" id="f0adb1da-f9ca-4f9e-905e-cd45dc11f798" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet_Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513434_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "LH",
      "departureAirport": "FRA",
      "departureDate": "2017-09-28",
      "arrivalAirport": "MUC",
      "flightNumber": "4271"
   }]},
   "identification": [{"passengerId": "2301C9F000012006FRA"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documents</con:originalUri><con:assertion type="JsonPath Match" id="20d53adf-0604-44c6-98a0-bc9cc98d78e6" name="VerifyDocumnetType(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].documentType</path><content>BOARDINGPASS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91f3a6a9-b544-49fa-a6c5-74ff7c6ad1f9" name="VerifyDeliveryOption(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[0]</path><content>RAW_DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7dc26790-1e34-4861-a7e5-88d285051118" name="VerifyDeliveryOption(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[1]</path><content>MOBILE_VIA_PHONE_NUMBER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d04b14c9-6b5c-4349-839f-7f9da21982d6" name="VerifyDeliveryOption(3)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[2]</path><content>HOME_PRINTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f453180-5e3e-4b27-a698-b8ab28ff4be8" name="VerifyDeliveryOption(4)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[3]</path><content>MOBILE_VIA_EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="501c34d2-c58e-411c-857a-f6a040569dd4" name="VerifyDeliveryOption(5)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[4]</path><content>AIRPORT_PICKUP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e90be9cd-da0e-4e78-ac86-d63f01e7b849" name="VerifyDocumentType(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[1].documentType</path><content>BAGTAG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
  <con:entry key="arrivalAirport" value="${#Global#endAirport}"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>airline-code</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Baggage_Registration" id="d2c0c120-a1f4-4af1-b2e8-b23eebf44aa4" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passenegrId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="9a3f2558-9f96-4f8a-9baf-27f9e93dafcc" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513444_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "identification": {"passengerId": "2301C9F000012006FRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight": [      {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-09-28",
         "arrivalAirport": "MUC",
         "flightNumber": "4271"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Bag_Tag" id="390cb3f2-d3ad-4bc1-bba6-9ced241ce723"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>DepatureDate</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_1st segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>Bagtag number1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bagTagNumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[1].tagNumber</con:sourcePath><con:targetType>Bagtag number 2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[1]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_2nd segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_1st Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Origin_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_1st segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Destination_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_2nd segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Destination_2nd Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureDate1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>DepatureDate1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document_Generation_Bag_Tag_Raw_Data" id="f6409c60-7a47-4b20-8dae-d2285d0030a3"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="123456"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513454_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#PassengerID}"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "${TCProperties#Origin_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode}",
               "departureDate": "${TCProperties#DepatureDate}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_1st Segment}",
               "flightNumber": "${TCProperties#FlightNumber_1st segment}"
            },
                        {
                "departureAirport": "${TCProperties#Destination_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode1}",
               "departureDate": "${TCProperties#DepatureDate1}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_2nd Segment}",
               "flightNumber": "${TCProperties#FlightNumber_2nd segment}"
            }
         ],
         "documentType": [         {
            "bagTagNumber":             [
   
               "${TCProperties#Bagtag number1}"

            ],
                      "numberOfBagTags": "1",
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse" disabled="true"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4c958233-4131-4170-b44e-8f937e61a9b9" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9f6c62d9-e27a-4633-9734-98a64377ca71" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="638a2745-b1b9-4659-9302-69b5a9e8af17"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="1d9d1d29-e70a-48d7-972b-3d8a33c965e9"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Origin_1st Segment</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Destination_1st Segment</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>111</con:value></con:property><con:property><con:name>PNR</con:name><con:value>P73LRM</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>airlineIdentifier</con:name><con:value>220</con:value></con:property><con:property><con:name>FormcodeserialNumber</con:name><con:value>2386982576</con:value></con:property><con:property><con:name>DepatureDate</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>Bagtag number1</con:name><con:value>8947988944</con:value></con:property><con:property><con:name>Bagtag number 2</con:name><con:value/></con:property><con:property><con:name>Destination_2nd Segment</con:name><con:value>HAM</con:value></con:property><con:property><con:name>FlightNumber_1st segment</con:name><con:value>7032</con:value></con:property><con:property><con:name>FlightNumber_2nd segment</con:name><con:value>30</con:value></con:property><con:property><con:name>PassengerID</con:name><con:value>2301CAA400004553MUC</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LH</con:value></con:property><con:property><con:name>DepatureDate1</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Passenger_Acceptance" id="3783d149-f3aa-4521-9382-915e2a4cee24" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513464_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "PAXONE",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
      }
   ]},
   "passengerLastName": "DROPTENONE",
   "bookingReference": "WSTDEO"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="63620b6c-1011-42cc-895d-20837528f0f6" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513474_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12345",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber":             [
               "4220002237",
               "4220002238"
            ],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight":          [
                        {
               "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
            },
                        {
               "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
            }
         ]}
      }],
      "identification": {"passengerId": "2301C9D20000547FHAM"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="baggage" id="f7a77a18-9512-472e-8d3b-333491d08f9f" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="baggage" id="8226f32c-b118-4c68-ad95-8344eaaed1b5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513484_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DA2D00005F2DFRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight":       [
                  {
            "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
         },
                  {
             "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
         }
      ]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>182a44a0-107d-4409-b463-42f44c2f3362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddfcb096-e5f7-4615-b46a-919889c42ca7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="2692bd11-878d-4d39-968d-93ed35ec7776" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T020_CheckIn_SingleSegment_ Print Baggage Tag_LX" searchProperties="true" disabled="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Add_PNR_To_Request" id="78ea6c18-a66d-454f-869e-264a11ef8402" disabled="true"><con:settings/><con:config><script>//get test case from other project or from the same one
project = testRunner.getTestCase().getTestSuite().getProject().getWorkspace().getProjectByName("ADC_CheckIn");
testSuite = project.getTestSuiteByName("OM_Flow");
testCase = testSuite.getTestCaseByName("PNR_Creation_SinglePassenger_SingleSegment")

//set properties if you need
//testRunner.testCase.setPropertyValue("airlineIdentifier",airlineIdentifier );
//testRunner.testCase.setPropertyValue(another_property_name, another_property_value);

// run test case
runner = testCase.run(new com.eviware.soapui.support.types.StringToObjectMap(), false);
def verificationIP = context.expand('${#Global#PNRValue}');


</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="9f191c98-4496-4ea5-8d84-503eba800721"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LX</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>111</con:value></con:property><con:property><con:name>PNR</con:name><con:value>TP3KQF</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>airlineIdentifier</con:name><con:value>LH</con:value></con:property><con:property><con:name>FormcodeserialNumber</con:name><con:value>2382901616</con:value></con:property><con:property><con:name>DepatureDate</con:name><con:value>2017-09-20+02:00</con:value></con:property><con:property><con:name>Bagtag number1</con:name><con:value>6454654132</con:value></con:property><con:property><con:name>Bagtag number 2</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval" id="a0a48375-d400-4a9b-a55c-55f0e290897d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>
	{
 "passengers": {
      "passenger": [{
        "passengerLastName": "${TCProperties#LastName}",
        "passengerFirstName": "${TCProperties#FirstName}",
        "bookingReference": "${TCProperties#PNR}",
        "flights": {
          "flight":[ {
            "departureAirport": "${TCProperties#Outbound_Origin}"
          }
]
        }
      }
                    ]
    }

  }


</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].flightDetails.status</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Log1" id="7485b0af-a8a1-47bb-adff-15ec6ec91884"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Checkin_Request" id="ca5e2339-621c-4339-a2eb-f2906759d564"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="9e61dbc1-8d59-4889-8b63-a5e2867851e7"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "bookingReference": "TP3KQF",
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight": [   {
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "airlineCode": "${TCProperties#POS}",
      "departureDate": "2017-10-18",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "1068"
   }]}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Log2" id="cff3b40b-cd9c-4590-bb55-a6f88d107b0c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Document_Options" id="92b4d6e5-9248-4911-81ef-193f61351f79"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.identification[0].passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depratureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet_Options" id="5288ced9-8a69-488b-a4fd-3ead71ca7f18"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet_Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://localhost:11199</con:endpoint><con:request>{
   "identification": [{"passengerId": "2301CA04000054BFZRH"}],
   "flights": {"flight": [   {
      "departureAirport": "FRA",
      "airlineCode": "LH",
      "departureDate": "2017-10-18",
      "arrivalAirport": "MUC",
      "flightNumber": "1068"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documents</con:originalUri><con:assertion type="JsonPath Match" id="20d53adf-0604-44c6-98a0-bc9cc98d78e6" name="VerifyDocumnetType(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].documentType</path><content>BOARDINGPASS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91f3a6a9-b544-49fa-a6c5-74ff7c6ad1f9" name="VerifyDeliveryOption(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[0]</path><content>RAW_DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7dc26790-1e34-4861-a7e5-88d285051118" name="VerifyDeliveryOption(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[1]</path><content>MOBILE_VIA_PHONE_NUMBER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d04b14c9-6b5c-4349-839f-7f9da21982d6" name="VerifyDeliveryOption(3)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[2]</path><content>HOME_PRINTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f453180-5e3e-4b27-a698-b8ab28ff4be8" name="VerifyDeliveryOption(4)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[3]</path><content>MOBILE_VIA_EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="501c34d2-c58e-411c-857a-f6a040569dd4" name="VerifyDeliveryOption(5)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[4]</path><content>AIRPORT_PICKUP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e90be9cd-da0e-4e78-ac86-d63f01e7b849" name="VerifyDocumentType(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[1].documentType</path><content>BAGTAG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="1068"/>
  <con:entry key="arrival-airport" value="FRA"/>
  <con:entry key="airline-code" value="LX"/>
  <con:entry key="passenger-id" value="2301CA04000054BFZRH"/>
  <con:entry key="departure-airport" value="ZRH"/>
  <con:entry key="departure-date" value="2017-10-18"/>
  <con:entry key="type" value=""/>
  <con:entry key="arrivalAirport" value="${#Global#endAirport}"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>airline-code</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="log3" id="9a851032-f3ca-42e2-b711-996818788970"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Baggage_Registration" id="3219ad81-ced5-454a-876d-049eeb556a57" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passenegrId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="ec6eef93-3794-4a6b-8596-832c7fe4b15b" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://localhost:11199</con:endpoint><con:request>{
   "identification": {"passengerId": "2301CA04000054BFZRH"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight": [      {
         "departureAirport": "ZRH",
         "airlineCode": "LX",
         "departureDate": "2017-10-18",
         "arrivalAirport": "FRA",
         "flightNumber": "1068"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Bag_Tag" id="5a9cf03a-bdd6-4dba-923b-75c18e21f28d" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[0].tagNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[0]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bagTagNumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[1].tagNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[1]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document_Generation_Bag_Tag_Raw_Data" id="14f0a7d2-b4fa-48f1-84e7-f08a750e129b"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "2301CA04000054BFZRH"},
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber":             [
               "${TCProperties#Bagtag number1}"
              
            ],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight": [         {
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#POS}",
            "departureDate": "2017-10-18",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "1068"
         }]}
      }]
   }]},
   "documentMedia": "RAW_DATA",
   "id": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="77562e61-afa8-4b3d-8795-797502cee4d2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>8493</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>182a44a0-107d-4409-b463-42f44c2f3362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddfcb096-e5f7-4615-b46a-919889c42ca7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="49efb157-407b-4fde-b1d3-b9fe5731a29d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T021_CheckIn_MultiSegment_ Print Baggage Tag_LX" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Add_PNR_To_Request" id="2e391baf-91a8-4d2b-9ee7-65f8be0a2766" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="5eed2c41-9532-4adf-8c47-58925ef4871d"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1527499923153_9964"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1527499923231"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1527499923231"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1527499923153_9964"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1527499923231_9964"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="d9c4738a-26db-4855-b0fc-9b58e7f214f7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval" id="46ae0d6f-935d-49a2-a125-5857f6887799"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1527499923153_9964"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1527499923262"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1527499923262"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LX_A-FRA_MKI-K_CH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1527499923153_9964"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1527499923262_9964"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Origin_1st Segment}",
            "airlineCode": "${TCProperties#airlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus" disabled="true"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus" disabled="true"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4969914a-c3f6-4325-931f-6cefa55d8683" name="Contains"><con:configuration><token>baggagedata</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Checkin_Request" id="e470b2e6-07c2-4feb-92c7-8a7e1f40ca2b" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="643ee145-46eb-42f2-b6e4-87ccbc97a28a" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1527499923153_9964"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1527499923278"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1527499923278"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1527499923153_9964"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1527499923278_9964"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "bookingReference": "WSTDEO",
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight": [   {
      "departureAirport": "${TCProperties#Origin_1st Segment}",
      "airlineCode": "${TCProperties#POS}",
      "departureDate": "2017-11-28",
      "arrivalAirport": "${TCProperties#Destination_1st Segment}",
      "flightNumber": "108"
   }]}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Document_Options" id="e41b7bb8-d6e7-48e9-8436-2336b4980684" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.identification[0].passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depratureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet_Options" id="e08edb30-6922-493d-aa5a-cc8a6066d3b7" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet_Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1527499923153_9964"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1527499923294"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1527499923294"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1527499923153_9964"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1527499923294_9964"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "LH",
      "departureAirport": "FRA",
      "departureDate": "2017-09-28",
      "arrivalAirport": "MUC",
      "flightNumber": "4271"
   }]},
   "identification": [{"passengerId": "2301C9F000012006FRA"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documents</con:originalUri><con:assertion type="JsonPath Match" id="20d53adf-0604-44c6-98a0-bc9cc98d78e6" name="VerifyDocumnetType(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].documentType</path><content>BOARDINGPASS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91f3a6a9-b544-49fa-a6c5-74ff7c6ad1f9" name="VerifyDeliveryOption(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[0]</path><content>RAW_DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7dc26790-1e34-4861-a7e5-88d285051118" name="VerifyDeliveryOption(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[1]</path><content>MOBILE_VIA_PHONE_NUMBER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d04b14c9-6b5c-4349-839f-7f9da21982d6" name="VerifyDeliveryOption(3)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[2]</path><content>HOME_PRINTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f453180-5e3e-4b27-a698-b8ab28ff4be8" name="VerifyDeliveryOption(4)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[3]</path><content>MOBILE_VIA_EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="501c34d2-c58e-411c-857a-f6a040569dd4" name="VerifyDeliveryOption(5)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[4]</path><content>AIRPORT_PICKUP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e90be9cd-da0e-4e78-ac86-d63f01e7b849" name="VerifyDocumentType(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[1].documentType</path><content>BAGTAG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
  <con:entry key="arrivalAirport" value="${#Global#endAirport}"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>airline-code</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Baggage_Registration" id="fdc4f9db-25ce-4d66-b650-fb3ca3fea675" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passenegrId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="6657f22e-2d3f-4d64-a0cd-6e544ec69ee6" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1527499923153_9964"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1527499923309"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1527499923309"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1527499923153_9964"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1527499923309_9964"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "identification": {"passengerId": "2301C9F000012006FRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight": [      {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-09-28",
         "arrivalAirport": "MUC",
         "flightNumber": "4271"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Bag_Tag" id="d8afa532-4738-4cdf-b8cc-dd66f9148b06"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>DepatureDate</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_1st segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>Bagtag number1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bagTagNumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[1].tagNumber</con:sourcePath><con:targetType>Bagtag number 2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[1]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_2nd segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_1st Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Origin_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_1st segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Destination_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_2nd segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Destination_2nd Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureDate1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>DepatureDate1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document_Generation_Bag_Tag_Raw_Data" id="33255f2d-6f21-400f-8fa2-dca5de033b8f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1527499923153_9964"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1527499923325"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1527499923325"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1527499923153_9964"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1527499923325_9964"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#PassengerID}"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "${TCProperties#Origin_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode}",
               "departureDate": "${TCProperties#DepatureDate}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_1st Segment}",
               "flightNumber": "${TCProperties#FlightNumber_1st segment}"
            },
                        {
                "departureAirport": "${TCProperties#Destination_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode1}",
               "departureDate": "${TCProperties#DepatureDate1}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_2nd Segment}",
               "flightNumber": "${TCProperties#FlightNumber_2nd segment}"
            }
         ],
         "documentType": [         {
            "bagTagNumber":             [
   
               "${TCProperties#Bagtag number1}"

            ],
                      "numberOfBagTags": "1",
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse" disabled="true"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4c958233-4131-4170-b44e-8f937e61a9b9" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9f6c62d9-e27a-4633-9734-98a64377ca71" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="da880d44-0bea-411f-8518-0af6a716f95c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="47041b50-c43b-4391-b0c8-627fcbbca23c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LX</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Origin_1st Segment</con:name><con:value>GVA</con:value></con:property><con:property><con:name>Destination_1st Segment</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>2805</con:value></con:property><con:property><con:name>PNR</con:name><con:value>KZPPMT</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>airlineIdentifier</con:name><con:value>220</con:value></con:property><con:property><con:name>FormcodeserialNumber</con:name><con:value>2386982576</con:value></con:property><con:property><con:name>DepatureDate</con:name><con:value>2018-05-29</con:value></con:property><con:property><con:name>Bagtag number1</con:name><con:value>1111111111</con:value></con:property><con:property><con:name>Bagtag number 2</con:name><con:value/></con:property><con:property><con:name>Destination_2nd Segment</con:name><con:value>FRA</con:value></con:property><con:property><con:name>FlightNumber_1st segment</con:name><con:value>2805</con:value></con:property><con:property><con:name>FlightNumber_2nd segment</con:name><con:value>1074</con:value></con:property><con:property><con:name>PassengerID</con:name><con:value>2301DADF00007A01</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LX</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LX</con:value></con:property><con:property><con:name>DepatureDate1</con:name><con:value>2018-05-29</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b1e648a2d88891618e8f461</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Passenger_Acceptance" id="36a35190-041e-491e-87d2-e7fefb093568" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1527499923153_9964"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1527499923356"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1527499923356"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1527499923153_9964"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1527499923340_9964"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "PAXONE",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
      }
   ]},
   "passengerLastName": "DROPTENONE",
   "bookingReference": "WSTDEO"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="c58c96fe-409e-4f59-adb4-d6fefdf22114" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1527499923153_9964"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1527499923372"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1527499923372"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1527499923153_9964"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1527499923372_9964"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12345",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber":             [
               "4220002237",
               "4220002238"
            ],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight":          [
                        {
               "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
            },
                        {
               "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
            }
         ]}
      }],
      "identification": {"passengerId": "2301C9D20000547FHAM"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="baggage" id="562eba34-9f8b-4373-8bf1-97394837c9f7" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="baggage" id="8226f32c-b118-4c68-ad95-8344eaaed1b5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1527499923153_9964"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1527499923387"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1527499923387"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1527499923153_9964"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1527499923387_9964"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DA2D00005F2DFRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight":       [
                  {
            "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
         },
                  {
             "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
         }
      ]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>8494</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>182a44a0-107d-4409-b463-42f44c2f3362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddfcb096-e5f7-4615-b46a-919889c42ca7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f9aebc34-9716-469f-9722-37cc93f30a07" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T022_CheckIn_CodeShare_ Print Baggage Tag_LX" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Add_PNR_To_Request" id="00d8d242-e570-4a29-a7cc-09ddf760499a"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="0cdac4ba-6100-4117-a378-b959a1aefd43"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="4f671ba5-b7a2-44c2-8691-b7060efb6713"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval" id="158c9c0a-0bfb-4905-83c5-45a3b241cb05"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513384_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Origin_1st Segment}",
            "airlineCode": "${TCProperties#airlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus" disabled="true"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus" disabled="true"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4969914a-c3f6-4325-931f-6cefa55d8683" name="Contains"><con:configuration><token>baggagedata</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Checkin_Request" id="cedafcfc-34af-4ff4-878b-dd19f691b0c6" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="bc654972-7aba-41fe-9ab6-17633cf66521" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513424_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "bookingReference": "WSTDEO",
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight": [   {
      "departureAirport": "${TCProperties#Origin_1st Segment}",
      "airlineCode": "${TCProperties#POS}",
      "departureDate": "2017-11-28",
      "arrivalAirport": "${TCProperties#Destination_1st Segment}",
      "flightNumber": "108"
   }]}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Document_Options" id="db2cadf3-b6b0-4d57-b5d8-a9fcf1315517" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.identification[0].passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depratureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet_Options" id="e43d6c62-1ba9-4ecd-a5ea-6d6826bf57ef" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet_Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513434_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "LH",
      "departureAirport": "FRA",
      "departureDate": "2017-09-28",
      "arrivalAirport": "MUC",
      "flightNumber": "4271"
   }]},
   "identification": [{"passengerId": "2301C9F000012006FRA"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documents</con:originalUri><con:assertion type="JsonPath Match" id="20d53adf-0604-44c6-98a0-bc9cc98d78e6" name="VerifyDocumnetType(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].documentType</path><content>BOARDINGPASS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91f3a6a9-b544-49fa-a6c5-74ff7c6ad1f9" name="VerifyDeliveryOption(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[0]</path><content>RAW_DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7dc26790-1e34-4861-a7e5-88d285051118" name="VerifyDeliveryOption(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[1]</path><content>MOBILE_VIA_PHONE_NUMBER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d04b14c9-6b5c-4349-839f-7f9da21982d6" name="VerifyDeliveryOption(3)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[2]</path><content>HOME_PRINTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f453180-5e3e-4b27-a698-b8ab28ff4be8" name="VerifyDeliveryOption(4)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[3]</path><content>MOBILE_VIA_EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="501c34d2-c58e-411c-857a-f6a040569dd4" name="VerifyDeliveryOption(5)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[4]</path><content>AIRPORT_PICKUP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e90be9cd-da0e-4e78-ac86-d63f01e7b849" name="VerifyDocumentType(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[1].documentType</path><content>BAGTAG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
  <con:entry key="arrivalAirport" value="${#Global#endAirport}"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>airline-code</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Baggage_Registration" id="20f889f5-aaf1-4dab-8a6e-b684757819a1" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passenegrId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="3402376d-071f-4a20-8f7e-26edbd97d7ac" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513444_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "identification": {"passengerId": "2301C9F000012006FRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight": [      {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-09-28",
         "arrivalAirport": "MUC",
         "flightNumber": "4271"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Bag_Tag" id="c262d367-01fb-4166-8d2b-7ec3c5e25a65"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>DepatureDate</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_1st segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>Bagtag number1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bagTagNumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[1].tagNumber</con:sourcePath><con:targetType>Bagtag number 2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[1]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_2nd segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_1st Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Origin_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_1st segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Destination_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_2nd segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Destination_2nd Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureDate1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>DepatureDate1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document_Generation_Bag_Tag_Raw_Data" id="963b21b6-daa1-4f22-aa1b-16175766d744"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="123456"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513454_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#PassengerID}"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "${TCProperties#Origin_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode}",
               "departureDate": "${TCProperties#DepatureDate}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_1st Segment}",
               "flightNumber": "${TCProperties#FlightNumber_1st segment}"
            },
                        {
                "departureAirport": "${TCProperties#Destination_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode1}",
               "departureDate": "${TCProperties#DepatureDate1}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_2nd Segment}",
               "flightNumber": "${TCProperties#FlightNumber_2nd segment}"
            }
         ],
         "documentType": [         {
            "bagTagNumber":             [
   
               "${TCProperties#Bagtag number1}"

            ],
                      "numberOfBagTags": "1",
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse" disabled="true"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4c958233-4131-4170-b44e-8f937e61a9b9" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9f6c62d9-e27a-4633-9734-98a64377ca71" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="b0ea2a09-0a3b-474b-9c7e-0f9258df3ad9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="82897adb-e129-4377-a7d5-0a71b2323309"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Origin_1st Segment</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Destination_1st Segment</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>111</con:value></con:property><con:property><con:name>PNR</con:name><con:value>P73LRM</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>airlineIdentifier</con:name><con:value>220</con:value></con:property><con:property><con:name>FormcodeserialNumber</con:name><con:value>2386982576</con:value></con:property><con:property><con:name>DepatureDate</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>Bagtag number1</con:name><con:value>8947988944</con:value></con:property><con:property><con:name>Bagtag number 2</con:name><con:value/></con:property><con:property><con:name>Destination_2nd Segment</con:name><con:value>HAM</con:value></con:property><con:property><con:name>FlightNumber_1st segment</con:name><con:value>7032</con:value></con:property><con:property><con:name>FlightNumber_2nd segment</con:name><con:value>30</con:value></con:property><con:property><con:name>PassengerID</con:name><con:value>2301CAA400004553MUC</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LH</con:value></con:property><con:property><con:name>DepatureDate1</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Passenger_Acceptance" id="6eead5eb-d5e6-45f6-acae-d353ce0a2d2a" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513464_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "PAXONE",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
      }
   ]},
   "passengerLastName": "DROPTENONE",
   "bookingReference": "WSTDEO"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="ec4c947b-01d1-4602-88fc-d5d832b6f42f" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513474_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12345",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber":             [
               "4220002237",
               "4220002238"
            ],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight":          [
                        {
               "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
            },
                        {
               "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
            }
         ]}
      }],
      "identification": {"passengerId": "2301C9D20000547FHAM"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="baggage" id="28fe515f-5457-4d88-a4cc-c52151c54408" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="baggage" id="8226f32c-b118-4c68-ad95-8344eaaed1b5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513484_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DA2D00005F2DFRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight":       [
                  {
            "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
         },
                  {
             "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
         }
      ]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>182a44a0-107d-4409-b463-42f44c2f3362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddfcb096-e5f7-4615-b46a-919889c42ca7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="49a17472-0202-4c33-b002-b3aae700750a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T023_CheckIn_MultiLeg_ Print Baggage Tag_LX" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Add_PNR_To_Request" id="7bccfaa3-d194-4abc-9a32-82880a399172"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="d0675ef5-5898-4372-bc3b-dd831b0f3a0e"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="2401c228-1f1e-4b2a-9e98-ed47820c2d24"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval" id="ec49a0f7-3aaf-48ac-8e7e-ffec623d8b92"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513384_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Origin_1st Segment}",
            "airlineCode": "${TCProperties#airlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus" disabled="true"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus" disabled="true"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4969914a-c3f6-4325-931f-6cefa55d8683" name="Contains"><con:configuration><token>baggagedata</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Checkin_Request" id="60fe7b97-66ae-45fb-a61e-e5018a656a0a" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="52f4ec3c-9b56-4549-afe2-755bb4c50e2a" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513424_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "bookingReference": "WSTDEO",
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight": [   {
      "departureAirport": "${TCProperties#Origin_1st Segment}",
      "airlineCode": "${TCProperties#POS}",
      "departureDate": "2017-11-28",
      "arrivalAirport": "${TCProperties#Destination_1st Segment}",
      "flightNumber": "108"
   }]}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Document_Options" id="83b5b721-c06f-48d9-9b45-5239159f4ac5" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.identification[0].passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depratureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet_Options" id="9668ba63-0016-4577-beb8-ebbc909fb8c8" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet_Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513434_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "LH",
      "departureAirport": "FRA",
      "departureDate": "2017-09-28",
      "arrivalAirport": "MUC",
      "flightNumber": "4271"
   }]},
   "identification": [{"passengerId": "2301C9F000012006FRA"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documents</con:originalUri><con:assertion type="JsonPath Match" id="20d53adf-0604-44c6-98a0-bc9cc98d78e6" name="VerifyDocumnetType(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].documentType</path><content>BOARDINGPASS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91f3a6a9-b544-49fa-a6c5-74ff7c6ad1f9" name="VerifyDeliveryOption(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[0]</path><content>RAW_DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7dc26790-1e34-4861-a7e5-88d285051118" name="VerifyDeliveryOption(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[1]</path><content>MOBILE_VIA_PHONE_NUMBER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d04b14c9-6b5c-4349-839f-7f9da21982d6" name="VerifyDeliveryOption(3)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[2]</path><content>HOME_PRINTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f453180-5e3e-4b27-a698-b8ab28ff4be8" name="VerifyDeliveryOption(4)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[3]</path><content>MOBILE_VIA_EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="501c34d2-c58e-411c-857a-f6a040569dd4" name="VerifyDeliveryOption(5)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[4]</path><content>AIRPORT_PICKUP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e90be9cd-da0e-4e78-ac86-d63f01e7b849" name="VerifyDocumentType(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[1].documentType</path><content>BAGTAG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
  <con:entry key="arrivalAirport" value="${#Global#endAirport}"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>airline-code</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Baggage_Registration" id="87631469-3bfc-4ad9-a2a3-4ec50c61bc55" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passenegrId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="66009ffe-1135-496c-ba05-4914ecf00827" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513444_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "identification": {"passengerId": "2301C9F000012006FRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight": [      {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-09-28",
         "arrivalAirport": "MUC",
         "flightNumber": "4271"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Bag_Tag" id="9d3dbbea-89ec-4112-960f-7eed0a29d464"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>DepatureDate</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_1st segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>Bagtag number1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bagTagNumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[1].tagNumber</con:sourcePath><con:targetType>Bagtag number 2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[1]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_2nd segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_1st Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Origin_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_1st segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Destination_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_2nd segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Destination_2nd Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureDate1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>DepatureDate1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document_Generation_Bag_Tag_Raw_Data" id="e347907f-7c51-4772-af12-7bb2b003d48c"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="123456"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513454_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#PassengerID}"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "${TCProperties#Origin_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode}",
               "departureDate": "${TCProperties#DepatureDate}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_1st Segment}",
               "flightNumber": "${TCProperties#FlightNumber_1st segment}"
            },
                        {
                "departureAirport": "${TCProperties#Destination_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode1}",
               "departureDate": "${TCProperties#DepatureDate1}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_2nd Segment}",
               "flightNumber": "${TCProperties#FlightNumber_2nd segment}"
            }
         ],
         "documentType": [         {
            "bagTagNumber":             [
   
               "${TCProperties#Bagtag number1}"

            ],
                      "numberOfBagTags": "1",
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse" disabled="true"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4c958233-4131-4170-b44e-8f937e61a9b9" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9f6c62d9-e27a-4633-9734-98a64377ca71" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="50c01be0-b83e-40b6-bf58-39bbc6bd3e34"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="19f08605-ddbc-49e0-98d6-4b1326488ae4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Origin_1st Segment</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Destination_1st Segment</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>111</con:value></con:property><con:property><con:name>PNR</con:name><con:value>P73LRM</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>airlineIdentifier</con:name><con:value>220</con:value></con:property><con:property><con:name>FormcodeserialNumber</con:name><con:value>2386982576</con:value></con:property><con:property><con:name>DepatureDate</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>Bagtag number1</con:name><con:value>8947988944</con:value></con:property><con:property><con:name>Bagtag number 2</con:name><con:value/></con:property><con:property><con:name>Destination_2nd Segment</con:name><con:value>HAM</con:value></con:property><con:property><con:name>FlightNumber_1st segment</con:name><con:value>7032</con:value></con:property><con:property><con:name>FlightNumber_2nd segment</con:name><con:value>30</con:value></con:property><con:property><con:name>PassengerID</con:name><con:value>2301CAA400004553MUC</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LH</con:value></con:property><con:property><con:name>DepatureDate1</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Passenger_Acceptance" id="dfb571b5-4479-421c-a185-d2f20f8dff61" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513464_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "PAXONE",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
      }
   ]},
   "passengerLastName": "DROPTENONE",
   "bookingReference": "WSTDEO"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="e6867ce0-f6da-4e64-b854-b406613b23c2" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513474_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12345",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber":             [
               "4220002237",
               "4220002238"
            ],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight":          [
                        {
               "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
            },
                        {
               "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
            }
         ]}
      }],
      "identification": {"passengerId": "2301C9D20000547FHAM"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="baggage" id="4ee62ac8-94d9-4ef1-a229-83d732d02665" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="baggage" id="8226f32c-b118-4c68-ad95-8344eaaed1b5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513484_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DA2D00005F2DFRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight":       [
                  {
            "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
         },
                  {
             "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
         }
      ]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>182a44a0-107d-4409-b463-42f44c2f3362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddfcb096-e5f7-4615-b46a-919889c42ca7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="7cdc544a-073d-4a4a-acf9-e5223d08cbd8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T024_CheckIn_SingleSegment_ Print Baggage Tag_OS" searchProperties="true" disabled="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Add_PNR_To_Request" id="aade1e8c-8cc4-4359-a7a9-352841f7c3e9" disabled="true"><con:settings/><con:config><script>//get test case from other project or from the same one
project = testRunner.getTestCase().getTestSuite().getProject().getWorkspace().getProjectByName("ADC_CheckIn");
testSuite = project.getTestSuiteByName("OM_Flow");
testCase = testSuite.getTestCaseByName("PNR_Creation_SinglePassenger_SingleSegment")

//set properties if you need
//testRunner.testCase.setPropertyValue("airlineIdentifier",airlineIdentifier );
//testRunner.testCase.setPropertyValue(another_property_name, another_property_value);

// run test case
runner = testCase.run(new com.eviware.soapui.support.types.StringToObjectMap(), false);
def verificationIP = context.expand('${#Global#PNRValue}');


</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="67809d72-32a8-45c1-97a8-5c9130c55236"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>OS</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>SZG</con:value></con:property><con:property><con:name>Outbound_Destination</con:name><con:value>VIE</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>920</con:value></con:property><con:property><con:name>PNR</con:name><con:value>TP3LHB</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>airlineIdentifier</con:name><con:value>LH</con:value></con:property><con:property><con:name>FormcodeserialNumber</con:name><con:value>2382901616</con:value></con:property><con:property><con:name>DepatureDate</con:name><con:value>2017-10-18</con:value></con:property><con:property><con:name>Bagtag number1</con:name><con:value>0231023165</con:value></con:property><con:property><con:name>Bagtag number 2</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval" id="e1c187d5-8ac8-49ee-8a8e-174b212f2ed7"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>
	{
 "passengers": {
      "passenger": [{
        "passengerLastName": "${TCProperties#LastName}",
        "passengerFirstName": "${TCProperties#FirstName}",
        "bookingReference": "${TCProperties#PNR}",
        "flights": {
          "flight":[ {
            "departureAirport": "${TCProperties#Outbound_Origin}"
          }
]
        }
      }
                    ]
    }

  }


</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].flightDetails.status</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Log1" id="c4c4f248-8f28-489f-8aeb-312645154602"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Checkin_Request" id="6f70b2f0-5a83-4d9e-8bc9-7d7d903eefcb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="620383ab-90c5-4572-bb53-9d36a958060e"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "bookingReference": "TP3LHB",
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight": [   {
      "departureAirport": "${TCProperties#Outbound_Origin}",
      "airlineCode": "${TCProperties#POS}",
      "departureDate": "2017-10-18",
      "arrivalAirport": "${TCProperties#Outbound_Destination}",
      "flightNumber": "920"
   }]}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Log2" id="14c346bd-5b95-4ca3-bc3b-731d56d082e4"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Document_Options" id="d94b6f21-55d6-45dd-8104-3b2d9739917d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.identification[0].passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depratureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet_Options" id="2631abe8-7dbb-42f1-8472-52b729d2859a"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet_Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": [{"passengerId": "2301CA040000552DSZG"}],
   "flights": {"flight": [   {
      "departureAirport": "FRA",
      "airlineCode": "LH",
      "departureDate": "2017-10-18",
      "arrivalAirport": "MUC",
      "flightNumber": "920"
   }]}
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documents</con:originalUri><con:assertion type="JsonPath Match" id="20d53adf-0604-44c6-98a0-bc9cc98d78e6" name="VerifyDocumnetType(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].documentType</path><content>BOARDINGPASS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91f3a6a9-b544-49fa-a6c5-74ff7c6ad1f9" name="VerifyDeliveryOption(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[0]</path><content>RAW_DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7dc26790-1e34-4861-a7e5-88d285051118" name="VerifyDeliveryOption(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[1]</path><content>MOBILE_VIA_PHONE_NUMBER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d04b14c9-6b5c-4349-839f-7f9da21982d6" name="VerifyDeliveryOption(3)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[2]</path><content>HOME_PRINTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f453180-5e3e-4b27-a698-b8ab28ff4be8" name="VerifyDeliveryOption(4)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[3]</path><content>MOBILE_VIA_EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="501c34d2-c58e-411c-857a-f6a040569dd4" name="VerifyDeliveryOption(5)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[4]</path><content>AIRPORT_PICKUP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e90be9cd-da0e-4e78-ac86-d63f01e7b849" name="VerifyDocumentType(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[1].documentType</path><content>BAGTAG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value="920"/>
  <con:entry key="arrival-airport" value="VIE"/>
  <con:entry key="airline-code" value="OS"/>
  <con:entry key="passenger-id" value="2301CA040000552DSZG"/>
  <con:entry key="departure-airport" value="SZG"/>
  <con:entry key="departure-date" value="2017-10-18"/>
  <con:entry key="type" value=""/>
  <con:entry key="arrivalAirport" value="${#Global#endAirport}"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>airline-code</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Log3" id="f6b46181-65f8-492d-af28-d270da8cb404"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="transfer" name="Update_Baggage_Registration" id="00c75fcb-01dc-418d-a085-e98af77fd312" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passenegrId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="a37d6745-129d-441e-b6e2-a7b850eb9d93" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "identification": {"passengerId": "2301C9F000012006FRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight": [      {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-09-28",
         "arrivalAirport": "MUC",
         "flightNumber": "4271"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Bag_Tag" id="b85950a3-f86f-48a4-b6f5-c68ae249ae70" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[0].tagNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[0]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bagTagNumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Baggage_Registration</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[1].tagNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Document_Generation_Bag_Tag_Raw_Data</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[1]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document_Generation_Bag_Tag_Raw_Data" id="45800d4f-6775-4068-9eaa-02255990f4b9"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12345",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber":             [
               "${TCProperties#Bagtag number1}"
            ],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight": [         {
            "airlineCode": "${TCProperties#POS}",
            "departureAirport": "${TCProperties#Outbound_Origin}",
            "departureDate": "${TCProperties#DepatureDate}",
            "arrivalAirport": "${TCProperties#Outbound_Destination}",
            "flightNumber": "${TCProperties#Flight Number}"
         }]}
      }],
      "identification": {"passengerId": "2301CA040000552DSZG"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Log4" id="6c729eec-3785-46a2-9779-d0b2233764cc"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>8497</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>182a44a0-107d-4409-b463-42f44c2f3362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddfcb096-e5f7-4615-b46a-919889c42ca7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="a8dfaaf4-6c79-4756-a583-59ce016e7a63" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T025_CheckIn_MultiSegment_ Print Baggage Tag_OS" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Add_PNR_To_Request" id="22dac695-1f41-4e98-8d34-29d5ba4ac1e3"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="2154e679-f409-41d9-893c-1ffe2011857d"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="014b0a5b-631d-4804-9e41-0d14f3edc833"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval" id="90976061-8468-44da-aec5-fd032ff36bc6"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513384_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Origin_1st Segment}",
            "airlineCode": "${TCProperties#airlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus" disabled="true"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus" disabled="true"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4969914a-c3f6-4325-931f-6cefa55d8683" name="Contains"><con:configuration><token>baggagedata</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Checkin_Request" id="c5c6983b-1c00-4797-99bf-df2d39509e09" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="5f1f33a6-df86-469a-918a-b4222010720f" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513424_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "bookingReference": "WSTDEO",
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight": [   {
      "departureAirport": "${TCProperties#Origin_1st Segment}",
      "airlineCode": "${TCProperties#POS}",
      "departureDate": "2017-11-28",
      "arrivalAirport": "${TCProperties#Destination_1st Segment}",
      "flightNumber": "108"
   }]}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Document_Options" id="295b85a6-db73-4f95-aaef-035f50868624" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.identification[0].passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depratureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet_Options" id="bae8ba73-7ab5-4ed0-a03b-ab0c19d8ca4b" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet_Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513434_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "LH",
      "departureAirport": "FRA",
      "departureDate": "2017-09-28",
      "arrivalAirport": "MUC",
      "flightNumber": "4271"
   }]},
   "identification": [{"passengerId": "2301C9F000012006FRA"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documents</con:originalUri><con:assertion type="JsonPath Match" id="20d53adf-0604-44c6-98a0-bc9cc98d78e6" name="VerifyDocumnetType(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].documentType</path><content>BOARDINGPASS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91f3a6a9-b544-49fa-a6c5-74ff7c6ad1f9" name="VerifyDeliveryOption(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[0]</path><content>RAW_DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7dc26790-1e34-4861-a7e5-88d285051118" name="VerifyDeliveryOption(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[1]</path><content>MOBILE_VIA_PHONE_NUMBER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d04b14c9-6b5c-4349-839f-7f9da21982d6" name="VerifyDeliveryOption(3)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[2]</path><content>HOME_PRINTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f453180-5e3e-4b27-a698-b8ab28ff4be8" name="VerifyDeliveryOption(4)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[3]</path><content>MOBILE_VIA_EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="501c34d2-c58e-411c-857a-f6a040569dd4" name="VerifyDeliveryOption(5)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[4]</path><content>AIRPORT_PICKUP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e90be9cd-da0e-4e78-ac86-d63f01e7b849" name="VerifyDocumentType(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[1].documentType</path><content>BAGTAG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
  <con:entry key="arrivalAirport" value="${#Global#endAirport}"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>airline-code</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Baggage_Registration" id="2780fcb1-4a79-43b6-b565-c79aa64f93cf" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passenegrId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="184ed10a-1a4d-4a55-99f8-9bf846ef20da" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513444_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "identification": {"passengerId": "2301C9F000012006FRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight": [      {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-09-28",
         "arrivalAirport": "MUC",
         "flightNumber": "4271"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Bag_Tag" id="8c9e26f6-1474-4ab6-80b2-15caa9f2522c"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>DepatureDate</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_1st segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>Bagtag number1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bagTagNumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[1].tagNumber</con:sourcePath><con:targetType>Bagtag number 2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[1]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_2nd segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_1st Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Origin_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_1st segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Destination_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_2nd segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Destination_2nd Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureDate1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>DepatureDate1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document_Generation_Bag_Tag_Raw_Data" id="619292ee-5f85-4c30-bf7f-467419dd62f2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="123456"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513454_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#PassengerID}"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "${TCProperties#Origin_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode}",
               "departureDate": "${TCProperties#DepatureDate}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_1st Segment}",
               "flightNumber": "${TCProperties#FlightNumber_1st segment}"
            },
                        {
                "departureAirport": "${TCProperties#Destination_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode1}",
               "departureDate": "${TCProperties#DepatureDate1}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_2nd Segment}",
               "flightNumber": "${TCProperties#FlightNumber_2nd segment}"
            }
         ],
         "documentType": [         {
            "bagTagNumber":             [
   
               "${TCProperties#Bagtag number1}"

            ],
                      "numberOfBagTags": "1",
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse" disabled="true"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4c958233-4131-4170-b44e-8f937e61a9b9" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9f6c62d9-e27a-4633-9734-98a64377ca71" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="8a788018-3be0-46e4-a37c-c1bba4b7847c"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="446ec1b7-2c4a-4be8-9e38-b2a5752a647e"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Origin_1st Segment</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Destination_1st Segment</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>111</con:value></con:property><con:property><con:name>PNR</con:name><con:value>P73LRM</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>airlineIdentifier</con:name><con:value>220</con:value></con:property><con:property><con:name>FormcodeserialNumber</con:name><con:value>2386982576</con:value></con:property><con:property><con:name>DepatureDate</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>Bagtag number1</con:name><con:value>8947988944</con:value></con:property><con:property><con:name>Bagtag number 2</con:name><con:value/></con:property><con:property><con:name>Destination_2nd Segment</con:name><con:value>HAM</con:value></con:property><con:property><con:name>FlightNumber_1st segment</con:name><con:value>7032</con:value></con:property><con:property><con:name>FlightNumber_2nd segment</con:name><con:value>30</con:value></con:property><con:property><con:name>PassengerID</con:name><con:value>2301CAA400004553MUC</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LH</con:value></con:property><con:property><con:name>DepatureDate1</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Passenger_Acceptance" id="f92829bd-476d-4691-9336-3909d34fcaa1" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513464_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "PAXONE",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
      }
   ]},
   "passengerLastName": "DROPTENONE",
   "bookingReference": "WSTDEO"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="6226bdf4-1033-4bd1-8896-632e181be522" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513474_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12345",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber":             [
               "4220002237",
               "4220002238"
            ],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight":          [
                        {
               "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
            },
                        {
               "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
            }
         ]}
      }],
      "identification": {"passengerId": "2301C9D20000547FHAM"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="baggage" id="f8a9c76d-8327-43c4-81b3-1b55051ba542" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="baggage" id="8226f32c-b118-4c68-ad95-8344eaaed1b5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513484_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DA2D00005F2DFRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight":       [
                  {
            "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
         },
                  {
             "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
         }
      ]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>182a44a0-107d-4409-b463-42f44c2f3362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddfcb096-e5f7-4615-b46a-919889c42ca7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="fe29f064-d4bb-4317-82d2-14006ac65b35" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T026_CheckIn_CodeShare_ Print Baggage Tag_OS" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Add_PNR_To_Request" id="072e7a11-5bc4-4fd5-af07-3fb8f6b30340"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="e7e4fb36-3e17-4c01-b08f-ef4b737ed3ef"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="3b454058-3708-4065-8458-32aed5f947cb"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval" id="c6a688b4-c258-4a82-8848-a5197572155d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513384_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Origin_1st Segment}",
            "airlineCode": "${TCProperties#airlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus" disabled="true"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus" disabled="true"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4969914a-c3f6-4325-931f-6cefa55d8683" name="Contains"><con:configuration><token>baggagedata</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Checkin_Request" id="c6ce3289-0ac0-47ad-b476-4a6889a4c3a0" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="545db5bc-7676-4f89-8d03-a3f8656f42a8" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513424_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "bookingReference": "WSTDEO",
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight": [   {
      "departureAirport": "${TCProperties#Origin_1st Segment}",
      "airlineCode": "${TCProperties#POS}",
      "departureDate": "2017-11-28",
      "arrivalAirport": "${TCProperties#Destination_1st Segment}",
      "flightNumber": "108"
   }]}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Document_Options" id="c435a130-7bff-488b-8d8b-40c720b86b70" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.identification[0].passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depratureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet_Options" id="13178d61-6c4f-4705-b9fd-9468587e4d87" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet_Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513434_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "LH",
      "departureAirport": "FRA",
      "departureDate": "2017-09-28",
      "arrivalAirport": "MUC",
      "flightNumber": "4271"
   }]},
   "identification": [{"passengerId": "2301C9F000012006FRA"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documents</con:originalUri><con:assertion type="JsonPath Match" id="20d53adf-0604-44c6-98a0-bc9cc98d78e6" name="VerifyDocumnetType(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].documentType</path><content>BOARDINGPASS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91f3a6a9-b544-49fa-a6c5-74ff7c6ad1f9" name="VerifyDeliveryOption(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[0]</path><content>RAW_DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7dc26790-1e34-4861-a7e5-88d285051118" name="VerifyDeliveryOption(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[1]</path><content>MOBILE_VIA_PHONE_NUMBER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d04b14c9-6b5c-4349-839f-7f9da21982d6" name="VerifyDeliveryOption(3)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[2]</path><content>HOME_PRINTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f453180-5e3e-4b27-a698-b8ab28ff4be8" name="VerifyDeliveryOption(4)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[3]</path><content>MOBILE_VIA_EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="501c34d2-c58e-411c-857a-f6a040569dd4" name="VerifyDeliveryOption(5)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[4]</path><content>AIRPORT_PICKUP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e90be9cd-da0e-4e78-ac86-d63f01e7b849" name="VerifyDocumentType(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[1].documentType</path><content>BAGTAG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
  <con:entry key="arrivalAirport" value="${#Global#endAirport}"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>airline-code</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Baggage_Registration" id="570e9d5c-382b-429b-b937-0b4e41cf7b5c" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passenegrId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="89560deb-0841-4cb5-b618-b65f74f2bc50" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513444_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "identification": {"passengerId": "2301C9F000012006FRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight": [      {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-09-28",
         "arrivalAirport": "MUC",
         "flightNumber": "4271"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Bag_Tag" id="e3c2e509-f2f2-4424-9cca-cfaa7a0f9ced"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>DepatureDate</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_1st segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>Bagtag number1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bagTagNumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[1].tagNumber</con:sourcePath><con:targetType>Bagtag number 2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[1]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_2nd segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_1st Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Origin_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_1st segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Destination_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_2nd segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Destination_2nd Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureDate1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>DepatureDate1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document_Generation_Bag_Tag_Raw_Data" id="54d91016-7f4d-4aab-813d-d81c7adede5f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="123456"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513454_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#PassengerID}"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "${TCProperties#Origin_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode}",
               "departureDate": "${TCProperties#DepatureDate}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_1st Segment}",
               "flightNumber": "${TCProperties#FlightNumber_1st segment}"
            },
                        {
                "departureAirport": "${TCProperties#Destination_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode1}",
               "departureDate": "${TCProperties#DepatureDate1}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_2nd Segment}",
               "flightNumber": "${TCProperties#FlightNumber_2nd segment}"
            }
         ],
         "documentType": [         {
            "bagTagNumber":             [
   
               "${TCProperties#Bagtag number1}"

            ],
                      "numberOfBagTags": "1",
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse" disabled="true"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4c958233-4131-4170-b44e-8f937e61a9b9" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9f6c62d9-e27a-4633-9734-98a64377ca71" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="0b858c87-2bd2-40df-81a4-2f6d3586a8fc"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="11ebcbf8-08d2-4253-8279-613881ad6378"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Origin_1st Segment</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Destination_1st Segment</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>111</con:value></con:property><con:property><con:name>PNR</con:name><con:value>P73LRM</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>airlineIdentifier</con:name><con:value>220</con:value></con:property><con:property><con:name>FormcodeserialNumber</con:name><con:value>2386982576</con:value></con:property><con:property><con:name>DepatureDate</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>Bagtag number1</con:name><con:value>8947988944</con:value></con:property><con:property><con:name>Bagtag number 2</con:name><con:value/></con:property><con:property><con:name>Destination_2nd Segment</con:name><con:value>HAM</con:value></con:property><con:property><con:name>FlightNumber_1st segment</con:name><con:value>7032</con:value></con:property><con:property><con:name>FlightNumber_2nd segment</con:name><con:value>30</con:value></con:property><con:property><con:name>PassengerID</con:name><con:value>2301CAA400004553MUC</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LH</con:value></con:property><con:property><con:name>DepatureDate1</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Passenger_Acceptance" id="c781ef9a-817c-4a35-96f5-65aae9274c8d" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513464_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "PAXONE",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
      }
   ]},
   "passengerLastName": "DROPTENONE",
   "bookingReference": "WSTDEO"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="66e0a2a5-efe2-41cb-af8f-e605ba4670b8" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513474_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12345",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber":             [
               "4220002237",
               "4220002238"
            ],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight":          [
                        {
               "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
            },
                        {
               "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
            }
         ]}
      }],
      "identification": {"passengerId": "2301C9D20000547FHAM"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="baggage" id="870cd558-6bf3-48d7-8ca8-1b3be08a4840" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="baggage" id="8226f32c-b118-4c68-ad95-8344eaaed1b5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513484_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DA2D00005F2DFRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight":       [
                  {
            "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
         },
                  {
             "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
         }
      ]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>182a44a0-107d-4409-b463-42f44c2f3362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddfcb096-e5f7-4615-b46a-919889c42ca7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f6d0e16d-282f-435c-a557-59962a89e86b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O26.T027_CheckIn_MultiLeg_ Print Baggage Tag_OS" searchProperties="true"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Add_PNR_To_Request" id="9a7ffac7-6951-489f-90ad-ee438097343f"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="69c4a00b-4fbb-4688-9c10-74cf1c648e41"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="52d53cd4-c5a5-433c-82a2-9662293b7387"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval" id="c6eed7fe-a991-4867-a18f-5afe03339856"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513384"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value=" ${TCProperties#UsersessionId}"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513384_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#LastName}",

          "passengerFirstName": "${TCProperties#FirstName}",

          "bookingReference": "${TCProperties#PNR}",

          "flight": {

            "departureAirport": "${TCProperties#Origin_1st Segment}",
            "airlineCode": "${TCProperties#airlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_1st Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus" disabled="true"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus" disabled="true"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[0].checkinStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus_2nd Segment"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="4969914a-c3f6-4325-931f-6cefa55d8683" name="Contains"><con:configuration><token>baggagedata</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="booking-reference" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="departure-airport" value=""/>
</con:parameters><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Checkin_Request" id="b452ec2c-92bb-445c-84a1-0bb2a2ea6e0c" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bookingReference</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].identification.bookingReference</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Acceptance</con:targetStep><con:targetPath>.acceptanceRQ.passengers[0].bookingReference</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Acceptance" id="0eab577a-2c73-4524-a76c-47a83c9039e1" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513424"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513424_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "bookingReference": "WSTDEO",
   "passengerFirstName": "${TCProperties#FirstName}",
   "passengerLastName": "${TCProperties#LastName}",
   "flights": {"flight": [   {
      "departureAirport": "${TCProperties#Origin_1st Segment}",
      "airlineCode": "${TCProperties#POS}",
      "departureDate": "2017-11-28",
      "arrivalAirport": "${TCProperties#Destination_1st Segment}",
      "flightNumber": "108"
   }]}
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Document_Options" id="82073c35-7638-410b-af9b-202179c82ec3" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.identification[0].passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depratureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Acceptance</con:sourceStep><con:sourcePath>.checkinRecord[0].flightSeats[0].flight.departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Documnet_Options</con:targetStep><con:targetPath>.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Documnet_Options" id="8e09aeb7-6563-4fd1-ab91-2842ccc20ea5" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documentOptions" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Documnet_Options" id="c04aa9d2-67f4-4a03-9ff7-4089b4f699e1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513434"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513434_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "flights": {"flight": [   {
      "airlineCode": "LH",
      "departureAirport": "FRA",
      "departureDate": "2017-09-28",
      "arrivalAirport": "MUC",
      "flightNumber": "4271"
   }]},
   "identification": [{"passengerId": "2301C9F000012006FRA"}]
}</con:request><con:originalUri>http://localhost/api/v2/checkin/documents</con:originalUri><con:assertion type="JsonPath Match" id="20d53adf-0604-44c6-98a0-bc9cc98d78e6" name="VerifyDocumnetType(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].documentType</path><content>BOARDINGPASS</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="91f3a6a9-b544-49fa-a6c5-74ff7c6ad1f9" name="VerifyDeliveryOption(1)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[0]</path><content>RAW_DATA</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7dc26790-1e34-4861-a7e5-88d285051118" name="VerifyDeliveryOption(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[1]</path><content>MOBILE_VIA_PHONE_NUMBER</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d04b14c9-6b5c-4349-839f-7f9da21982d6" name="VerifyDeliveryOption(3)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[2]</path><content>HOME_PRINTED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0f453180-5e3e-4b27-a698-b8ab28ff4be8" name="VerifyDeliveryOption(4)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[3]</path><content>MOBILE_VIA_EMAIL</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="501c34d2-c58e-411c-857a-f6a040569dd4" name="VerifyDeliveryOption(5)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[0].deliveryOption[4]</path><content>AIRPORT_PICKUP</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e90be9cd-da0e-4e78-ac86-d63f01e7b849" name="VerifyDocumentType(2)"><con:configuration><path>.passengerDocumentOptions[0].documentOption[1].documentType</path><content>BAGTAG</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="flight-number" value=""/>
  <con:entry key="arrival-airport" value=""/>
  <con:entry key="airline-code" value=""/>
  <con:entry key="passenger-id" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="departure-date" value=""/>
  <con:entry key="type" value=""/>
  <con:entry key="arrivalAirport" value="${#Global#endAirport}"/>
</con:parameters><con:parameterOrder><con:entry>passenger-id</con:entry><con:entry>flight-number</con:entry><con:entry>departure-date</con:entry><con:entry>departure-airport</con:entry><con:entry>airline-code</con:entry><con:entry>arrival-airport</con:entry><con:entry>type</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Baggage_Registration" id="d7af02e2-a21d-41ed-ad8e-c9d131ffdfa6" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passenegrId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].passengerId</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.identification.passengerId</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengers.passenger[0].booking[0].segment[0].flightIdentification[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Baggage_Registration</con:targetStep><con:targetPath>.baggageRegistrationData.flights.flight[0].departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Baggage_Registration" id="7098b2de-0f0f-4fef-9103-9fd1fe60aca4" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Baggage_Registration" id="213ab3bf-f40e-46ed-ad29-dd41c6465750" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513444"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513444_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://10.160.6.119:8080</con:endpoint><con:request>{
   "identification": {"passengerId": "2301C9F000012006FRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight": [      {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-09-28",
         "arrivalAirport": "MUC",
         "flightNumber": "4271"
      }]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:assertion type="JsonPath Match" id="ef620263-4aa7-4a3d-a4c7-94047b63d1aa" name="VerifyBaggageRegistration"><con:configuration><path>.baggageRegistrationStatus.baggageBound[0].onDemandTagRegistrationResponse.responseCode</path><content>RC_OK</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Update_Bag_Tag" id="63285380-d5ff-4997-aaab-62badc24c49b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>passengerId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger[0].passengerId</con:sourcePath><con:targetType>PassengerID</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>depatureDate</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>DepatureDate</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>flightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_1st segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>bagTagNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.baggageData[0].bagTagNumber</con:sourcePath><con:targetType>Bagtag number1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>bagTagNumber2</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.baggageRegistrationStatus.baggageData[1].tagNumber</con:sourcePath><con:targetType>Bagtag number 2</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath>.documentGeneration.document[0].passengers.passenger[0].documentBounds[0].documentTypes.bagTagNumber[1]</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>flightNumber1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.flightNumber</con:sourcePath><con:targetType>FlightNumber_2nd segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_1st Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Origin_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_1st segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Destination_1st Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="true" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Origin_2nd Segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.originDestination.flightSegment[1].departureAirport</con:sourcePath><con:targetType xsi:nil="true"/><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>Destination_2nd segment</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].arrivalAirport</con:sourcePath><con:targetType>Destination_2nd Segment</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlineCode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>airlineCode1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].operatingAirline.airlineCode</con:sourcePath><con:targetType>airlineCode1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath xsi:nil="true"/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" disabled="false" entitize="false" ignoreEmpty="false" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>depatureDate1</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_Data_Retrieval</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[1].departureDate</con:sourcePath><con:targetType>DepatureDate1</con:targetType><con:targetStep>TCProperties</con:targetStep><con:targetPath/><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Document_Generation_Bag_Tag_Raw_Data" id="8966264a-3e69-4164-972b-70e637ab0979"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false" timeout="9000000000000000000000000000000000000000000000000000000"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513454"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="123456"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513454_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "passengers": {"passenger": [   {
      "identification": {"passengerId": "${TCProperties#PassengerID}"},
      "bound": [      {
         "flight":          [
                        {
               "departureAirport": "${TCProperties#Origin_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode}",
               "departureDate": "${TCProperties#DepatureDate}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_1st Segment}",
               "flightNumber": "${TCProperties#FlightNumber_1st segment}"
            },
                        {
                "departureAirport": "${TCProperties#Destination_1st Segment}",
               "airlineCode": "${TCProperties#airlineCode1}",
               "departureDate": "${TCProperties#DepatureDate1}",
               "type": "OPERATING",
               "arrivalAirport": "${TCProperties#Destination_2nd Segment}",
               "flightNumber": "${TCProperties#FlightNumber_2nd segment}"
            }
         ],
         "documentType": [         {
            "bagTagNumber":             [
   
               "${TCProperties#Bagtag number1}"

            ],
                      "numberOfBagTags": "1",
            "type": "BAGTAG"
         }]
      }]
   }]},
   "deliveryMethod": "RAW_DATA",
   "documentId": "docID12345"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse" disabled="true"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="4c958233-4131-4170-b44e-8f937e61a9b9" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" id="9f6c62d9-e27a-4633-9734-98a64377ca71" name="Contains"><con:configuration><token>baggageData</token><ignoreCase>true</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="61d6e372-5a69-4629-8e8d-0649d8b692f9"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="a002a531-ef25-4bfb-977e-4e91f9c52516"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property><con:property><con:name>language</con:name><con:value>en</con:value></con:property><con:property><con:name>Origin_1st Segment</con:name><con:value>MUC</con:value></con:property><con:property><con:name>Destination_1st Segment</con:name><con:value>FRA</con:value></con:property><con:property><con:name>Flight Number</con:name><con:value>111</con:value></con:property><con:property><con:name>PNR</con:name><con:value>P73LRM</con:value></con:property><con:property><con:name>FirstName</con:name><con:value>PAXYA</con:value></con:property><con:property><con:name>LastName</con:name><con:value>TESTYA</con:value></con:property><con:property><con:name>email</con:name><con:value>Sudhirmi@in.ibm.com</con:value></con:property><con:property><con:name>airlineIdentifier</con:name><con:value>220</con:value></con:property><con:property><con:name>FormcodeserialNumber</con:name><con:value>2386982576</con:value></con:property><con:property><con:name>DepatureDate</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>Bagtag number1</con:name><con:value>8947988944</con:value></con:property><con:property><con:name>Bagtag number 2</con:name><con:value/></con:property><con:property><con:name>Destination_2nd Segment</con:name><con:value>HAM</con:value></con:property><con:property><con:name>FlightNumber_1st segment</con:name><con:value>7032</con:value></con:property><con:property><con:name>FlightNumber_2nd segment</con:name><con:value>30</con:value></con:property><con:property><con:name>PassengerID</con:name><con:value>2301CAA400004553MUC</con:value></con:property><con:property><con:name>airlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>airlineCode1</con:name><con:value>LH</con:value></con:property><con:property><con:name>DepatureDate1</con:name><con:value>2018-03-27</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Passenger_Acceptance" id="683c9fd1-2e37-486c-9b6c-398413a0fc66" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/checkin-record" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Passenger_Acceptance" id="df571073-3dca-487b-82fe-9f3cffed6408" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513464"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513464_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{"acceptanceRQ": {"passengers": [{
   "passengerFirstName": "PAXONE",
   "flights": {"flight":    [
            {
         "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
      },
            {
         "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
      }
   ]},
   "passengerLastName": "DROPTENONE",
   "bookingReference": "WSTDEO"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/checkin-record</con:originalUri><con:assertion type="JsonPath Match" id="f104e7e1-3e6d-421c-b92c-869491c9ef8e" name="VerifyCheckinStatus"><con:configuration><path>.checkinRecord[0].flightSeats[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="84443c60-8835-47dc-ab19-6a13c7e08153" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/documents" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of Document_Generation_Bag_Tag_Raw_Data" id="5e9af47b-d1c3-4db2-95a7-96082142d62c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513474"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513474_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{"documentGeneration": {"document": [{
   "id": "docID12345",
   "passengers": {"passenger": [   {
      "documentBounds": [      {
         "documentTypes":          {
            "bagTagNumber":             [
               "4220002237",
               "4220002238"
            ],
            "documentType": ["BAGTAG"]
         },
         "flights": {"flight":          [
                        {
               "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
            },
                        {
               "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
            }
         ]}
      }],
      "identification": {"passengerId": "2301C9D20000547FHAM"}
   }]},
   "documentMedia": "RAW_DATA"
}]}}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/documents</con:originalUri><con:assertion type="JsonPath Match" id="47493c84-0981-4b18-ba22-fb666d114021" name="VerifyResponse"><con:configuration><path>.document[0].passengerDocument[0].passengerData.booking[0].segment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="baggage" id="dc2ec45b-111f-4248-8a54-13acc576236c" disabled="true"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers/baggage" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="baggage" id="8226f32c-b118-4c68-ad95-8344eaaed1b5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1522060513334_7207"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1522060513484"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1522060513334_7207"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1522060513484_7207"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "identification": {"passengerId": "2301DA2D00005F2DFRA"},
   "baggageRegistrationData":    {
      "numberOfOnDemandTags": "2",
      "flights": [{"flight":       [
                  {
            "airlineCode": "LH",
         "departureAirport": "FRA",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "MUC",
         "flightNumber": "108"
         },
                  {
             "airlineCode": "LH",
         "departureAirport": "MUC",
         "departureDate": "2017-11-28+02:00",
         "arrivalAirport": "JFK",
         "flightNumber": "4374"
         }
      ]}]
   }
}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers/baggage</con:originalUri><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value/></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property></con:properties><con:reportParameters/><con:breakPoints><con:testStepId>182a44a0-107d-4409-b463-42f44c2f3362</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ddfcb096-e5f7-4615-b46a-919889c42ca7</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="2bbfbeaa-dd3f-451f-b087-28ebff7bbb9e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O16.T028_Passenger_DataRetrieval_With_TicketNumber_LH" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Add ADCHeader" id="f4c3a808-d927-4e04-904f-ab387a523a10" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="e0444269-f202-4e6e-acbd-e5e8269b30dc"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>airlineidentifier</con:name><con:value>220</con:value></con:property><con:property><con:name>formcodeserialnumber</con:name><con:value>2392509185</con:value></con:property><con:property><con:name>departureAirport</con:name><con:value>MUC</con:value></con:property><con:property><con:name>couponNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>AirlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5ae185d52d8889138098f316</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="a5fa038d-81bd-47c4-9ab9-fd8aef2b5c90"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="a1547ea0-9b5c-4e9e-ae53-f193d78bfb5b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval_With_TicketNumber" id="5c446624-c290-4469-be10-4efd15b3a320"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval_With_TicketNumber" id="0d223898-8454-4aab-bf24-f2a4e64375f3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1519656636261_6925"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1519656636292"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1519656636292"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1519656636261_6925"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1519656636292_6925"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"passengers": {
		"passenger": [
			{
				"identification": {
					"ticketNumber": {
						"airlineIdentifier": "${TCProperties#airlineidentifier}",
						"serialNumber": "${TCProperties#formcodeserialnumber}",
						"couponNumber": "1"
					},
					"flight": {
						"airlineCode": "${TCProperties#AirlineCode}",
						"departureAirport": "${TCProperties#departureAirport}",
						"type": "OPERATING"
					}
				}
			}
		]
	},
	"dcsOnly": "true"
}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="0181c7d5-1cb2-43aa-9cd5-98443c9e389e" name="VerifyCheckinStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment.checkinStatus[0]</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f80d958a-ff83-48d9-b244-ce7e7774e73d" name="VerifyBookingStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment.bookingStatus[0]</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="booking-reference" value=""/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="3838f92e-9d45-497c-82de-db1a94762d69"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>8689</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property></con:properties></con:testCase><con:testCase id="2817cbc3-3e4f-40e2-a505-511cf285f75e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O16.T030_Passenger_DataRetrieval_With_TicketNumber_LX" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Add ADCHeader" id="2861d2f6-e684-4c66-b0e6-e49b3fd75413" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="bf626360-1aed-4085-8911-bd3dd27137c4"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>airlineidentifier</con:name><con:value>724</con:value></con:property><con:property><con:name>formcodeserialnumber</con:name><con:value>2308738844</con:value></con:property><con:property><con:name>departureAirport</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>couponNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>AirlineCode</con:name><con:value>LX</con:value></con:property><con:property><con:name>POS</con:name><con:value>LX</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5ae186522d8889138098f317</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="86642cda-96ab-4b9f-8bde-57a56c425165"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524487649286_1224"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524487649302"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524487649286_1224"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524487649302_1224"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="8f3165c4-9bac-447d-952a-3724ae8d59a9"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval_With_TicketNumber" id="f0eb72d5-a6c6-4769-b4ec-dbbc63a48c08"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval_With_TicketNumber" id="0d223898-8454-4aab-bf24-f2a4e64375f3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1524487649286_1224"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1524487649333"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1524487649333"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1524487649286_1224"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1524487649333_1224"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"passengers": {
		"passenger": [
			{
				"identification": {
					"ticketNumber": {
						"airlineIdentifier": "${TCProperties#airlineidentifier}",
						"serialNumber": "${TCProperties#formcodeserialnumber}",
						"couponNumber": "1"
					},
					"flight": {
						"airlineCode": "${TCProperties#AirlineCode}",
						"departureAirport": "${TCProperties#departureAirport}",
						"type": "OPERATING"
					}
				}
			}
		]
	},
	"dcsOnly": "true"
}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="0181c7d5-1cb2-43aa-9cd5-98443c9e389e" name="VerifyCheckinStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment.checkinStatus[0]</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f80d958a-ff83-48d9-b244-ce7e7774e73d" name="VerifyBookingStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment.bookingStatus[0]</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="booking-reference" value=""/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="4e8df523-f896-4c8a-99e2-e4614d2b7e35"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>8691</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property></con:properties></con:testCase><con:testCase id="80e38dab-6caa-4ad6-bcf3-06678df0cd5a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O16.T029_Passenger_DataRetrieval_With_TicketNumber_OS" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Add ADCHeader" id="a7858a0e-fdc1-401a-9753-6145cce427ae" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="eadc9dad-9bfe-4dac-a47e-edd1aded8982"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>airlineidentifier</con:name><con:value>257</con:value></con:property><con:property><con:name>formcodeserialnumber</con:name><con:value>2147137506</con:value></con:property><con:property><con:name>departureAirport</con:name><con:value>FRA</con:value></con:property><con:property><con:name>couponNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>AirlineCode</con:name><con:value>OS</con:value></con:property><con:property><con:name>POS</con:name><con:value>OS</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b0ce36486c56b7fcf4fc60a</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="1125ce36-4d5e-4a8c-960b-3a0c56883fa0"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1527571249463_5555"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1527571249463"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1527571249463"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="123456"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1527571249463_5555"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1527571249463_5555"/>
</xml-fragment>]]></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="972dcdae-2d7e-4325-8755-2d1a9f6a665f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval_With_TicketNumber" id="fe88e7aa-cceb-4f2c-a9de-aa2b1cf337c2"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval_With_TicketNumber" id="0d223898-8454-4aab-bf24-f2a4e64375f3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1527571249463_5555"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1527571249479"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1527571249479"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="com.datalex.tdp.rest.PointOfSale" value="LH"/>
  <con:entry key="com.datalex.tdp.rest.UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1527571249463_5555"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1527571249479_5555"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
	"passengers": {
		"passenger": [
			{
				"identification": {
					"ticketNumber": {
						"airlineIdentifier": "${TCProperties#airlineidentifier}",
						"serialNumber": "${TCProperties#formcodeserialnumber}",
						"couponNumber": "1"
					},
					"flight": {
						"airlineCode": "${TCProperties#AirlineCode}",
						"departureAirport": "${TCProperties#departureAirport}",
						"type": "OPERATING"
					}
				}
			}
		]
	},
	"dcsOnly": "true"
}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="0181c7d5-1cb2-43aa-9cd5-98443c9e389e" name="VerifyCheckinStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment.checkinStatus[0]</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f80d958a-ff83-48d9-b244-ce7e7774e73d" name="VerifyBookingStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment.bookingStatus[0]</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="booking-reference" value=""/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="499ee903-df61-4472-a193-a4df7dd954e2"><con:settings/><con:config><script>def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath
def currentStepInd = context.currentStepIndex
def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}

def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)

public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")	
	f.append (value + '\n')
	
}
log.info("Both RAW Request and Response are captured")
</script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>8690</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property></con:properties></con:testCase><con:testCase id="30ad6618-f9f0-4063-8dc8-b066363ab793" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O16.T031_Passenger_DataRetrieval_With_BoardingPass_LH" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="558199f8-1957-4ba4-9000-a00b58c3fe1a" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="70a0b5fb-80d1-45c9-96da-c89cef6da152"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>airlineidentifier</con:name><con:value>220</con:value></con:property><con:property><con:name>formcodeserialnumber</con:name><con:value>TV69NI</con:value></con:property><con:property><con:name>departureAirport</con:name><con:value>MUC</con:value></con:property><con:property><con:name>couponNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>bookingReference</con:name><con:value>UD5O76</con:value></con:property><con:property><con:name>passengerLastName</con:name><con:value>Keineahnung</con:value></con:property><con:property><con:name>passengerFirstName</con:name><con:value>Kuno</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>MUC</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5ae185b52d8889138098f315</con:value></con:property><con:property><con:name>AirlineCode</con:name><con:value>LH</con:value></con:property><con:property><con:name>POS</con:name><con:value>LH</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="c1881fd0-9641-4638-bee5-16a58e9bd831"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="0e98bcfe-02c7-4592-b86b-b800beff1bed"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval_With PNR" id="acd772e1-abd7-4237-a0ce-6223edc22388"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval_With PNR" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518511314924_1492"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518511315127"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518511315127"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518511314924_1492"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518511315127_1492"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#passengerLastName}",

          "passengerFirstName": "${TCProperties#passengerFirstName}",

          "bookingReference": "${TCProperties#bookingReference}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#AirlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="d2413cd1-4866-41db-a41d-abe85c0650ef"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="758ced11-ce67-46e5-a0a7-16563ff7af46"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Security Number</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment.checkinSequence[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.securityNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>FlightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Departure date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureairport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalairport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval_With_BoardingPass" id="1fff305f-06e0-48b7-81c4-212fb90a55a7"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval_With_BoardingPass" id="0d223898-8454-4aab-bf24-f2a4e64375f3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518586735398_5061"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518586735398"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518586735398"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518586735398_5061"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518586735398_5061"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [{"identification":    {
      "securityNumber": "002",
      "flight":       {
         "departureAirport": "MUC",
         "airlineCode": "LH",
         "departureDate": "2018-04-27",
         "type": "OPERATING",
         "arrivalAirport": "HAM",
         "flightNumber": "2058"
      }
   }}]},
   "dcsOnly": "true"
}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="0181c7d5-1cb2-43aa-9cd5-98443c9e389e" name="VerifyCheckinStatus"><con:configuration><path>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f80d958a-ff83-48d9-b244-ce7e7774e73d" name="VerifyBookingStatus" disabled="true"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="booking-reference" value=""/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture_Boardingpass" id="db611e26-5fa6-4f3c-b541-e2fbc72e0e3f"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>14764</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property></con:properties></con:testCase><con:testCase id="a644e790-b9a4-48a6-97c0-f849a65afc0d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O16.T032_Passenger_DataRetrieval_With_BoardingPass_LX" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="aec43f94-85e0-4df7-a62d-45458dbd7c9f" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="2566d691-73e5-468a-bb1e-941f544812d3"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>airlineidentifier</con:name><con:value>724</con:value></con:property><con:property><con:name>formcodeserialnumber</con:name><con:value>LOXB38</con:value></con:property><con:property><con:name>departureAirport</con:name><con:value>ZRH</con:value></con:property><con:property><con:name>couponNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>bookingReference</con:name><con:value>LOXB38</con:value></con:property><con:property><con:name>passengerLastName</con:name><con:value>Keineahnung</con:value></con:property><con:property><con:name>passengerFirstName</con:name><con:value>Kuno</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>GVA</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b0bd2b686c56b62f8a176c6</con:value></con:property><con:property><con:name>AirlineCode</con:name><con:value>LX</con:value></con:property><con:property><con:name>POS</con:name><con:value>LX</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="73ea1143-373a-4850-9dc0-cfac5e85191f"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="69a28a2a-e7fc-462a-85fd-ed0ac89697f4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval_With PNR" id="726fde7d-02b1-46d8-8942-1ac354c23cf3"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval_With PNR" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518511314924_1492"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518511315127"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518511315127"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518511314924_1492"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518511315127_1492"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#passengerLastName}",

          "passengerFirstName": "${TCProperties#passengerFirstName}",

          "bookingReference": "${TCProperties#bookingReference}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#AirlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="ba1e3f47-1865-47bd-8041-a7739c93fec1"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="d23ae49e-cd03-4867-9fc2-e7fb1c2c60ad"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Security Number</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment.checkinSequence[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.securityNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>FlightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Departure date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureairport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalairport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval_With_BoardingPass" id="25ddee5a-4f45-471b-b48f-7aa6775d4c8d"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval_With_BoardingPass" id="0d223898-8454-4aab-bf24-f2a4e64375f3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518586735398_5061"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518586735398"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518586735398"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518586735398_5061"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518586735398_5061"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [{"identification":    {
      "securityNumber": "001",
      "flight":       {
         "departureAirport": "GVA",
         "airlineCode": "LX",
         "departureDate": "2018-05-28",
         "type": "OPERATING",
         "arrivalAirport": "ZRH",
         "flightNumber": "2811"
      }
   }}]},
   "dcsOnly": "true"
}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="0181c7d5-1cb2-43aa-9cd5-98443c9e389e" name="VerifyCheckinStatus"><con:configuration><path>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f80d958a-ff83-48d9-b244-ce7e7774e73d" name="VerifyBookingStatus" disabled="true"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="booking-reference" value=""/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture_Boardingpass" id="8570219a-aba0-4f3c-8b84-efd3df27d336"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>14765</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property></con:properties></con:testCase><con:testCase id="076f8c22-8ab0-44c3-87ec-ccb18d811073" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="D09.F014.S002.O16.T033_Passenger_DataRetrieval_With_BoardingPass_OS" searchProperties="true"><con:settings/><con:testStep type="groovy" name="AddADCHeader" id="62bce664-8bd4-45aa-98eb-9c5ce8f91420" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper;
import com.eviware.soapui.impl.wsdl.teststeps.WsdlTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep
import com.eviware.soapui.impl.wsdl.teststeps.JdbcRequestTestStep
import com.eviware.soapui.impl.wsdl.teststeps.HttpTestRequestStep
import com.eviware.soapui.support.types.StringToStringMap;

def index = context.currentStepIndex

//prepare calendar for later usage in Header generation
Date currentDate = new Date();
randomInt = new Random().nextInt(9999-1000+1)+1000

//calculate ADCHeaders

//calculate ADCHeaders
def applicationID = "TC-ID"
def customerID = "LH"
def callerID = "TDP-APP_callerID"
//def messageID = currentDate.getTime().toString() + "_" + randomInt
def status = "NA"
def sessionID = "SID_12345"
def conversationID = "ADC_" + currentDate.getTime().toString() + "_" + randomInt
def relatesTo = ""
//def originalMessageTimestamp = currentDate.getTime().toString()
//def currentMessageTimestamp = currentDate.getTime().toString()
def originatingApplicationName = "SOAP-UI"
def originatingProcessName = "TestRun_" + currentDate.getTime().toString() + "_" + randomInt
def UserSessionId=""

//create a new empty map for headers
def headers = new StringToStringMap();
//headers.clear();



//set header values for ADCHeader and HTTP Accept field
headers.put( "Accept", "application/json")

//checkin: pos/LanguageCode/userssionID for Checkin flow
headers.put( "pos", "LH")
headers.put( "LanguageCode", "en")             

//
//def userSessionId = testRunner.testCase.testSuite.project.getPropertyValue("userSessionId_LH")
def userSessionId="123456"
log.info("userSessionId:>>>>"+userSessionId)
headers.put( "UserSessionId",userSessionId)
// end of CheckIn flow

headers.put( "ApplicationID", applicationID)
headers.put( "CustomerID", customerID)
headers.put( "CallerID", callerID)
//headers.put( "MessageID", messageID)
headers.put( "Status", status)
headers.put( "SessionID", sessionID)
headers.put( "ConversationID", conversationID)
headers.put( "RelatesTo", relatesTo)
//headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
//headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)
headers.put( "OriginatingApplicationName", originatingApplicationName)
headers.put( "OriginatingProcessName", originatingProcessName)

//obtain the list of test steps
def steps = context.testCase.getTestStepList();

log.info("No of Test steps :"+steps.size());

for (int i=1;i&lt;steps.size();i=i+1){

//Need to change for every request
def messageID = System.currentTimeMillis() + "_" + randomInt
log.info("messageID------>" +messageID)
def originalMessageTimestamp = System.currentTimeMillis().toString()
log.info("originalMessageTimestamp-------->"+originalMessageTimestamp)
def currentMessageTimestamp = System.currentTimeMillis().toString()
log.info("currentMessageTimestamp---------->"+currentMessageTimestamp)  
     
 //set header values for ADCHeader and HTTP Accept field
 
     headers.put( "MessageID", messageID)
     headers.put( "OriginalMessageDateTimeUTC", originalMessageTimestamp)
     headers.put( "CurrentMessageDateTimeUTC", currentMessageTimestamp)

      def step= context.testCase.getTestStepAt(i)
       if (step instanceof RestTestRequestStep){
       def request = context.testCase.getTestStepAt(index+i).testRequest
   // def requests = context.testCase.getTestStepsOfType( com.eviware.soapui.impl.wsdl.teststeps.RestTestRequestStep.class )
    //log.info(requests.size())
   // headers.clear();
    request.requestHeaders = headers
    sleep(10)
       }
}</script></con:config></con:testStep><con:testStep type="properties" name="TCProperties" id="3d078a13-26ae-488c-96a9-5b62f007cd0c"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>airlineidentifier</con:name><con:value>724</con:value></con:property><con:property><con:name>formcodeserialnumber</con:name><con:value>TV69NI</con:value></con:property><con:property><con:name>departureAirport</con:name><con:value>VIE</con:value></con:property><con:property><con:name>couponNumber</con:name><con:value>1</con:value></con:property><con:property><con:name>bookingReference</con:name><con:value>LTLNUW</con:value></con:property><con:property><con:name>passengerLastName</con:name><con:value>Keineahnung</con:value></con:property><con:property><con:name>passengerFirstName</con:name><con:value>Kuno</con:value></con:property><con:property><con:name>Outbound_Origin</con:name><con:value>VIE</con:value></con:property><con:property><con:name>UsersessionId</con:name><con:value>5b0ce55386c56b7fcf4fc60b</con:value></con:property><con:property><con:name>AirlineCode</con:name><con:value>OS</con:value></con:property><con:property><con:name>POS</con:name><con:value>OS</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Session" id="6bcab7e1-6bd6-4fce-945e-5d203655eff4"><con:settings/><con:config service="http://localhost:11180" methodName="Method 1" resourcePath="/core-internal/v1/session" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Session" id="f4bd836d-742c-4da6-bcaa-53386a1311a1" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#endpoint}</con:endpoint><con:request>{
    "session": {
        "pos": "${TCProperties#POS}"
    }
}</con:request><con:originalUri>http://10.160.6.165/core-internal/v1/session</con:originalUri><con:assertion type="Simple Contains" id="b128e749-e063-4319-a516-10756244f5a0" name="Contains"><con:configuration><token>userSessionId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="8fb441d7-93f7-4f21-a519-37081f8a778d" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Session Transfer" id="30ad9a51-d3ef-47c3-beec-f1f24648e77b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>UsersessionId</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Session</con:sourceStep><con:sourcePath>$.userSessionId</con:sourcePath><con:targetType>UsersessionId</con:targetType><con:targetStep>TCProperties</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_data_retrieval_With PNR" id="e03f3f11-daa8-4f53-9706-7ded119baff3"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_data_retrieval_With PNR" id="2d20109c-09b6-4d2f-a5db-ec616cb43b95" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518511314924_1492"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518511315127"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518511315127"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518511314924_1492"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518511315127_1492"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{

  "passengers": {

    "passenger": [

      {

        "identification": {

          "passengerLastName": "${TCProperties#passengerLastName}",

          "passengerFirstName": "${TCProperties#passengerFirstName}",

          "bookingReference": "${TCProperties#bookingReference}",

          "flight": {

            "departureAirport": "${TCProperties#Outbound_Origin}",
            "airlineCode": "${TCProperties#AirlineCode}",
            "type": "OPERATING"

          }

        }

      }

    ]

  },

  "dcsOnly": "true"

}</con:request><con:originalUri>http://localhost/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="515a0650-c7e7-4ac6-9e7f-9575ecf4d44e" name="VerifyFlightStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].flightStatus</path><content>OPEN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b70826a7-5e0f-413f-8b61-2dee23faf8f5" name="VerifyCheckinStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].checkinStatus</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="559d4377-a0ae-4e09-b1fc-f0e8efae3de7" name="VerifyBookingStatus"><con:configuration><path>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="a21bf415-59ee-4ab3-ad52-f48019daa667" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="50b63d83-f686-46dd-a69a-bf4b6a244fb6" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseHeaders["conversationid"] == messageExchange.requestHeaders["ConversationID"]
assert messageExchange.responseHeaders["conversationid"] != null
assert messageExchange.responseHeaders["#status#"] != null
assert messageExchange.responseHeaders["currentmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["originalmessagedatetimeutc"] != null
assert messageExchange.responseHeaders["customerid"] != null
assert messageExchange.responseHeaders["relatesto"] != null
assert messageExchange.responseHeaders["originatingapplicationname"] != null
assert messageExchange.responseHeaders["originatingprocessname"] != null
assert messageExchange.responseHeaders["applicationid"] != null
assert messageExchange.responseHeaders["sessionid"] != null
assert messageExchange.responseHeaders["callerid"] != null
assert messageExchange.responseHeaders["messageid"] != null </scriptText></con:configuration></con:assertion><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry>booking-reference</con:entry><con:entry>passenger-first-name</con:entry><con:entry>departure-airport</con:entry><con:entry>passenger-last-name</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture" id="cd1ef1d2-0739-4942-a657-b21fbc5a7a3e" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="36ebcd16-8ee9-41b4-8115-25233b68dd66"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Security Number</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment.checkinSequence[0]</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.securityNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>FlightNumber</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.flightNumber</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.flightNumber</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Departure date</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureDate</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.departureDate</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>airlinecode</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].operatingAirline.airlineCode</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.airlineCode</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>departureairport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].departureAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.departureAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>arrivalairport</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Passenger_data_retrieval_With PNR</con:sourceStep><con:sourcePath>.passengerSearch.passenger.checkInInfo.itinerary.bound.flightSegment[0].arrivalAirport</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Passenger_Data_Retrieval_With_BoardingPass</con:targetStep><con:targetPath>.passengers.passenger.identification.flight.arrivalAirport</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Passenger_Data_Retrieval_With_BoardingPass" id="1cb1ab19-efbe-445a-b9a4-d7f905e7ec5f"><con:settings/><con:config service="http://localhost:11180" resourcePath="/api/v2/checkin/passengers" methodName="Method 2" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Passenger_Data_Retrieval_With_BoardingPass" id="0d223898-8454-4aab-bf24-f2a4e64375f3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Status" value="NA"/>
  <con:entry key="ConversationID" value="ADC_1518586735398_5066"/>
  <con:entry key="Accept" value="application/json"/>
  <con:entry key="CurrentMessageDateTimeUTC" value="1518586735398"/>
  <con:entry key="OriginalMessageDateTimeUTC" value="1518586735398"/>
  <con:entry key="CustomerID" value="LH"/>
  <con:entry key="RelatesTo" value=""/>
  <con:entry key="UserSessionId" value="${TCProperties#UsersessionId}"/>
  <con:entry key="LanguageCode" value="en"/>
  <con:entry key="OriginatingApplicationName" value="SOAP-UI"/>
  <con:entry key="pos" value="LH"/>
  <con:entry key="OriginatingProcessName" value="TestRun_1518586735398_5061"/>
  <con:entry key="ApplicationID" value="TC-ID"/>
  <con:entry key="SessionID" value="SID_12345"/>
  <con:entry key="CallerID" value="TDP-APP_callerID"/>
  <con:entry key="MessageID" value="1518586735398_5061"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>${#Project#endpoint1}</con:endpoint><con:request>{
   "passengers": {"passenger": [{"identification":    {
      "securityNumber": "001",
      "flight":       {
         "departureAirport": "VIE",
         "airlineCode": "OS",
         "departureDate": "2018-05-29",
         "type": "OPERATING",
         "arrivalAirport": "INN",
         "flightNumber": "903"
      }
   }}]},
   "dcsOnly": "true"
}</con:request><con:originalUri>http://10.160.6.119/api/v2/checkin/passengers</con:originalUri><con:assertion type="JsonPath Match" id="0181c7d5-1cb2-43aa-9cd5-98443c9e389e" name="VerifyCheckinStatus"><con:configuration><path>.passengerSearch.passenger[0].checkInInfo.itinerary.bound.flightSegment.checkinStatus[0]</path><content>CHECKED_IN</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f80d958a-ff83-48d9-b244-ce7e7774e73d" name="VerifyBookingStatus" disabled="true"><con:configuration><path>.passengers.passenger[0].booking[0].segment[0].bookingStatus</path><content>CONFIRMED</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="passenger-first-name" value=""/>
  <con:entry key="passenger-last-name" value=""/>
  <con:entry key="departure-airport" value=""/>
  <con:entry key="booking-reference" value=""/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REQ-RES-Capture_Boardingpass" id="fa8a3b32-6f96-439f-9139-3f877d386e8b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )
def projectDir = groovyUtils.projectPath

def slurper = new JsonSlurper()
def currentStepInd = context.currentStepIndex


def ResponsetestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Response}"
def response = context.expand( ResponsetestCaseNameHolder )
def RequesttestCaseNameHolder = "\$" + "{" + testRunner.testCase.getTestStepAt(currentStepInd - 1).name + "#Request}"
def request = context.expand( RequesttestCaseNameHolder )

def jsonRes = slurper.parseText(response)
def testCaseOutput = testRunner.testCase.getName()
def resultExtension = ".doc"

//Create directory for reservation details
def folder = new File("$projectDir/$testCaseOutput") 
if(!folder.exists() ) {
   folder.mkdirs()
}


def now = Calendar.getInstance()  
def calendarString = now.format("EEE, MMM-dd-yyyy h:mm:ss a z") 


writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Request Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  request)

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "=========================================================================")

writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  "Response Time Stamp:" + calendarString)
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  " " )
writeToFile( projectDir +  "/"+ testCaseOutput , testRunner.testCase.getTestStepAt(currentStepInd - 1).name, resultExtension,  response)




public void writeToFile(def projectDir, def fileName, def extension, def value) {
	File f = new File ("$projectDir/$fileName$extension")
	f.append (value + '\n')
} </script></con:config></con:testStep><con:properties><con:property><con:name>QC_Id</con:name><con:value>14766</con:value></con:property><con:property><con:name>QC_Req_Ids</con:name><con:value/></con:property><con:property><con:name>QC_Req_Recursive</con:name><con:value/></con:property><con:property><con:name>QC_Mapped_Test_Id</con:name><con:value/></con:property><con:property><con:name>Status</con:name><con:value>Review ok</con:value></con:property><con:property><con:name>Test Name</con:name><con:value>Test Name</con:value></con:property><con:property><con:name>Type</con:name><con:value>MANUAL</con:value></con:property><con:property><con:name>Designer</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>Inbound Flight </con:name><con:value/></con:property><con:property><con:name>Priority</con:name><con:value>Priority 1</con:value></con:property><con:property><con:name>Cluster</con:name><con:value>Other</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>QC_TestPlanDirectory</con:name><con:value>Subject\Airline.com\Integration Test\Drop 9\DLX\REST\CheckIn</con:value></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value>Root\Integration Test\Drop 13\Regression 2\DLX\REST\CheckIn</con:value></con:property><con:property><con:name>QC_TestSet</con:name><con:value>CheckIn_ServiceCall</con:value></con:property><con:property><con:name>Product</con:name><con:value/></con:property></con:properties></con:testSuite><con:requirements/><con:properties><con:property><con:name>QC_URL</con:name><con:value>https://almlufthansa.saas.hpe.com/qcbin</con:value></con:property><con:property><con:name>QC_Domain</con:name><con:value>AIRL_IT_COMMERCIAL</con:value></con:property><con:property><con:name>QC_Project</con:name><con:value>Airline_COM</con:value></con:property><con:property><con:name>QC_user</con:name><con:value>dkumar</con:value></con:property><con:property><con:name>QC_password</con:name><con:value>iLMcD4IhynEYgmCN8ff1EA==</con:value></con:property><con:property><con:name>QC_TestPlanDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestLabDirectory</con:name><con:value/></con:property><con:property><con:name>QC_TestSet</con:name><con:value>REST</con:value></con:property><con:property><con:name>QC_soapUI_ARGS</con:name><con:value/></con:property><con:property><con:name>QC_BulkUpdate</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_RunName</con:name><con:value/></con:property><con:property><con:name>QC_ProjectPath</con:name><con:value>c:\soapui-projectsQC_Export_Disabled_Tests=disabled</con:value></con:property><con:property><con:name>QC_soapUIPath</con:name><con:value/></con:property><con:property><con:name>QC_Export_Disabled_Tests</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_Dragonfly_Plugin</con:name><con:value>disabled</con:value></con:property><con:property><con:name>QC_Override_Test_Runs</con:name><con:value>disabled</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>http://localhost:11180</con:value></con:property><con:property><con:name>endpoint1</con:name><con:value>http://localhost:11199</con:value></con:property><con:property><con:name>Product</con:name><con:value>Admin_Portal</con:value></con:property><con:property><con:name>Some Property</con:name><con:value>with a value</con:value></con:property><con:property><con:name>POS</con:name><con:value>LX</con:value></con:property><con:property><con:name>NDC-Path</con:name><con:value>ndc-server/ndc</con:value></con:property><con:property><con:name>userSessionId_LH</con:name><con:value>5b0549272d88895550c4e742</con:value></con:property><con:property><con:name>userSessionId_LX</con:name><con:value>5acc4d952d88896629a4f3c4</con:value></con:property><con:property><con:name>userSessionId_OS</con:name><con:value/></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/><con:authRepository/><con:loadUiTest name="LoadUI NG Test 1" id="fe2d2e4f-5c3a-4553-a529-15ec9cc70d6a"><con:settings><con:setting id="soapUIObjectSourceId">74a7cffa-c0ad-4329-a09e-260cf3ff8d94</con:setting><con:setting id="soapUIObjectSourceType">soapUIObjectSourceType_RestRequest</con:setting></con:settings><con1:loadui-project id="488fa25a-0f8e-4b31-b305-a57aa86b0206" label="LoadUI NG Test 1" xmlns:con1="http://eviware.com/loadui/config"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/><con1:property propagates="true" key="Temporary project" type="java.lang.String"/><con1:property propagates="true" key="ModelItem.rate" type="java.lang.Long">20</con1:property><con1:property propagates="true" key="ModelItem.loadDistributionType" type="com.smartbear.load.facade.LoadDistributionType">Relative</con1:property><con1:property propagates="true" key="ModelItem.remoteMode" type="java.lang.String"/></con1:properties><con1:attributes><con1:property key="limits">Time=600;</con1:property></con1:attributes><con1:addons><con1:addon type="com.eviware.loadui.pro.api.monitoring.ServerAddon" id="df9e79b3-3ba8-4726-b6b4-13206fd44edd"><con1:properties><con1:property propagates="false" key="ServerItem.host" type="java.lang.String">My server 1</con1:property><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/></con1:properties><con1:attributes><con1:property key="label">My server 1</con1:property></con1:attributes><con1:addons><con1:addon type="monitor" id="fb9cdcae-23e5-4ef2-8db9-dd30d5133072"><con1:properties><con1:property propagates="true" key="_storedProperties[typeperf]" type="java.lang.String"/><con1:property propagates="true" key="monitorName" type="java.lang.String">My monitor</con1:property></con1:properties><con1:attributes><con1:property key="_type">Windows</con1:property></con1:attributes><con1:addons/></con1:addon></con1:addons></con1:addon><con1:addon type="com.eviware.loadui.api.assertion.AssertionAddon" id="bc89c753-6f7e-4e47-b095-0bf6e249a0ad"><con1:attributes><con1:property key="parentId">488fa25a-0f8e-4b31-b305-a57aa86b0206</con1:property><con1:property key="valueReference">rO0ABXNyADdjb20uZXZpd2FyZS5sb2FkdWkudXRpbC5zZXJpYWxpemF0aW9uLlN0YXRpc3RpY1Jlc29sdmVyJwTr+w+xV3ECAARMAA1ob2xkZXJBZGRyZXNzdAASTGphdmEvbGFuZy9TdHJpbmc7TAAGc291cmNlcQB+AAFMAA1zdGF0aXN0aWNOYW1lcQB+AAFMAAx2YXJpYWJsZU5hbWVxAH4AAXhwdAAkNDg4ZmEyNWEtMGY4ZS00YjMxLWIzMDUtYTU3YWE4NmIwMjA2dAAEbWFpbnQAB0FWRVJBR0V0AApUaW1lIFRha2Vu</con1:property><con1:property key="Labeled@label">Time Taken - average</con1:property><con1:property key="constraint">rO0ABXNyADFjb20uZXZpd2FyZS5sb2FkdWkudXRpbC5hc3NlcnRpb24uUmFuZ2VDb25zdHJhaW50Y94NW62dOawCAAJEAANtYXhEAANtaW54cECJAAAAAAAAAAAAAAAAAAA=</con1:property><con1:property key="tolerancePeriod">0</con1:property><con1:property key="toleranceAllowedOccurrences">0</con1:property><con1:property key="stopTestOnFailure">false</con1:property></con1:attributes><con1:addons/></con1:addon><con1:addon type="com.eviware.loadui.api.assertion.AssertionAddon" id="aea8bc62-5a6a-47c5-afb0-1665d8e81f40"><con1:attributes><con1:property key="parentId">488fa25a-0f8e-4b31-b305-a57aa86b0206</con1:property><con1:property key="valueReference">rO0ABXNyADdjb20uZXZpd2FyZS5sb2FkdWkudXRpbC5zZXJpYWxpemF0aW9uLlN0YXRpc3RpY1Jlc29sdmVyJwTr+w+xV3ECAARMAA1ob2xkZXJBZGRyZXNzdAASTGphdmEvbGFuZy9TdHJpbmc7TAAGc291cmNlcQB+AAFMAA1zdGF0aXN0aWNOYW1lcQB+AAFMAAx2YXJpYWJsZU5hbWVxAH4AAXhwdAAkNDg4ZmEyNWEtMGY4ZS00YjMxLWIzMDUtYTU3YWE4NmIwMjA2dAAEbWFpbnQAA01BWHQAClRpbWUgVGFrZW4=</con1:property><con1:property key="Labeled@label">Time Taken - max</con1:property><con1:property key="constraint">rO0ABXNyADFjb20uZXZpd2FyZS5sb2FkdWkudXRpbC5hc3NlcnRpb24uUmFuZ2VDb25zdHJhaW50Y94NW62dOawCAAJEAANtYXhEAANtaW54cECJAAAAAAAAAAAAAAAAAAA=</con1:property><con1:property key="tolerancePeriod">0</con1:property><con1:property key="toleranceAllowedOccurrences">0</con1:property><con1:property key="stopTestOnFailure">false</con1:property></con1:attributes><con1:addons/></con1:addon></con1:addons><con1:scene label="New Scenario" id="f226eec8-4746-450c-919a-7b5f9b207733" version="15"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="SceneItem.scenarioRatePercentage" type="java.lang.Long">100</con1:property><con1:property propagates="true" key="SceneItem.scenarioRateSpecific" type="java.lang.Long">10</con1:property></con1:properties><con1:attributes><con1:property key="limits">Time=600;</con1:property></con1:attributes><con1:addons/><con1:component type="com.eviware.loadui.impl.component.IntervalComponent" label="Interval 1" id="3e11ddf6-75fe-4edf-bf47-af3d25b4d62d" category="Scheduler"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="startAt" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="duration" type="java.lang.Long">5</con1:property><con1:property propagates="true" key="unit" type="java.lang.String">Sec</con1:property><con1:property propagates="true" key="mode" type="java.lang.String">Single</con1:property><con1:property propagates="true" key="defaultMode" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Interval</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="OM_Flow:PNR-Creation" id="7144c3b4-870e-45b2-a8cb-2d43917797f6" category="Runners"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="concurrentSamples" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="property_name_is_not_relevant_for_private_property" type="java.lang.Long">9223372036854775807</con1:property><con1:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con1:property><con1:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disabledTestSteps" type="java.lang.String"/><con1:property propagates="true" key="_thinkTime" type="java.lang.Long">0</con1:property><con1:property propagates="true" key="ReadyApiTestCase" type="com.eviware.soapui.impl.wsdl.testcase.WsdlTestCase">74a7cffa-c0ad-4329-a09e-260cf3ff8d94</con1:property><con1:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con1:property><con1:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con1:property><con1:property propagates="true" key="forceShareDatasources" type="java.lang.Boolean">true</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Ready API TestCase Runner</con1:property></con1:attributes><con1:addons/></con1:component><con1:component type="com.eviware.loadui.impl.component.generators.FixedVU" label="Fixed Load 2" id="348bc90a-92a6-4f32-822c-4f05b5a82aaa" category="Generators"><con1:properties><con1:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con1:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con1:property><con1:property propagates="true" key="limitVU" type="java.lang.Long">25</con1:property><con1:property propagates="true" key="load" type="java.lang.Long">20</con1:property><con1:property propagates="true" key="interval" type="java.lang.Long">1000</con1:property></con1:properties><con1:attributes><con1:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Load</con1:property></con1:attributes><con1:addons/></con1:component><con1:connection outputTerminalId="3e11ddf6-75fe-4edf-bf47-af3d25b4d62d/outgoingTerminal" inputTerminalId="348bc90a-92a6-4f32-822c-4f05b5a82aaa/stateTerminal"/><con1:connection outputTerminalId="348bc90a-92a6-4f32-822c-4f05b5a82aaa/triggerTerminal" inputTerminalId="7144c3b4-870e-45b2-a8cb-2d43917797f6/triggerTerminal"/><con1:connection outputTerminalId="7144c3b4-870e-45b2-a8cb-2d43917797f6/runningTerminal" inputTerminalId="348bc90a-92a6-4f32-822c-4f05b5a82aaa/Sample Count"/></con1:scene><con1:statistics><con1:page title="DefaultLoadUIStatisticPage"><con1:chartGroup type="com.eviware.loadui.api.statistics.model.chart.line.LineChartView" title="" groupType="Monitors"><con1:chart statisticHolder="fb9cdcae-23e5-4ef2-8db9-dd30d5133072"><con1:attributes><con1:property key="_CHART_segments">77:36:fb9cdcae-23e5-4ef2-8db9-dd30d51330729:Processor16:% Processor Time6:_Total72:36:fb9cdcae-23e5-4ef2-8db9-dd30d51330726:Memory16:Available MBytes4:main</con1:property></con1:attributes></con1:chart><con1:attributes><con1:property key="GroupId">0b6f4612-f1db-4258-b3b9-403c0b372ea6</con1:property></con1:attributes></con1:chartGroup><con1:chartGroup type="com.eviware.loadui.api.statistics.model.chart.line.LineChartView" title="My server 1 Statistics" groupType="Graph"><con1:chart statisticHolder="fb9cdcae-23e5-4ef2-8db9-dd30d5133072"><con1:attributes><con1:property key="_CHART_segments">77:36:fb9cdcae-23e5-4ef2-8db9-dd30d51330729:Processor16:% Processor Time6:_Total72:36:fb9cdcae-23e5-4ef2-8db9-dd30d51330726:Memory16:Available MBytes4:main</con1:property></con1:attributes></con1:chart><con1:attributes><con1:property key="GroupId">8c593fcd-ba93-4298-92a9-680c9038ea15</con1:property></con1:attributes></con1:chartGroup><con1:chartGroup type="com.eviware.loadui.api.statistics.model.chart.line.LineChartView" title="Baseline Statistics" groupType="Graph"><con1:chart statisticHolder="7144c3b4-870e-45b2-a8cb-2d43917797f6"><con1:attributes><con1:property key="_CHART_segments">63:36:7144c3b4-870e-45b2-a8cb-2d43917797f610:Throughput3:TPS4:main</con1:property></con1:attributes></con1:chart><con1:chart statisticHolder="488fa25a-0f8e-4b31-b305-a57aa86b0206"><con1:attributes><con1:property key="_CHART_segments">67:36:488fa25a-0f8e-4b31-b305-a57aa86b020610:Time Taken7:AVERAGE4:main76:36:488fa25a-0f8e-4b31-b305-a57aa86b020610:Time Taken15:PERCENTILE_95TH4:main65:36:488fa25a-0f8e-4b31-b305-a57aa86b020610:Running VU5:TOTAL4:main</con1:property></con1:attributes></con1:chart><con1:attributes><con1:property key="GroupId">f29cd515-4202-4814-83ae-6b6cc1b39895</con1:property></con1:attributes></con1:chartGroup></con1:page></con1:statistics><con1:heatUpTime>15</con1:heatUpTime></con1:loadui-project><con:loadUITestScenario projectId="488fa25a-0f8e-4b31-b305-a57aa86b0206" scenarioId="f226eec8-4746-450c-919a-7b5f9b207733" name="New Scenario" id="aa50442d-500d-4b6c-9dbc-b44653166d02"><con:settings/></con:loadUITestScenario><con:loadUIPanelData id="c38d2c38-b41a-4a89-b2bb-f0da5e2935d8"><con:panel>Log</con:panel><con:data><con:paramName>column_width@Timestamp</con:paramName><con:paramValue>84</con:paramValue></con:data><con:data><con:paramName>column_visible@Timestamp</con:paramName><con:paramValue>true</con:paramValue></con:data><con:data><con:paramName>column_width@ID</con:paramName><con:paramValue>57</con:paramValue></con:data><con:data><con:paramName>column_visible@ID</con:paramName><con:paramValue>true</con:paramValue></con:data><con:data><con:paramName>column_width@Status</con:paramName><con:paramValue>57</con:paramValue></con:data><con:data><con:paramName>column_visible@Status</con:paramName><con:paramValue>true</con:paramValue></con:data><con:data><con:paramName>column_width@TriggerTimestamp</con:paramName><con:paramValue>84</con:paramValue></con:data><con:data><con:paramName>column_visible@TriggerTimestamp</con:paramName><con:paramValue>true</con:paramValue></con:data><con:data><con:paramName>column_width@TimeTaken</con:paramName><con:paramValue>115</con:paramValue></con:data><con:data><con:paramName>column_visible@TimeTaken</con:paramName><con:paramValue>true</con:paramValue></con:data><con:data><con:paramName>column_width@_wait_time_</con:paramName><con:paramValue>106</con:paramValue></con:data><con:data><con:paramName>column_visible@_wait_time_</con:paramName><con:paramValue>true</con:paramValue></con:data><con:data><con:paramName>column_width@Bytes</con:paramName><con:paramValue>52</con:paramValue></con:data><con:data><con:paramName>column_visible@Bytes</con:paramName><con:paramValue>true</con:paramValue></con:data><con:data><con:paramName>column_width@HTTP Status</con:paramName><con:paramValue>90</con:paramValue></con:data><con:data><con:paramName>column_visible@HTTP Status</con:paramName><con:paramValue>true</con:paramValue></con:data><con:data><con:paramName>column_width@CurrentlyRunning</con:paramName><con:paramValue>75</con:paramValue></con:data><con:data><con:paramName>column_visible@CurrentlyRunning</con:paramName><con:paramValue>true</con:paramValue></con:data><con:data><con:paramName>column_width@Request</con:paramName><con:paramValue>67</con:paramValue></con:data><con:data><con:paramName>column_visible@Request</con:paramName><con:paramValue>false</con:paramValue></con:data><con:data><con:paramName>column_width@Response</con:paramName><con:paramValue>77</con:paramValue></con:data><con:data><con:paramName>column_visible@Response</con:paramName><con:paramValue>false</con:paramValue></con:data><con:data><con:paramName>column_width@soapui_context</con:paramName><con:paramValue>107</con:paramValue></con:data><con:data><con:paramName>column_visible@soapui_context</con:paramName><con:paramValue>false</con:paramValue></con:data></con:loadUIPanelData><con:statistics id="8c593fcd-ba93-4298-92a9-680c9038ea15"/><con:statistics id="f29cd515-4202-4814-83ae-6b6cc1b39895"/><con:reportParameters/></con:loadUiTest><con:tags/></con:soapui-project>